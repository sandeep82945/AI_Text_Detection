{
    "abstractText": "The ability to derive underlying principles from a handful of observations and then generalize to novel situations\u2014known as inductive reasoning\u2014is central to human intelligence. Prior work suggests that language models (LMs) often fall short on inductive reasoning, despite achieving impressive success on research benchmarks. In this work, we conduct a systematic study of the inductive reasoning capabilities of LMs through iterative hypothesis refinement, a technique that more closely mirrors the human inductive process than standard input-output prompting. Iterative hypothesis refinement employs a three-step process: proposing, selecting, and refining hypotheses in the form of textual rules. By examining the intermediate rules, we observe that LMs are phenomenal hypothesis proposers (i.e., generating candidate rules), and when coupled with a (task-specific) symbolic interpreter that is able to systematically filter the proposed set of rules, this hybrid approach achieves strong results across inductive reasoning benchmarks that require inducing causal relations, language-like instructions, and symbolic concepts. However, they also behave as puzzling inductive reasoners, showing notable performance gaps in rule induction (i.e., identifying plausible rules) and rule application (i.e., applying proposed rules to instances), suggesting that LMs are proposing hypotheses without being able to actually apply the rules. Through empirical and human analyses, we further reveal several discrepancies between the inductive reasoning processes of LMs and humans, shedding light on both the potentials and limitations of using LMs in inductive reasoning tasks.",
    "authors": [],
    "id": "SP:b53dfb13a9d254977fa972aa7ad539c78f87fa51",
    "references": [
        {
            "authors": [
                "Sam Acquaviva",
                "Yewen Pu",
                "Marta Kryven",
                "Theodoros Sechopoulos",
                "Catherine Wong",
                "Gabrielle Ecanow",
                "Maxwell Nye",
                "Michael Tessler",
                "Josh Tenenbaum"
            ],
            "title": "Communicating natural programs to humans and machines",
            "venue": "Advances in Neural Information Processing Systems,",
            "year": 2022
        },
        {
            "authors": [
                "Ayush Agrawal",
                "Lester Mackey",
                "Adam Tauman Kalai"
            ],
            "title": "Do language models know when they\u2019re hallucinating references",
            "venue": "ArXiv preprint,",
            "year": 2023
        },
        {
            "authors": [
                "Ekin Akyurek",
                "Jacob Andreas"
            ],
            "title": "Lexicon learning for few shot sequence modeling",
            "venue": "Proceedings of the 59th Annual Meeting of the Association for Computational Linguistics and the 11th International Joint Conference on Natural Language Processing (Volume 1: Long Papers), pp. 4934\u20134946,",
            "year": 2021
        },
        {
            "authors": [
                "Ferran Alet",
                "Javier Lopez-Contreras",
                "James Koppel",
                "Maxwell I. Nye",
                "Armando Solar-Lezama",
                "Tom\u00e1s Lozano-P\u00e9rez",
                "Leslie Pack Kaelbling",
                "Joshua B. Tenenbaum"
            ],
            "title": "A large-scale benchmark for few-shot program induction and synthesis",
            "venue": "Proceedings of the 38th International Conference on Machine Learning,",
            "year": 2021
        },
        {
            "authors": [
                "Jacob Andreas",
                "Dan Klein",
                "Sergey Levine"
            ],
            "title": "Learning with latent language. In Proceedings of the 2018 Conference of the North American Chapter of the Association for Computational Linguistics: Human Language Technologies, Volume 1 (Long Papers)",
            "venue": "Association for Computational Linguistics. doi: 10.18653/v1/N18-1197. URL https://aclanthology.org/N18-1197",
            "year": 2018
        },
        {
            "authors": [
                "Neil Bramley",
                "Anselm Rothe",
                "Josh Tenenbaum",
                "Fei Xu",
                "Todd Gureckis"
            ],
            "title": "Grounding compositional hypothesis generation in specific instances",
            "venue": "In Proceedings of the 40th annual conference of the cognitive science society,",
            "year": 2018
        },
        {
            "authors": [
                "Wenhu Chen",
                "Xueguang Ma",
                "Xinyi Wang",
                "William W Cohen"
            ],
            "title": "Program of thoughts prompting: Disentangling computation from reasoning for numerical reasoning tasks",
            "venue": "ArXiv preprint,",
            "year": 2022
        },
        {
            "authors": [
                "Xinyun Chen",
                "Maxwell Lin",
                "Nathanael Sch\u00e4rli",
                "Denny Zhou"
            ],
            "title": "Teaching large language models to self-debug",
            "venue": "ArXiv preprint,",
            "year": 2023
        },
        {
            "authors": [
                "Yanda Chen",
                "Ruiqi Zhong",
                "Narutatsu Ri",
                "Chen Zhao",
                "He He",
                "Jacob Steinhardt",
                "Zhou Yu",
                "Kathleen McKeown"
            ],
            "title": "Do models explain themselves? counterfactual simulatability of natural language explanations",
            "venue": "ArXiv preprint,",
            "year": 2023
        },
        {
            "authors": [
                "Fran\u00e7ois Chollet"
            ],
            "title": "On the measure of intelligence",
            "venue": "ArXiv preprint,",
            "year": 2019
        },
        {
            "authors": [
                "Ishita Dasgupta",
                "Andrew K Lampinen",
                "Stephanie CY Chan",
                "Antonia Creswell",
                "Dharshan Kumaran",
                "James L McClelland",
                "Felix Hill"
            ],
            "title": "Language models show human-like content effects on reasoning",
            "venue": "ArXiv preprint,",
            "year": 2022
        },
        {
            "authors": [
                "Jesse Dodge",
                "Maarten Sap",
                "Ana Marasovi\u0107",
                "William Agnew",
                "Gabriel Ilharco",
                "Dirk Groeneveld",
                "Margaret Mitchell",
                "Matt Gardner"
            ],
            "title": "Documenting large webtext corpora: A case study on the colossal clean crawled corpus",
            "venue": "In Proceedings of the 2021 Conference on Empirical Methods in Natural Language Processing,",
            "year": 2021
        },
        {
            "authors": [
                "Nouha Dziri",
                "Ximing Lu",
                "Melanie Sclar",
                "Xiang Lorraine Li",
                "Liwei Jian",
                "Bill Yuchen Lin",
                "Peter West",
                "Chandra Bhagavatula",
                "Ronan Le Bras",
                "Jena D Hwang"
            ],
            "title": "Faith and fate: Limits of transformers on compositionality",
            "venue": "ArXiv preprint,",
            "year": 2023
        },
        {
            "authors": [
                "Kevin Ellis"
            ],
            "title": "Modeling human-like concept learning with bayesian inference over natural language",
            "venue": "ArXiv preprint,",
            "year": 2023
        },
        {
            "authors": [
                "Kevin Ellis",
                "Adam Albright",
                "Armando Solar-Lezama",
                "Joshua B Tenenbaum",
                "Timothy J O\u2019Donnell"
            ],
            "title": "Synthesizing theories of human language with bayesian program induction",
            "venue": "Nature communications,",
            "year": 2022
        },
        {
            "authors": [
                "Kevin Ellis",
                "Lionel Wong",
                "Maxwell Nye",
                "Mathias Sable-Meyer",
                "Luc Cary",
                "Lore Anaya Pozo",
                "Luke Hewitt",
                "Armando Solar-Lezama",
                "Joshua B Tenenbaum"
            ],
            "title": "Dreamcoder: growing generalizable, interpretable knowledge with wake\u2013sleep bayesian program learning",
            "venue": "Philosophical Transactions of the Royal Society A,",
            "year": 2022
        },
        {
            "authors": [
                "Goker Erdogan",
                "Ilker Yildirim",
                "Robert A Jacobs"
            ],
            "title": "From sensory signals to modality-independent conceptual representations: A probabilistic language of thought approach",
            "venue": "PLoS computational biology,",
            "year": 2015
        },
        {
            "authors": [
                "Jonathan St BT Evans",
                "Jodie Curtis-Holmes"
            ],
            "title": "Rapid responding increases belief bias: Evidence for the dual-process theory of reasoning",
            "venue": "Thinking & Reasoning,",
            "year": 2005
        },
        {
            "authors": [
                "Jerry A Fodor"
            ],
            "title": "The language of thought, volume 5",
            "venue": "Harvard university press,",
            "year": 1975
        },
        {
            "authors": [
                "Jan-Philipp Fr\u00e4nken",
                "Nikos C Theodoropoulos",
                "Neil R Bramley"
            ],
            "title": "Algorithms of adaptation in inductive inference",
            "venue": "Cognitive Psychology,",
            "year": 2022
        },
        {
            "authors": [
                "Kunihiko Fukushima"
            ],
            "title": "A neural network model for selective attention in visual pattern recognition",
            "venue": "Biological Cybernetics,",
            "year": 1986
        },
        {
            "authors": [
                "Luyu Gao",
                "Aman Madaan",
                "Shuyan Zhou",
                "Uri Alon",
                "Pengfei Liu",
                "Yiming Yang",
                "Jamie Callan",
                "Graham Neubig"
            ],
            "title": "Pal: Program-aided language models",
            "venue": "In International Conference on Machine Learning,",
            "year": 2023
        },
        {
            "authors": [
                "Ga\u00ebl Gendron",
                "Qiming Bao",
                "Michael Witbrock",
                "Gillian Dobbie"
            ],
            "title": "Large language models are not abstract reasoners",
            "venue": "ArXiv preprint,",
            "year": 2023
        },
        {
            "authors": [
                "Noah D Goodman",
                "Joshua B Tenenbaum",
                "Jacob Feldman",
                "Thomas L Griffiths"
            ],
            "title": "A rational analysis of rule-based concept learning",
            "venue": "Cognitive science,",
            "year": 2008
        },
        {
            "authors": [
                "Alison Gopnik",
                "David M Sobel",
                "Laura E Schulz",
                "Clark Glymour"
            ],
            "title": "Causal learning mechanisms in very young children: two-, three-, and four-year-olds infer causal relations from patterns of variation and covariation",
            "venue": "Developmental psychology,",
            "year": 2001
        },
        {
            "authors": [
                "Patrick Haluptzok",
                "Matthew Bowers",
                "Adam Tauman Kalai"
            ],
            "title": "Language models can teach themselves to program better",
            "venue": "In The Eleventh International Conference on Learning Representations,",
            "year": 2022
        },
        {
            "authors": [
                "Simon Jerome Han",
                "Keith J Ransom",
                "Andrew Perfors",
                "Charles Kemp"
            ],
            "title": "Inductive reasoning in humans and large language models",
            "venue": "Cognitive Systems Research,",
            "year": 2023
        },
        {
            "authors": [
                "Evan Heit"
            ],
            "title": "Properties of inductive reasoning",
            "venue": "Psychonomic Bulletin & Review,",
            "year": 2000
        },
        {
            "authors": [
                "Or Honovich",
                "Uri Shaham",
                "Samuel R. Bowman",
                "Omer Levy"
            ],
            "title": "Instruction induction: From few examples to natural language task descriptions. In Proceedings of the 61st Annual Meeting of the Association for Computational Linguistics (Volume 1: Long Papers)",
            "year": 2023
        },
        {
            "authors": [
                "Yi Hu",
                "Haotong Yang",
                "Zhouchen Lin",
                "Muhan Zhang"
            ],
            "title": "Code prompting: a neural symbolic method for complex reasoning in large language models",
            "venue": "ArXiv preprint,",
            "year": 2023
        },
        {
            "authors": [
                "David Hume (ed"
            ],
            "title": "Enquiry Concerning Human Understanding",
            "year": 1904
        },
        {
            "authors": [
                "Shuyang Jiang",
                "Yuhao Wang",
                "Yu Wang"
            ],
            "title": "Selfevolve: A code evolution framework via large language models",
            "venue": "ArXiv preprint,",
            "year": 2023
        },
        {
            "authors": [
                "Aysja Johnson",
                "Wai Keen Vong",
                "Brenden M Lake",
                "Todd M Gureckis"
            ],
            "title": "Fast and flexible: Human program induction in abstract reasoning tasks",
            "venue": "arXiv preprint arXiv:2103.05823,",
            "year": 2021
        },
        {
            "authors": [
                "Charles Kemp",
                "Joshua B Tenenbaum"
            ],
            "title": "Structured statistical models of inductive reasoning",
            "venue": "Psychological review,",
            "year": 2009
        },
        {
            "authors": [
                "Darren Key",
                "Wen-Ding Li",
                "Kevin Ellis"
            ],
            "title": "I speak, you verify: Toward trustworthy neural program synthesis",
            "venue": "ArXiv preprint,",
            "year": 2022
        },
        {
            "authors": [
                "Najoung Kim",
                "Tal Linzen",
                "Paul Smolensky"
            ],
            "title": "Uncontrolled lexical exposure leads to overestimation of compositional generalization in pretrained models",
            "venue": "ArXiv preprint,",
            "year": 2022
        },
        {
            "authors": [
                "Subin Kim",
                "Prin Phunyaphibarn",
                "Donghyun Ahn",
                "Sundong Kim"
            ],
            "title": "Playgrounds for abstraction and reasoning",
            "venue": "In NeurIPS 2022 Workshop on Neuro Causal and Symbolic AI (nCSI),",
            "year": 2022
        },
        {
            "authors": [
                "Takeshi Kojima",
                "Shixiang Shane Gu",
                "Machel Reid",
                "Yutaka Matsuo",
                "Yusuke Iwasawa"
            ],
            "title": "Large language models are zero-shot reasoners",
            "venue": "Advances in neural information processing systems,",
            "year": 2022
        },
        {
            "authors": [
                "Brenden M. Lake",
                "Marco Baroni"
            ],
            "title": "Generalization without systematicity: On the compositional skills of sequence-to-sequence recurrent networks",
            "venue": "Proceedings of the 35th International Conference on Machine Learning,",
            "year": 2018
        },
        {
            "authors": [
                "Brenden M Lake",
                "Ruslan Salakhutdinov",
                "Joshua B Tenenbaum"
            ],
            "title": "Human-level concept learning through probabilistic program induction",
            "year": 2015
        },
        {
            "authors": [
                "Brenden M. Lake",
                "Tomer D. Ullman",
                "Joshua B. Tenenbaum",
                "Samuel J. Gershman"
            ],
            "title": "Building machines that learn and think like people",
            "venue": "Behavioral and Brain Sciences,",
            "year": 2017
        },
        {
            "authors": [
                "Brenden M. Lake",
                "Tal Linzen",
                "Marco Baroni"
            ],
            "title": "Human few-shot learning of compositional instructions",
            "venue": "In Annual Meeting of the Cognitive Science Society,",
            "year": 2019
        },
        {
            "authors": [
                "Xiang Lisa Li",
                "Vaishnavi Shrivastava",
                "Siyan Li",
                "Tatsunori Hashimoto",
                "Percy Liang"
            ],
            "title": "Benchmarking and improving generator-validator consistency of language models",
            "venue": "ArXiv preprint,",
            "year": 2023
        },
        {
            "authors": [
                "Aman Madaan",
                "Niket Tandon",
                "Prakhar Gupta",
                "Skyler Hallinan",
                "Luyu Gao",
                "Sarah Wiegreffe",
                "Uri Alon",
                "Nouha Dziri",
                "Shrimai Prabhumoye",
                "Yiming Yang"
            ],
            "title": "Self-refine: Iterative refinement with self-feedback",
            "venue": "ArXiv preprint,",
            "year": 2023
        },
        {
            "authors": [
                "Inbal Magar",
                "Roy Schwartz"
            ],
            "title": "Data contamination: From memorization to exploitation",
            "venue": "In Proceedings of the 60th Annual Meeting of the Association for Computational Linguistics (Volume 2: Short Papers),",
            "year": 2022
        },
        {
            "authors": [
                "Suvir Mirchandani",
                "Fei Xia",
                "Pete Florence",
                "Brian Ichter",
                "Danny Driess",
                "Montserrat Gonzalez Arenas",
                "Kanishka Rao",
                "Dorsa Sadigh",
                "Andy Zeng"
            ],
            "title": "Large language models as general pattern machines",
            "venue": "ArXiv preprint,",
            "year": 2023
        },
        {
            "authors": [
                "Arseny Moskvichev",
                "Victor Vikram Odouard",
                "Melanie Mitchell"
            ],
            "title": "The conceptarc benchmark: Evaluating understanding and generalization in the arc domain",
            "venue": "ArXiv preprint,",
            "year": 2023
        },
        {
            "authors": [
                "Jesse Mu",
                "Percy Liang",
                "Noah Goodman"
            ],
            "title": "Shaping visual representations with language for few-shot classification",
            "venue": "In Proceedings of the 58th Annual Meeting of the Association for Computational Linguistics, pp. 4823\u20134830,",
            "year": 2020
        },
        {
            "authors": [
                "Allen Newell"
            ],
            "title": "Physical symbol systems",
            "venue": "Cognitive science,",
            "year": 1980
        },
        {
            "authors": [
                "Ansong Ni",
                "Srini Iyer",
                "Dragomir Radev",
                "Veselin Stoyanov",
                "Wen-tau Yih",
                "Sida Wang",
                "Xi Victoria Lin"
            ],
            "title": "Lever: Learning to verify language-to-code generation with execution",
            "venue": "In International Conference on Machine Learning,",
            "year": 2023
        },
        {
            "authors": [
                "Robert M Nosofsky",
                "Thomas J Palmeri",
                "Stephen C McKinley"
            ],
            "title": "Rule-plus-exception model of classification learning",
            "venue": "Psychological review,",
            "year": 1994
        },
        {
            "authors": [
                "Maxwell Nye",
                "Anders Johan Andreassen",
                "Guy Gur-Ari",
                "Henryk Michalewski",
                "Jacob Austin",
                "David Bieber",
                "David Dohan",
                "Aitor Lewkowycz",
                "Maarten Bosma",
                "David Luan"
            ],
            "title": "Show your work: Scratchpads for intermediate computation with language models",
            "venue": "arXiv preprint arXiv:2112.00114,",
            "year": 2021
        },
        {
            "authors": [
                "Maxwell I. Nye",
                "Armando Solar-Lezama",
                "Josh Tenenbaum",
                "Brenden M. Lake"
            ],
            "title": "Learning compositional rules via neural program synthesis",
            "venue": "Advances in Neural Information Processing Systems 33: Annual Conference on Neural Information Processing Systems",
            "year": 2020
        },
        {
            "authors": [
                "Theo X Olausson",
                "Jeevana Priya Inala",
                "Chenglong Wang",
                "Jianfeng Gao",
                "Armando SolarLezama"
            ],
            "title": "Demystifying gpt self-repair for code generation",
            "venue": "ArXiv preprint,",
            "year": 2023
        },
        {
            "authors": [
                "Daniel N. Osherson",
                "Ormond Wilkie",
                "Edward E. Smith",
                "Alejandro L\u00f3pez",
                "Eldar Shafir"
            ],
            "title": "Category-based induction",
            "venue": "Psychological Review,",
            "year": 1990
        },
        {
            "authors": [
                "Arkil Patel",
                "Satwik Bhattamishra",
                "Phil Blunsom",
                "Navin Goyal"
            ],
            "title": "Revisiting the compositional generalization abilities of neural sequence models",
            "venue": "In Proceedings of the 60th Annual Meeting of the Association for Computational Linguistics",
            "year": 2022
        },
        {
            "authors": [
                "Baolin Peng",
                "Michel Galley",
                "Pengcheng He",
                "Hao Cheng",
                "Yujia Xie",
                "Yu Hu",
                "Qiuyuan Huang",
                "Lars Liden",
                "Zhou Yu",
                "Weizhu Chen"
            ],
            "title": "Check your facts and try again: Improving large language models with external knowledge and automated feedback",
            "venue": "ArXiv preprint,",
            "year": 2023
        },
        {
            "authors": [
                "Steven T Piantadosi",
                "Joshua B Tenenbaum",
                "Noah D Goodman"
            ],
            "title": "The logical primitives of thought: Empirical foundations for compositional cognitive models",
            "venue": "Psychological review,",
            "year": 2016
        },
        {
            "authors": [
                "Joshua Stewart Rule"
            ],
            "title": "The child as hacker: building more human-like models of learning",
            "venue": "PhD thesis, Massachusetts Institute of Technology,",
            "year": 2020
        },
        {
            "authors": [
                "Feras A Saad",
                "Marco F Cusumano-Towner",
                "Ulrich Schaechtle",
                "Martin C Rinard",
                "Vikash K Mansinghka"
            ],
            "title": "Bayesian synthesis of probabilistic programs for automatic data modeling",
            "venue": "Proceedings of the ACM on Programming Languages,",
            "year": 2019
        },
        {
            "authors": [
                "Mathias Sabl\u00e9-Meyer",
                "Kevin Ellis",
                "Josh Tenenbaum",
                "Stanislas Dehaene"
            ],
            "title": "A language of thought for the mental representation of geometric shapes",
            "venue": "Cognitive Psychology,",
            "year": 2022
        },
        {
            "authors": [
                "Swarnadeep Saha",
                "Peter Hase",
                "Nazneen Rajani",
                "Mohit Bansal"
            ],
            "title": "Are hard examples also harder to explain? a study with human and model-generated explanations",
            "venue": "In Proceedings of the 2022 Conference on Empirical Methods in Natural Language Processing,",
            "year": 2022
        },
        {
            "authors": [
                "Chandan Singh",
                "John X Morris",
                "Jyoti Aneja",
                "Alexander M Rush",
                "Jianfeng Gao"
            ],
            "title": "Explaining patterns in data with language models via interpretable autoprompting",
            "venue": "ArXiv preprint,",
            "year": 2022
        },
        {
            "authors": [
                "David Smith",
                "Jason Eisner"
            ],
            "title": "Quasi-synchronous grammars: Alignment by soft projection of syntactic dependencies",
            "venue": "In Proceedings on the Workshop on Statistical Machine Translation,",
            "year": 2006
        },
        {
            "authors": [
                "David M Sobel",
                "Joshua B Tenenbaum",
                "Alison Gopnik"
            ],
            "title": "Children\u2019s causal inferences from indirect evidence: Backwards blocking and bayesian reasoning in preschoolers",
            "venue": "Cognitive science,",
            "year": 2004
        },
        {
            "authors": [
                "Xiaojuan Tang",
                "Zilong Zheng",
                "Jiaqi Li",
                "Fanxu Meng",
                "Song-Chun Zhu",
                "Yitao Liang",
                "Muhan Zhang"
            ],
            "title": "Large language models are in-context semantic reasoners rather than symbolic reasoners",
            "venue": "ArXiv preprint,",
            "year": 2023
        },
        {
            "authors": [
                "Joshua Tenenbaum"
            ],
            "title": "Rules and similarity in concept learning",
            "venue": "Advances in neural information processing systems,",
            "year": 1999
        },
        {
            "authors": [
                "Joshua B. Tenenbaum",
                "Charles Kemp",
                "Thomas L. Griffiths",
                "Noah D. Goodman"
            ],
            "title": "How to grow a mind: Statistics, structure, and abstraction",
            "venue": "Science, 331(6022):1279\u20131285,",
            "year": 2011
        },
        {
            "authors": [
                "Pratiksha Thaker",
                "Joshua B Tenenbaum",
                "Samuel J Gershman"
            ],
            "title": "Online learning of symbolic concepts",
            "venue": "Journal of Mathematical Psychology,",
            "year": 2017
        },
        {
            "authors": [
                "Hugo Touvron",
                "Louis Martin",
                "Kevin Stone",
                "Peter Albert",
                "Amjad Almahairi",
                "Yasmine Babaei",
                "Nikolay Bashlykov",
                "Soumya Batra",
                "Prajjwal Bhargava",
                "Shruti Bhosale"
            ],
            "title": "Llama 2: Open foundation and fine-tuned chat models",
            "venue": "arXiv preprint arXiv:2307.09288,",
            "year": 2023
        },
        {
            "authors": [
                "Wai Keen Vong",
                "Brenden M. Lake"
            ],
            "title": "Few-shot image classification by generating natural language rules",
            "venue": "In ACL Workshop on Learning with Natural Language Supervision,",
            "year": 2022
        },
        {
            "authors": [
                "Ruocheng Wang",
                "Eric Zelikman",
                "Gabriel Poesia",
                "Yewen Pu",
                "Nick Haber",
                "Noah D Goodman"
            ],
            "title": "Hypothesis search: Inductive reasoning with language models",
            "venue": "ArXiv preprint,",
            "year": 2023
        },
        {
            "authors": [
                "Xuezhi Wang",
                "Jason Wei",
                "Dale Schuurmans",
                "Quoc Le",
                "Ed Chi",
                "Sharan Narang",
                "Aakanksha Chowdhery",
                "Denny Zhou"
            ],
            "title": "Self-consistency improves chain of thought reasoning in language models",
            "venue": "In The Eleventh International Conference on Learning Representations,",
            "year": 2023
        },
        {
            "authors": [
                "Taylor Webb",
                "Keith J Holyoak",
                "Hongjing Lu"
            ],
            "title": "Emergent analogical reasoning in large language models",
            "venue": "Nature Human Behaviour,",
            "year": 2023
        },
        {
            "authors": [
                "Jason Wei",
                "Xuezhi Wang",
                "Dale Schuurmans",
                "Maarten Bosma",
                "Fei Xia",
                "Ed Chi",
                "Quoc V Le",
                "Denny Zhou"
            ],
            "title": "Chain-of-thought prompting elicits reasoning in large language models",
            "venue": "Advances in Neural Information Processing Systems,",
            "year": 2022
        },
        {
            "authors": [
                "Lionel Wong",
                "Gabriel Grand",
                "Alexander K Lew",
                "Noah D Goodman",
                "Vikash K Mansinghka",
                "Jacob Andreas",
                "Joshua B Tenenbaum"
            ],
            "title": "From word models to world models: Translating from natural language to the probabilistic language of thought",
            "venue": "ArXiv preprint,",
            "year": 2023
        },
        {
            "authors": [
                "Fangzhi Xu",
                "Qika Lin",
                "Jiawei Han",
                "Tianzhe Zhao",
                "Jun Liu",
                "Erik Cambria"
            ],
            "title": "Are large language models really good logical reasoners? a comprehensive evaluation from deductive, inductive and abductive views",
            "venue": "ArXiv preprint,",
            "year": 2023
        },
        {
            "authors": [
                "Fei Xu",
                "Joshua B Tenenbaum"
            ],
            "title": "Word learning as bayesian inference",
            "venue": "Psychological review,",
            "year": 2007
        },
        {
            "authors": [
                "Yudong Xu",
                "Wenhao Li",
                "Pashootan Vaezipoor",
                "Scott Sanner",
                "Elias B Khalil"
            ],
            "title": "Llms and the abstraction and reasoning corpus: Successes, failures, and the importance of object-based representations",
            "venue": "ArXiv preprint,",
            "year": 2023
        },
        {
            "authors": [
                "Zonglin Yang",
                "Li Dong",
                "Xinya Du",
                "Hao Cheng",
                "Erik Cambria",
                "Xiaodong Liu",
                "Jianfeng Gao",
                "Furu Wei"
            ],
            "title": "Language models as inductive reasoners",
            "venue": "ArXiv preprint,",
            "year": 2022
        },
        {
            "authors": [
                "Chi Zhang",
                "Baoxiong Jia",
                "Mark Edmonds",
                "Song-Chun Zhu",
                "Yixin Zhu"
            ],
            "title": "ACRE: abstract causal reasoning beyond covariation",
            "venue": "In IEEE Conference on Computer Vision and Pattern Recognition, CVPR 2021,",
            "year": 2021
        },
        {
            "authors": [
                "Kexun Zhang",
                "Danqing Wang",
                "Jingtao Xia",
                "William Yang Wang",
                "Lei Li"
            ],
            "title": "Algo: Synthesizing algorithmic programs with generated oracle verifiers",
            "venue": "ArXiv preprint,",
            "year": 2023
        },
        {
            "authors": [
                "Muru Zhang",
                "Ofir Press",
                "William Merrill",
                "Alisa Liu",
                "Noah A Smith"
            ],
            "title": "How language model hallucinations can snowball",
            "venue": "ArXiv preprint,",
            "year": 2023
        },
        {
            "authors": [
                "Ruiqi Zhong",
                "Charlie Snell",
                "Dan Klein",
                "Jacob Steinhardt"
            ],
            "title": "Describing differences between text distributions with natural language",
            "venue": "International Conference on Machine Learning,",
            "year": 2022
        },
        {
            "authors": [
                "Ruiqi Zhong",
                "Peter Zhang",
                "Steve Li",
                "Jinwoo Ahn",
                "Dan Klein",
                "Jacob Steinhardt"
            ],
            "title": "Goal driven discovery of distributional differences via language descriptions",
            "venue": "ArXiv preprint,",
            "year": 2023
        },
        {
            "authors": [
                "ACRE Following Gendron"
            ],
            "title": "2023), we use textual representations of the original images by representing each object with its corresponding natural language description",
            "year": 2023
        },
        {
            "authors": [
                "Patel"
            ],
            "title": "inputs. We did not consider English words because of potential issues of data contamination (Dodge et al., 2021",
            "venue": "(Kim et al.,",
            "year": 2022
        },
        {
            "authors": [
                "Kim"
            ],
            "title": "Due to the limited context lengths of LMs, we only use the first 16 examples from BIG-Bench (bench authors, 2023): 8 for seen examples and 8 for unseen examples. We manually examined the exemplars and found 8 examples are generally sufficient to describe the pattern",
            "year": 2022
        },
        {
            "authors": [
                "Acquaviva"
            ],
            "title": "if a pixel is green (3), then change it to red (2)\u201d)",
            "year": 2022
        },
        {
            "authors": [
                "Johnson"
            ],
            "title": "Under review as a conference paper at ICLR 2024 erage human performance of 45.9%.13 For MiniARC, Kim et al. (2022b) did not provide any human experiment results",
            "year": 2023
        },
        {
            "authors": [
                "Acquaviva"
            ],
            "title": "ConceptARC, a variant of ARC, and reported an average human performance of 90.9% in solving test",
            "year": 2022
        }
    ],
    "sections": [
        {
            "heading": "1 INTRODUCTION",
            "text": "Inductive reasoning, i.e., the ability to identify common patterns and form high-level abstractions from limited observations, is considered key to human intelligence (Lake et al., 2017; Chollet, 2019). For instance, humans can quickly identify the generalizable list operation rule \u201cselecting the first item\u201d based on only a few observations (Figure 1, top). Although the precise cognitive mechanisms behind inductive reasoning remain unknown, one compelling hypothesis in cognitive science posits that humans approach this challenge through an iterative process that involves proposing hypotheses, testing them against observations, and refining them accordingly (Heit, 2000; Fra\u0308nken et al., 2022). Returning to the above example, while the hypothesis \u201cselecting the smallest item\u201d may seem plausible based on the first two examples, applying this rule to the final example reveals the need for refinement, ultimately favoring \u201cselecting the first item\u201d as a more accurate hypothesis.\nWith the increasing power of state-of-the-art LMs (OpenAI, 2023; Anthropic, 2023), there is growing interest in exploring these models\u2019 reasoning capabilities vis-a\u0300-vis human inductive reasoning. How are their performances and underlying mechanisms similar to (and contrasted with) those of humans? This work investigates LMs\u2019 inductive reasoning capabilities through the lens of iterative hypothesis refinement: hypotheses generation, selection, and refinement. Specifically, we use an LM to propose a set of free-form or constrained hypotheses based on observations. The proposed hypotheses are then verified against observations via off-the-shelf symbolic interpreters1, e.g., gram-\n1If the hypothesis is in free-form natural language, we additionally ask an LM to translate it into a specific format, e.g., code, that is interpretable by the symbolic interpreter. See Appendix D for examples.\nmar parsers or code interpreters, which can determine if an hypothesis applies to specific instances. The hypothesis that covers most number of observations is then selected to be further refined by the LM. This process is repeated to induce the final hypothesis.\nResults across four distinct tasks, including inducing causal relations (Zhang et al., 2021), languagelike compositional instructions (Lake et al., 2019), symbolic operations (Rule, 2020), and visual concepts (Kim et al., 2022b), show that this iterative hypothesis refinement process significantly improves upon standard input-output (IO) prompting. We find that LMs are particularly good at generating candidate rules, and when coupled with a symbolic interpreter that can provide accurate feedback with which to refine hypotheses, this hybrid induction approach is effective.\nHowever, a closer inspection of the refinement pipeline reveals a more nuanced view of the putative inductive reasoning process of LMs. Despite being able to generate plausible candidate rules, LMs display a range of puzzling counterintuitive behaviors. For one, while we might expect humans be able to apply the rules they propose, we find that LMs are often unable to correctly applying their own proposed rules (\u00a74.1). Moreover, while humans can make robust inductions by abstracting away from small perturbations present in examples (e.g., different representational forms of examples), we observe LMs to be highly brittle in the face of even minor perturbations (\u00a74.2). Finally, a human study reveals that rules induced by LMs generally have different content and form compared to rules generated by humans. LMs often provide verbose descriptions of patterns but fail to leverage pragmatic communication strategies commonly seen in human induction (\u00a74.3).\nOur study unveils the paradoxical inductive capabilities of LMs: they are simultaneously phenomenal hypothesis proposers and puzzling inductive reasoners. Our paper connects to classical approaches for concept induction (Tenenbaum et al., 2011; Ellis et al., 2023, i.a.), latent language optimization (Andreas et al., 2018; Mu et al., 2020, i.a.), and instruction induction (Honovich et al., 2023). While similar in spirit to recent work on exploring inductive reasoning with LMs (Wang et al., 2023a), our work offers a nuanced exploration of both the potentials and limitations of LMs."
        },
        {
            "heading": "2 INDUCTIVE REASONING WITH LMS: EXPERIMENTAL SETUP",
            "text": "We consider the rule induction problem of inferring a function f : X \u2192 Y that maps an input x \u2208 X to an output y \u2208 Y . The rule, f , can take various forms, such as mathematical operations, grammar, and even natural language descriptions (see Appendix D for examples). For each task \u03c4 , we have a set of examples D\u03c4 consisting of input-output pairs (x, y). We further divide D\u03c4 into seen examples, Ds\u03c4 , and unseen examples, Du\u03c4 . The goal is to induce the f that best describes D\u03c4 using only Ds\u03c4 . A good rule thus requires a balance between precision and coverage, i.e., it should be simultaneously expressive enough to capture Ds\u03c4 and generalizable to Du\u03c4 .\nWe assess an LM\u2019s ability to induce rules through prompting. Let h \u2208 \u03a3\u2217 be a rule generated by an LM, where \u03a3 is the LM\u2019s vocabulary. Since we cannot directly apply h to x (h is just a piece of text), we make use of an interpreter I\u03c4 : \u03a3\u2217 \u2192 F for each task \u03c4 where F is the space of all functions from X to Y (i.e., f \u2208 F). That is, the interpreter I\u03c4 \u201ccompiles\u201d h into a function that can be applied to x.2 The quality of rules is evaluated based on their performance on unseen examples. Given an induced rule h and n unseen examples Du\u03c4 = {(x1, y1), ..., (xn, yn)}, we derive outputs y\u2032i by applying I\u03c4 (h) to input xi,\ny\u2032i = I\u03c4 (h)(xi). (1)\nAlthough it is ideal to have interpreters that can correctly apply h, such perfect interpreters might not always be available. Importantly, interpreters have no access to Ds\u03c4 , and thus, the rule must contain sufficient information for interpreters to achieve strong performance when applying the rule.\nWe evaluate the quality of a rule h using accuracy. More formally, for a task \u03c4 containing a set of unseen examples Du\u03c4 , we first define the accuracy for this particular task as\na\u03c4 = 1 |Du\u03c4 | \u2211\n(x,y)\u2208Du\u03c4\n1 [ I\u03c4 (h)(x) = y ] . (2)\nLet T denotes the set of all tasks within a dataset. We define raw accuracy c and task accuracy ct as\nc = 1 |T | \u2211 \u03c4\u2208T a\u03c4 ct = 1 |T | \u2211 \u03c4\u2208T 1 [ a\u03c4 = 1 ] . (3)\nWhile raw accuracy is the standard metric used in prior work, task accuracy could better estimate an LM\u2019s induction capability: a model should ideally consistently solve examples within a task. We use GPT-4 (gpt-4-0613; OpenAI, 2023) for all experiments and analyses. We include additional results of other models, including GPT-3.5 (gpt-3.5-turbo-0613), Claude-2 (Anthropic, 2023), and LLaMA2-70B (Touvron et al., 2023) in Appendix B."
        },
        {
            "heading": "2.1 ITERATIVE HYPOTHESIS REFINEMENT",
            "text": "We consider an iterative approach to induce rules from LMs. We use LMs to propose a set of rules (i.e., hypotheses). We then select the best rule based on scores calculated using the interpreter function. We provide feedback to LMs for further refinement. See Figure 1 for an overview.\nSpecifically, given k exemplars Ds\u03c4 = {(x1, y1), ..., (xk, yk)}, at iteration t, we sample N hypotheses of rules, Ht = {ht1, ..., htN}, from a prompted LM,\nht \u223c PLM ( \u00b7 |dt\u22121, x1, y1, ..., xk, yk), (4)\nwhere dt\u22121 is the feedback from previous iterations and which is set to be an empty string at the initial iteration. Each hypothesis is re-ranked based on a scoring function s(h,Ds\u03c4 ). We use accuracy over seen examples as the scoring function,\ns(h,Ds\u03c4 ) = 1 |Ds\u03c4 | \u2211\n(x,y)\u2208Ds\u03c4\n1 [ I\u03c4 (h)(x) = y ] . (5)\nThe best hypothesis is selected via,\nht \u2217 = argmax h\u2032\u2208Ht s(h\u2032,Ds\u03c4 ). (6)\nWe then obtain feedback dt by passing the best hypothesis to a template-based feedback generator. The feedback dt is a concatenation of exemplars with incorrect predictions, formatted as input, expected output, and tentative output. The iteration stops if the interpreter produces correct outputs for all exemplars using the current hypothesis or if the maximum iteration T is reached. In all experiments, we consider a combination of maximum number of iterations T \u2208 {1, 3} and number of hypotheses per iteration N \u2208 {1, 5}. We use greedy decoding when generating a single hypothesis and set the temperature to 0.7 when generating multiple hypotheses following Wang et al. (2023b).\n2For example, if h is the string representation of a Python function, I\u03c4 (h) can be the actual Python function. Note that the same rule h could be applied differently by different interpreters."
        },
        {
            "heading": "2.2 DATASETS",
            "text": "The above framework requires three specifications: the rule function f , the representation (i.e., the format and content) of h, and the interpreter I . We evaluate on 4 datasets (where each dataset consists of multiple tasks) and formulate these specifications as follows (see examples in Figure 1). We show the full dataset details in Appendix A.\nACRE. The Abstract Causal REasoning (ACRE; Zhang et al., 2021) is a diagnostic dataset designed to evaluate causal induction ability. It requires identifying a set of \u201cBlicket\u201d objects that will trigger a special machine. We can view f as an indicator function s.t. f(x;B) = 1[B \u2229 x] where B is the set of Blickets and x is the presented objects. We constrain h to classify each object into one of three categories: a Blicket, not a Blicket, or undetermined. I ( h)(x) is thus a deterministic function that checks the intersections between current objects and predicted Blickets.\nMiniSCAN. Lake et al. (2019) developed a sequence-to-sequence task with only 14 training examples to measure few-shot concept learning ability. We refer to this as MiniSCAN following Nye et al. (2020).3 Similar to SCAN (Lake & Baroni, 2018), MiniSCAN requires translating an input command x to an output action sequence y. We consider f as a set of grammar rules that map the input symbols to the corresponding meaning representations. We use a quasi-synchronous context free grammar (Smith & Eisner, 2006) as our formalism for h and use a parser as our interpreter I(h).\nList Functions. The List Functions dataset (Rule, 2020) is designed to evaluate human and machine concept learning ability. It requires identifying a function that maps the input list to its corresponding output list. Here f is a primitive or compositional list operation. We represent h as natural language description and implement the interpreter I using a two-stage process. First, we ask an LM to translate the natural language hypothesis h into a Python program. Then we execute this program to produce the corresponding outputs for given inputs.4\nMiniARC. The Abstract Reasoning Corpus (ARC; Chollet, 2019) and its variants (Kim et al., 2022b; Acquaviva et al., 2022; Xu et al., 2023b; Moskvichev et al., 2023) aim to evaluate visual abstract reasoning over broad concepts. The f here involves a transformation between input and output 2D grids, such as moving an object or swapping colors. We use natural language hypotheses h and similarly interpret the hypotheses using a Python interpreter. Given the extensive grid size of the original ARC tasks and the limited context length of LMs, we consider MiniARC (Kim et al., 2022b), a 5x5 compact version of the ARC.\n3 LMS ARE PHENOMENAL HYPOTHESIS PROPOSERS\nMain Results. We compare hypothesis refinement with standard input-output (IO) prompting, self-consistency prompting (SC; Wang et al., 2023b), and self-refine (SR; Madaan et al., 2023).5 SC samples multiple outputs and selects the most consistent one by taking a majority vote. SR uses the same LM as an interpreter and provides feedback to itself, and is a \u201cpure LM\u201d baseline that does not utilize a symbolic interpreter. The results are shown in Table 1 (see Appendix C for existing human performance). Iterative hypothesis refinement achieves the strongest performance on 3 out of 4 datasets, demonstrating the effectiveness of this approach. However, it lags behind the baselines on raw accuracy of MiniARC, potentially because some tasks in MiniARC are heavily dependent on pattern matching, for which IO prompting might be more effective (Mirchandani et al., 2023). Additionally, due to the limited visual understanding capabilities inherent in text-only models, the performance on MiniARC is still far from optimal for all methods, in comparison to other datasets.\nSimilar to prior work (Chen et al., 2023a; Olausson et al., 2023; Peng et al., 2023, i.a.), sampling more hypotheses and using iterative refinement with external feedback significantly boost LM per-\n3This task is also sometimes referred to as \u201cColors\u201d (Akyurek & Andreas, 2021; Patel et al., 2022). 4Although this method might introduce potential errors due to mistranslations between natural language and code, in practice, we qualitatively examine the programs and find that LMs can often generate programs that faithfully represent the natural language hypotheses.\n5These cannot be directly compared with our method, as hypothesis refinement is augmented with symbolic interpreters. We include them as baselines as they are standard approaches used in existing studies.\nformance, leading to the best accuracy on the majority of datasets.6 It is important to emphasize that both iterative refinement and external feedback are essential. Simply sampling more predictions and taking a majority vote (as SC prompting), does not necessarily improve performance. This might due to the fact that increasing the temperature for sampling results in many incorrect predictions. In contrast, increasing the number of hypotheses performs better due to the hypotheses selection process. An iterative approach that uses the LM itself as an interpreter (i.e., SR) is also insufficient. We observe performance substantially degrades when replacing the symbolic interpreter with an LM, suggesting that the LM can excel as a hypothesis proposer but performs poorly as an interpreter.\nWe also observe a significant discrepancy between raw accuracy and task accuracy, especially for IO prompting and SC prompting. Since these evaluations directly predict output for each individual example, there is no guarantee that the LM is solving the task following the underlying rules. In fact, the mismatch between raw accuracy and task accuracy indicates some correct predictions might be generated without using the expected computation. In contrast, rule prompting (i.e., applying the LM-proposed rules) suffers less from this issue as it re-uses the same rule across all examples.\nOOD Generalization and Interpretability. In addition to strong performance, iterative hypothesis refinement also enables out-of-distribution (OOD) generalization and improves interpretability of models. For OOD evaluations, we sample longer examples from the ground-truth programs for List Functions,7 and annotate examples with a larger grid for MiniARC. We evaluate performance on these OOD examples while fixing the seen examples. We show the results in Figure 2. We observe a significant performance drop for OOD examples when using IO prompting. However, the degradation is less severe for rule prompting except task accuracy on MiniARC, suggesting the LM likely solves the task using generalizable operations. While IO prompting still achieves better raw accuracy on MiniARC in OOD evaluations, the performance gap between it and rule prompting is reduced. Rule prompting also allows us to examine the intermediate operations, thus improving the interpretability of models. We show examples of LM-induced rules in Table 2 and Table 11.\n6We observe T=3, N=1 performs better than T=3, N=5 on MiniSCAN, potentially because the dataset is designed to evaluate compositional generalization, and thus high accuracy over seen examples does not necessarily translate to high accuracy on unseen examples. Since iterative refinement only uses accuracy over exemplars as the scoring function, it might overfit to exemplars and select hypotheses that are less generalizable.\n7Although we can theoretically sample longer sequences for MiniSCAN, we did not consider that setup, as the limited exemplars could lead to underspecification and result in multiple plausible parses due to ambiguity.\n4 LMS ARE PUZZLING INDUCTIVE REASONERS\nDespite the strong performance of iterative refinement on inductive reasoning, we identify several puzzling behaviors of LMs that seems to differ from human intuition (Fukushima, 1986; Heit, 2000)."
        },
        {
            "heading": "4.1 LMS STRUGGLE WITH APPLYING THEIR PROPOSED RULES",
            "text": "Previous results demonstrate that LMs perform as effective hypothesis proposers but poor interpreters. Here we examine the extent to which LMs \u201cunderstand\u201d the rules they propose. Specifically, given the rules induced from previous experiments, we test whether LMs can apply these rules to novel examples. We should expect comparable performance if LMs understand their own proposed rules. Results are shown in Figure 3. We observe a consistent performance drop when using the LM interpreter as opposed to the symbolic interpreter. This issue is especially significant on datasets like MiniSCAN, where rule application involves complex and recursive operations.\nThis performance inconsistency between rule induction and rule application reveals a counterintuitive behavior of LMs on inductive reasoning. Intuitively, once humans have induced a rule, they can use this rule in novel scenarios. However, LMs struggle with applying the rule, even if the rule was derived from themselves. Note that prior work has provided evidence suggesting that LMs might fall short on solving symbolic tasks (Dziri et al., 2023), and we do not claim that we should expect using an LM as the interpreter perform as effectively as a symbolic interpreter. However, the gaps are often so large (e.g., task accuracy dropping from more than 80% to almost-zero in MiniSCAN) that they are still nonetheless strong indicators of LMs\u2019 puzzling behaviors.8 In particular, LMs are able to generate meaningful hypotheses and improve them iteratively, but simultaneously fail to understand their proposed rules. This observation can be loosely related to other inconsistencies observed between generation and recognition in existing LMs. For instance, while LMs can identify errors in their own generations (Agrawal et al., 2023; Zhang et al., 2023b), they may also fail to validate a correct answer generated by themselves (Li et al., 2023)."
        },
        {
            "heading": "4.2 LMS ARE BRITTLE TO EXAMPLE PERTURBATIONS",
            "text": "Our experiments so far only consider well-formed input-output pairs: we assume there always exists at least one ground-truth f such that applying f to the inputs will yield the corresponding outputs. We also assume examples are presented in the format that close to LM\u2019s pre-training distribution. However, in practice, low-quality examples are ubiquitous. Humans can often reason robustly despite a certain level of noise, such as disregarding typos or a few erroneous examples (Fukushima, 1986; Heit, 2000). We now investigate if LMs can similarly make robust inductions. We use iterative hypothesis refinement with T = 3 and N = 5, which has the strongest performance in our main experiments. We include results using other models and configurations in Appendix B.2.\nNoisiness of Exemplars. We first study LMs\u2019 robustness to noisy examples. Specifically, we use List Functions and introduce noise into a certain percentage of exemplars by randomly replacing 1-2 elements with other numbers in the outputs. We perturb 12.5%, 25%, and 50% of the examples, out of a total of 8 exemplars. The results are shown in Figure 4a. We find the LM performs substantially worse even with a single noisy example, and its performance consistently decreases as the amount of\n8More advanced prompting techniques, such as SC prompting and zero-shot chain-of-thought prompting, also do not bridge the gap (see Appendix B.2 for details).\nnoise increases. Although explicitly instructing the LM to take into account noisy examples (dashed line) mitigates this issue, the performance degradation remains significant (see Table 16 for the exact instructions). This brittleness raises another concerns about their otherwise promising performance.9\nFamiliarity of Exemplars. Next we study if LMs are robust to example representation. We examine this by varying the familiarity of exemplars, i.e., how well the examples are represented in the LMs\u2019 pre-training data. As rules represent higher-level abstraction, ideally we should expect LMs\u2019 performance to be independent of their specific instantiations (Newell, 1980). We use MiniSCAN dataset and re-generate new examples using the same grammar rules but with varied output vocabularies. We consider two variants: the first involves pseudowords as inputs with abstract English concepts as outputs (e.g., dax \u2192 RED), as the original setup in Lake et al. (2019). The second uses pseudowords for both inputs and outputs (e.g., dax \u2192 zup). The results are shown in Figure 4b. LMs\u2019 performance drops when the output representation deviates from their pre-training distribution. In such case, even an iterative approach cannot compensate for this degradation.10"
        },
        {
            "heading": "4.3 LM-INDUCED RULES VS. HUMAN-INDUCED RULES",
            "text": "We have provided empirical evidence suggesting some discrepancies between the inductive reasoning of LMs and humans. We now qualitatively examine if LM-induced rules are distinguishable from human-induced rules. We conduct analysis on List Functions and MiniARC, as both datasets contain a variety of concepts and represent tasks where the LM succeeds and fails, respectively. We randomly sample 50 tasks per dataset and conduct similar human studies by asking crowdworkers to write the rules. See Appendix C for details of human studies and related human evaluations.\nWe show example LM-induced rules and human-induced rules in Table 2. For List Functions where the LM achieves strong performance, the LM can often induce rules that are comparable to or even better than those from humans, with some exceptions where it incorrectly explains the pattern. On MiniARC, however, it tends to generate rules that are difficult to interpret, often involving verbose and complex descriptions. In contrast, similar to Acquaviva et al. (2022), we find that humans often use pragmatic communication strategies that go beyond pattern descriptions. For instance, they frequently draw upon physical commonsense knowledge (e.g., \u201cdrop or lift an object\u201d, \u201cfill in each box\u201d), use high-level actions (e.g., \u201ccopy or extend the block\u201d, \u201cmirror the group\u201d), and connect to real-world concepts (e.g., \u201cstaircase\u201d, \u201cTetris\u201d). They also pose questions (e.g., \u201cwhich color is more common in a row and by how many?\u201d) and utilize algebraic expressions (e.g., \u201cif a number is repeated n times then only output n\u2212 1 times\u201d) to facilitate effective communications.\n9Given the limited number of exemplars, it is possible that our perturbation results in the task being illdefined. Humans are not necessarily robust to noisy observations either. Therefore, we conduct human study using the same setup and compare the performance between the LM and humans. We find that, while both the LM and humans perform worse on tasks with noisy examples, the relative performance drop of the LM is more significant. See appendix C for details.\n10Dasgupta et al. (2022) has shown LMs demonstrate human-like content effects on reasoning, i.e., they tend to reason more accurately about situations that align with their existing knowledge and beliefs. Similarly, humans are not perfect abstract reasoners, but they can remain consistent abstract reasoning given sufficient time budget (Evans & Curtis-Holmes, 2005). Our iterative approach attempts to mitigate this issue. While we did observe performance improvement (as compared to the results in Table 7), it does not fully close the gap.\nWe further investigate how LMs refine their hypotheses. While we observe performance improvement over iterations (see Figure 5), we also notice that they tend to make minor modifications, typically by adding exceptions for a specific example, rather than starting from entirely new hypotheses. We observe several cases where the LM adds an \u201cif-else\u201d statement to the rules over iterations. For instance, the LM generates \u201cRemove the value 2 from the input list.\u201d in the first iteration and refines it to \u201cRemove the value 6 if it is present in the input list. If not, remove the value 2\u201d in the subsequent iteration. This results in its failure to induce the correct rules if the initial hypothesis is entirely off."
        },
        {
            "heading": "5 LIMITATIONS AND DISCUSSIONS",
            "text": "Tasks. Humans perform inductive reasoning in everyday situations (Hume, 1904). However, our experiments mainly focus on synthetic and symbolic tasks, differing from the typical scenarios in which humans perform inductions. We chose our datasets based on two concerns. First, we interact with LMs using prompting. This restricts the number of seen examples due to LMs\u2019 limited context lengths. We selected our tasks because they are relatively constrained and well-defined, making it feasible to induce rules from only a few observations.11 Second, the inaccessibility of the training data complicates the evaluation of LMs\u2019 inductive learning abilities. It is challenging to distinguish whether LMs truly induce rules from observed examples or simply recall the fact from their prior knowledge. Therefore, we chose more synthetic and symbolic tasks, as we hypothesize that they are less likely to be present in the pre-training data, thus making inducing rules from observations necessary. Nonetheless, this confounding factor remains unless we fully inspect the training corpus.\nHyperparameters. The goal of this paper is to explore the potentials and limitations of LMs in inductive reasoning, rather than to improve the performance on specific inductive reasoning tasks. Therefore, we did not exhaustively tune hyperparameters (T and N ) or prompt templates. Our experiments use a maximum iteration T = 3 due to the LMs\u2019 limited context lengths and a maximum number of hypotheses per iteration N = 5. Our results demonstrate the correlations between model performance and these two hyperparameters. We expect improved performance when increasing these two hyperparameters, as suggested by Table 1 and recent work by Wang et al. (2023a).\nFuture Directions. Our study demonstrates the effectiveness of using LMs as hypothesis proposers. We show that, when paired with symbolic interpreters, LMs can achieve strong performance\n11The question of how many examples are required for valid induction remains a research question (Osherson et al., 1990; Heit, 2000). Arguably, one might only obtain partial observation, and there are cases where humans perform one-shot induction. However, determining the minimum number of examples necessary for induction is outside the scope of this paper. We believe our tasks suit our evaluation purposes despite their simplicities.\nthrough iterative hypothesis refinement. However, out-of-the-box LMs struggle to solve inductive tasks on their own. This strengthens the need to explore neuro-symbolic approaches to utilize the strengths of both components (Ni et al., 2023; Wong et al., 2023, i.a.). Our study also only focuses on a fixed set of exemplars. Future work could explore methods to dynamically select the best exemplars. Additionally, our analyses identify several counter-intuitive model behaviors, highlighting the importance of understanding model behaviors and improving their robustness as future work."
        },
        {
            "heading": "6 RELATED WORK",
            "text": "Inductive Reasoning with LMs. Existing studies on inductive reasoning capabilities of pretrained large LMs (Gendron et al., 2023; Yang et al., 2022; Moskvichev et al., 2023; Mirchandani et al., 2023; Tang et al., 2023; Xu et al., 2023a; Han et al., 2023; Xu et al., 2023b; Alet et al., 2021; Webb et al., 2023) primarily use IO prompting. They focus on evaluating the accuracy of unseen examples but often overlook any intermediate operations. As we argue in our study, this evaluation lacks interpretability and can conflate with LMs\u2019 rule application abilities. We instead investigate an alternative evaluation by inducing rules from LMs. Similarly, Honovich et al. (2023) uses LMs to induce instructions from examples, but it only studies dataset-level instructions for simple tasks. Concurrent work (Wang et al., 2023a) that proposes hypothesis search is closest to ours, but we focus on understanding the potentials and limitations of LMs rather than improving LMs\u2019 performance.\nLanguage Hypotheses Optimization. Many studies have explored the optimization of hypotheses over the space of natural language. Prior work on latent language for concept learning has mostly focused on few-shot image classification, and often involves training models (Andreas et al., 2018; Mu et al., 2020). Vong & Lake (2022) uses a pre-trained LM, but does not involve refining hypotheses iteratively. Some studies adopt similar iterative frameworks but focus on describing differences between text distributions (Zhong et al., 2022; 2023) or data patterns (Singh et al., 2022). While these hypotheses are relatively coarse-grained, our tasks require fine-grained hypotheses with high precision. Our study shows that, in such cases, a symbolic interpreter is essential to ensure the quality of hypotheses. Additionally, the iterative refinement approach is also related to a line of work on iterative prompting with execution feedback for synthesizing programs (Chen et al., 2023a; Olausson et al., 2023; Haluptzok et al., 2022; Key et al., 2022; Jiang et al., 2023; Zhang et al., 2023a). However, most of these studies use natural language descriptions, sometimes supplemented with optional examples, while ours only use input-output specifications.\nBayesian Concept Learning. Classical approaches to induction primarily follow a Bayesian paradigm: they start with a hypothesis space, compute the posterior distribution using Bayes\u2019 Rule, and update beliefs based on observations (Tenenbaum et al., 2011; Lake et al., 2015; Xu & Tenenbaum, 2007; Tenenbaum, 1999; Thaker et al., 2017; Kemp & Tenenbaum, 2009). The main challenge of these methods is the trade-off between expressiveness of hypothesis space and computational cost of posterior inference. Therefore, many of them resolve on searching over a constrained rule-based hypothesis space, such as probabilistic programs (Nosofsky et al., 1994; Piantadosi et al., 2016; Goodman et al., 2008; Bramley et al., 2018; Ellis et al., 2022; 2023). However, a domainspecific formulation of Language of Thought (Fodor, 1975; Erdogan et al., 2015; Saad et al., 2019; Tian et al., 2020; Sable\u0301-Meyer et al., 2022) is often limited. Ellis (2023) addresses this by performing Bayesian inference over natural language. Our approach shares similar spirits of Bayesian models, but instead leverages LMs to generate and refine hypotheses via iterative prompting."
        },
        {
            "heading": "7 CONCLUSION",
            "text": "In this paper, we study the inductive reasoning capabilities of LMs and how their inductive reasoning behaviors differ from those of humans. We conduct this investigation through iterative hypothesis refinement, an approach that closely mirrors human inductive process. Iterative refinement operates as a three-step process: hypotheses generation, selection, and refinement. Through our experiments, we find that LMs excel as hypothesis proposers, achieving strong performance on most datasets when coupled with symbolic interpreters. However, we also identify several counter-intuitive behaviors, suggesting that LMs simultaneously behave as puzzling inductive reasoners. For instance, they struggle with applying their own proposed rules and are brittle to minor perturbations. Our study reveals the paradoxical inductive capabilities of LMs and sheds light on both the potentials and limitations of LMs in inductive reasoning tasks."
        },
        {
            "heading": "ETHICS AND REPRODUCIBILITY STATEMENT",
            "text": "We evaluate the inductive capabilities of existing LMs based on existing benchmarks and models and thus unlikely to introduce any new harmful content. Our human study are all at minimal risks and thus properly exempted by IRB. We ensure all workers are paid at least $15 per hour based on task completion time, fulfilling the minimal wage requirement. Additionally, human inductive reasoning process is still largely inconclusive in cognitive science. Our iterative approach is one attempt to mirror human reasoning, but it is not necessarily the only mechanism.\nWe include all details necessary for reproducing all results. Please refer to the Appendix for all necessary reproducible details, including the model configurations, the prompts, and human evaluation templates. We will release code, prompts, and all model interactions for reproducibility."
        },
        {
            "heading": "A DATASET DETAILS",
            "text": "We show the dataset statistics in Table 3 and include the full dataset details below.\nACRE Following Gendron et al. (2023), we use textual representations of the original images by representing each object with its corresponding natural language description. We also experimented with a symbolic representation in which each object is represented as an integer, but observed similar performance. We sampled 100 tasks from the original dataset for our experiments.\nMiniSCAN We use examples from Lake et al. (2019), but randomly sample pseudowords for the inputs. We did not consider English words because of potential issues of data contamination (Dodge et al., 2021; Magar & Schwartz, 2022, i.a.) and uncontrolled lexical exposure (Kim et al., 2022a). The outputs use color names following Akyurek & Andreas (2021); Nye et al. (2020); Patel et al. (2022). We generated a total of 100 tasks for our experiments.\nList Functions We use the original dataset (Rule, 2020), which consists of a total of 250 tasks. Due to the limited context lengths of LMs, we only use the first 16 examples from BIG-Bench (bench authors, 2023): 8 for seen examples and 8 for unseen examples. We manually examined the exemplars and found 8 examples are generally sufficient to describe the pattern. Our preliminary experiments also indicated that adding more examples did not improve performance.\nMiniARC We use the data from Kim et al. (2022b). Although the original release contains 149 tasks, we heuristically filter out tasks that require heavy pattern matching, such as mapping one specific shape to another. Such tasks are typically difficult to describe in natural language at an abstract level. Therefore, we did not consider them for our evaluations. As we only evaluate textonly models, we use textual representations of the original visual grids by mapping each cell to a corresponding integer (Gendron et al., 2023; Moskvichev et al., 2023)."
        },
        {
            "heading": "B ADDITIONAL RESULTS",
            "text": ""
        },
        {
            "heading": "B.1 OTHER MODELS",
            "text": "We use GPT-4 for the main experiments, but our observations remain consistent across other models, as shown in Table 4. We evaluate GPT-4, GPT-3.5, Claude-2, and LLaMA2-70B using IO prompting and iterative hypothesis refinement, as they are best representatives of two different evaluations. For GPT-3.5 and Claude-2, we observe similar trends except both models underperform GPT-4. Rule prompting achieves higher accuracy than IO prompting on ACRE and MiniSCAN and shows better consistency between raw accuracy and task accuracy. However, these models sometimes lag behind\nthe baseline on tasks involving complex rules, such as List Functions and MiniARC. For LLaMA270B, we only observe improvement using rule prompting on ACRE. For tasks where we constrain hypothesis representations, some models\u2019 rules appear ill-formed. Many responses from GPT-3.5 and LLaMA2-70B are also truncated due to their limited context length. This suggests that iterative hypothesis refinement is most effective when coupled with an LM that is capable of proposing meaningful hypotheses and tracking long context.\nSimilar to experiments in \u00a74, we show the comparisons between symbolic interpreters and LMs as interpreters for rule application using other models in Table 5. We show results on varying example distribution using different models and configurations in Table 6 and Table 7. All results remain consistent with the findings in the main experiments."
        },
        {
            "heading": "B.2 ABLATIONS",
            "text": "Prompting Techniques for Rule Application. We only use standard prompting for rule application in \u00a74.1. Here, we study whether more advanced prompting techniques improve LMs\u2019 rule application performance. We consider two alternatives: self-consistency prompting (SC; Wang et al.,\n2023b) and zero-shot chain-of-thought prompting (0-CoT; Kojima et al., 2022; Nye et al., 2021; Wei et al., 2022). Similar to our main experiments, SC selects the most consistent output from multiple responses by taking a majority vote. Following Kojima et al. (2022), 0-CoT adds \u201cLet\u2019s think step by step.\u201d at the end to encourage LMs to reason. We show results in Table 8. We do not observe significant performance differences across these methods, except on ACRE, where 0-CoT underperforms other methods in task accuracy. This could potentially be attributed to the possibility that LMs do not truly understand their own proposed rules; therefore, encouraging reasoning might result in worse performance.\nRepresentation of Hypothesis. We investigate how the representation of hypothesis affects rule induction. We use programming language hypotheses for List Functions and MiniARC. We consider this alternative as existing studies have shown that prompting LMs to generate programs improves the model\u2019s performance on complex reasoning task (Gao et al., 2023; Chen et al., 2022; Hu et al., 2023, i.a.). Directly using programming language hypotheses also eliminates the potential issue of mistranslation between natural language and code. As shown in Table 9, both programming language and natural language hypotheses achieve comparable performance, suggesting programming language can be a powerful alternative for these tasks.\nTask-specific Heuristics. One reason why humans can learn new concepts from limited examples is their strong inductive biases or prior knowledge (Lake et al., 2017). We evaluate whether imposing task-specific heuristics influences LMs\u2019 inductive reasoning behaviors. Specifically, we use the MiniARC dataset, which involves visual understanding, and thus object-related heuristics could potentially be beneficial. Similar to Wang et al. (2023a), we provide explicit task-specific heuristics12 in the prompt for hypothesis generation, as shown in Table 10. We observe that the LM-induced rules become more human-readable. The LM starts to use visual concepts (e.g., \u201csquare\u201d, \u201crectangle\u201d, \u201cL-shape\u201d, \u201cU-shape\u201d) and common transformations (e.g., \u201creflection\u201d, \u201cmirror\u201d, \u201crotate the grid 90 degrees clockwise\u201d). We show example LM-induced rules in Table 11. However, this behavior appears only in a fraction of examples, and the rules induced by LMs are still generally distinguishable from those induced by humans. It is possible that incorporating additional guidance or adding human-induced rules as few-shot examples could encourage LMs to use pragmatic communication strategies. We leave exploring these alternatives as future work.\nImportantly, imposing task-specific heuristics does not necessarily improve performance. Iterative hypothesis refinement with T = 3 and N = 5 achieves a raw accuracy of 17.8% and task accuracy of 14.6%, comparable to results without task-specific heuristics. One possible reason is the integercolor mapping introducing additional overhead, as LMs frequently refer to both simultaneously\n12We provide descriptions of the representative transformations from different categories in Kim et al. (2022b), as well as the mapping between integers and colors. In most cases, the color of an object does not have a specific meaning. However, in certain categories, such as common sense, specifying the color can provide a useful cue. For instance, in a transformation that simulates raindrops, recognizing an object with blue color as rain could help reasoning.\nin the rule (e.g., \u201cif a pixel is green (3), then change it to red (2)\u201d). This could also potentially be explained by observations in Acquaviva et al. (2022): human communication is expressive yet ambiguous. Therefore, the more human-readable rules might require extra efforts to ensure precision and improve performance."
        },
        {
            "heading": "B.3 ANALYSIS",
            "text": "Our main experiments demonstrate the effectiveness of the iterative approach. In Figure 5, we show the changes of accuracy over iterations. We observe consistent performance improvements across all datasets, indicating that LMs are capable of refining their hypotheses iteratively. For tasks where LMs achieve strong performance, such as ACRE and MiniSCAN, a limited number of iterations is already sufficient. For tasks like MiniARC, where LMs perform poorly, the trends remain positive after the maximum number of iterations. This suggests potential for further improvements with more iterations when using LMs with longer context lengths."
        },
        {
            "heading": "B.4 COSTS",
            "text": "We show the average number of API calls and the average cost per task in Table 12. For GPT-4, the cost is computed using $0.03/1K tokens for input and $0.06/1K tokens for output. For GPT-3.5, the cost is computed using $0.0015/1K tokens for input and $0.002/1K tokens for output. Iterative hypothesis refinement, when augmented with a symbolic interpreter, is more cost-efficient than SR, as it reduces the number of API calls required to apply hypotheses. It is also more cost efficient for tasks with a larger number of test examples, e.g., MiniSCAN, as it re-uses the same rule across all examples."
        },
        {
            "heading": "C HUMAN STUDIES",
            "text": ""
        },
        {
            "heading": "C.1 EXISTING HUMAN PERFORMANCE",
            "text": "Our experiments are largely motivated by cognitive science literature. Here, we collect results from existing human studies to better calibrate the performance of LMs and humans. It is important to note that the exact setups, data, and evaluations in these studies might differ from ours. Therefore, the reported human performance can only be used as a reference but not for direct comparison.\nFor ACRE, Gopnik et al. (2001) and Sobel et al. (2004) found that 3-4 year-old children are able to identify if an object is a Blicket within 2 trials. For MiniSCAN, Lake et al. (2019) conducted similar human experiments and found humans achieve around 80% average accuracy, with the lowest performance at around 65% and the highest at 88%. For List Functions, Rule (2020) reported the av-\nerage human performance of 45.9%.13 For MiniARC, Kim et al. (2022b) did not provide any human experiment results. However, Johnson et al. (2021) evaluated a subset of tasks from ARC (Chollet, 2019) and found that human participants can solve 80% of the tasks, with 65% of tasks being solved by more than 80% of participants. Moskvichev et al. (2023) evaluated human participants on ConceptARC, a variant of ARC, and reported an average human performance of 90.9% in solving test examples. Additionally, Acquaviva et al. (2022) found that human annotators were able to write correct instructions for 88% of the ARC tasks."
        },
        {
            "heading": "C.2 SETUP",
            "text": "We randomly sample 50 tasks for List Functions and MiniARC and ask crowdworkers to write and evaluate rules. For each task, we ask 3 annotators to write the rule, and for each rule pair, we ask another 3 annotators to evaluate them. For rule evaluation, following prior work (Saha et al., 2022; Chen et al., 2023b), we consider two metrics: clarity and supportiveness. Clarity evaluates whether the rule provides a clear explanation of the transformation from input to output. Supportivenss measures how well the rule align with examples.14 We use pairwise comparison with 4 labels: LM-induced rule is better, human-induced rule is better, equally good, and equally bad.\nWe use Amazon Mechanical Turk for all human studies. We select crowdworkers who are located in the US with a HIT approval rate higher 97% and at least 10000 HIT approved. We pay our annotators at a minimal hourly wage of $15. We show the instructions and annotation interfaces for rule induction and rule evaluation in Figure 8 and Figure 9."
        },
        {
            "heading": "C.3 RESULTS",
            "text": "Human Preferences. We show results of human pairwise comparisons in Figure 6. For List Functions, where the LM achieves high accuracy, LM-induced rules and human-induced rules are comparably clear, but the former are sometimes less supportive. On MiniARC, where the LM performs poorly, we observe a significant performance gap between LM-induced rules and human-induced rules on both clarity and supportiveness. The average inner-annotator agreement, measured by Cohen\u2019s Kappa, is 0.13 for clarity and 0.53 for supportiveness.\nImpacts of Noisy Examples. We conduct similar human experiments using the data with 12.5% noise from \u00a74.2. We consider two setups: one with a hint indicating some examples might be incorrect (comparable to the dashed line in Figure 4a) and one without any hint (comparable to the bar in Figure 4a). We measure the percentage of rules that are preferred or equally good for either the LM or humans, and show the relative performance difference in Table 13. We also show the original human preferences in Figure 7. While both the LM and humans perform worse on tasks with noisy examples, the relative performance drop of the LM is generally more significant. The average inner-annotator agreement, measured by Cohen\u2019s Kappa, is 0.15 for clarity and 0.54 for supportiveness.\n13The human performance was obtained by asking human participants to play a guessing game. It only requires solving unseen examples and did not involve writing rules. See Rule (2020) for details.\n14Saha et al. (2022) use three metrics for evaluation: clarity, supportiveness, and generalizability. We did not consider generalizability as we directly evaluate on unseen examples. Our pilot experiments also suggest that crowdworkers found it challenging to distinguish between supportiveness and generalizability."
        },
        {
            "heading": "D PROMPTS AND EXAMPLES",
            "text": "Our experiments use several types of prompts. For rule induction, we query LMs for hypotheses generation and hypotheses refinement. For rule application, we query LMs to apply the rules. We also ask LMs to translate natural language hypotheses to Python programs. We show different types of prompts in Table 14. The values that fill in the placeholders for each dataset along with examples are shown in Table 15 and Table 16.\n(Optional) Please let us know if anything was unclear, if you experienced any issues, or if you have any other feedback for us. If you found this HIT difficult to answer, please let us know why.\nSubmit\nInstructions (click to expand/collapse)\nThanks for participating in this HIT! Please read the instructions carefully.\nLet\u2019s say you have a mystery machine. You know what goes in (input) and what comes out (output). You are told that the machine works by a particular rule.\nYou will be presented with two rules and a set of examples. The rule describes a pattern in the examples. The rule might use one of the following indexing system.\n0-based Indexing: The index starts from 0. Example: In [1, 2, 3, 4], '3' is indexed as 2. 1-based Indexing: The index starts from 1. Example: In [1, 2, 3, 4], '3' is indexed as 3.\nYou need to first figure out which indexing system the rule uses. Both indexing systems are valid as long as it is consistent within the rule and examples.\nYour task is to evaluate the rules based on the following criteria.\nClarity: The rule explains things clearly and is grammatically correct (ignoring minor spelling issues and typos). Supportiveness: The rule matches all given examples.\nExamples (click to expand/collapse)\nExamples: [2, 2, 3] -> [2] [4, 5, 6, 1] -> [4] [0] -> [0]\nRule 1: The output is the first element of the list.\nRule 2: The output is the 0th item of the list.\nQ1. Clarity: Which one is better? Equally good (Both rules explain things clearly and are grammatically correct)\nQ2. Supportiveness: Which one is better? Equally good (Both rules match all examples)\nInput Output Rule 1 Explanation Rule 2 Explanation [2, 2, 3] [2] Correct, [2] is the first element of the list using 1-based\nindexing.\nCorrect, [2] is the 0th element of the list using 0-based indexing.\n[4, 5, 6, 1] [4] Correct, [4] is the first element of the list using 1-based indexing. Correct, [4] is the 0th element of the list using 0-based indexing. [0] [0] Correct, [0] is the first element of the list using 1-based\nindexing.\nCorrect, [0] is the 0th element of the list using 0-based indexing.\nExamples: [2, 2, 3] -> [2] [4, 5, 4, 1] -> [4] [0, 2, 0] -> [0]\nRule 1: The output is the first element of the list.\nRule 2: The output is the second element of the list.\nQ1. Clarity: Which one is better? Equally good (Both rules explain things clearly and are grammatically correct)\nQ2. Supportiveness: Which one is better? Rule 1 is better. (Rule 1 matches all examples using 1-based indexing, but Rule 2 does not match all examples using either 0-based or 1-based indexing)\nInput Output Rule 1 Explanation Rule 2 Explanation\n[2, 2, 3] [2] Correct, [2] is the first element of\nthe list using 1-based indexing.\nIncorrect, [2] is NOT the second element of the list using 0-based indexing. Although it works using 1-based indexing, it is not consistent with other examples.\n[4, 5, 4, 1] [4] Correct, [4] is the first element of the list using 1-based indexing. Correct, [4] is the second element of the list using 0-based indexing. [0, 2, 0] [0] Correct, [0] is the first element of\nthe list using 1-based indexing. Correct, [0] is the second element of the list using 0-based indexing.\nTask\nExamples: ${examples}\nRule 1: ${rule_1}\nRule 2: ${rule_2}\nQ1. Clarity: Which one is better?\nRule 1 is better\nRule 2 is better Equally good\nEqually bad\nQ2. Supportiveness: Which one is better?\nRule 1 is better Rule 2 is better\nEqually good Equally bad\n(Optional) Do you have any feedback on either Rule 1 or Rule 2? For example, did you find any thing hard to understand? Did you find anything interesting? Is the rule missing any important information?\n(Optional) Please let us know if anything was unclear, if you experienced any issues, or if you have any other feedback for us. If you found this HIT difficult to answer, please let us know why.\nSubmit\nFigur 9: Annotation int rface for h m n rule evaluation.\n27"
        }
    ],
    "year": 2023
}