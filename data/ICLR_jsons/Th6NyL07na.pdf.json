{
    "abstractText": "Despite their impressive capabilities, large language models (LLMs) are prone to hallucinations, i.e., generating content that deviates from facts seen during pretraining. We propose a simple decoding strategy for reducing hallucinations with pretrained LLMs that does not require conditioning on retrieved external knowledge nor additional finetuning. Our approach obtains the next-token distribution by contrasting the differences in logits obtained from projecting the later layers versus earlier layers to the vocabulary space, exploiting the fact that factual knowledge in an LLMs has generally been shown to be localized to particular transformer layers. We find that this Decoding by Contrasting Layers (DoLa) approach is able to better surface factual knowledge and reduce the generation of incorrect facts. DoLa consistently improves the truthfulness across multiple choices tasks and open-ended generation tasks, for example improving the performance of LLaMA family models on TruthfulQA by 12-17% absolute points, demonstrating its potential in making LLMs reliably generate truthful facts.1",
    "authors": [
        {
            "affiliations": [],
            "name": "Yung-Sung Chuang"
        },
        {
            "affiliations": [],
            "name": "Yujia Xie"
        },
        {
            "affiliations": [],
            "name": "Hongyin Luo"
        },
        {
            "affiliations": [],
            "name": "Yoon Kim"
        },
        {
            "affiliations": [],
            "name": "James Glass"
        },
        {
            "affiliations": [],
            "name": "Pengcheng He"
        }
    ],
    "id": "SP:7ec9379603687593324c1400a4c35d379c026a73",
    "references": [
        {
            "authors": [
                "Sebastian Borgeaud",
                "Arthur Mensch",
                "Jordan Hoffmann",
                "Trevor Cai",
                "Eliza Rutherford",
                "Katie Millican",
                "George Bm Van Den Driessche",
                "Jean-Baptiste Lespiau",
                "Bogdan Damoc",
                "Aidan Clark"
            ],
            "title": "Improving language models by retrieving from trillions of tokens",
            "venue": "In International conference on machine learning,",
            "year": 2022
        },
        {
            "authors": [
                "Cheng-Han Chiang",
                "Hung-yi Lee"
            ],
            "title": "Can large language models be an alternative to human evaluations",
            "venue": "arXiv preprint arXiv:2305.01937,",
            "year": 2023
        },
        {
            "authors": [
                "Cheng-Han Chiang",
                "Hung-yi Lee"
            ],
            "title": "A closer look into automatic evaluation using large language models",
            "venue": "arXiv preprint arXiv:2310.05657,",
            "year": 2023
        },
        {
            "authors": [
                "Wei-Lin Chiang",
                "Zhuohan Li",
                "Zi Lin",
                "Ying Sheng",
                "Zhanghao Wu",
                "Hao Zhang",
                "Lianmin Zheng",
                "Siyuan Zhuang",
                "Yonghao Zhuang",
                "Joseph E. Gonzalez",
                "Ion Stoica",
                "Eric P. Xing"
            ],
            "title": "Vicuna: An open-source chatbot impressing gpt-4 with 90%* chatgpt",
            "year": 2023
        },
        {
            "authors": [
                "Karl Cobbe",
                "Vineet Kosaraju",
                "Mohammad Bavarian",
                "Mark Chen",
                "Heewoo Jun",
                "Lukasz Kaiser",
                "Matthias Plappert",
                "Jerry Tworek",
                "Jacob Hilton",
                "Reiichiro Nakano"
            ],
            "title": "Training verifiers to solve math word problems",
            "venue": "arXiv preprint arXiv:2110.14168,",
            "year": 2021
        },
        {
            "authors": [
                "Damai Dai",
                "Li Dong",
                "Yaru Hao",
                "Zhifang Sui",
                "Baobao Chang",
                "Furu Wei"
            ],
            "title": "Knowledge neurons in pretrained transformers",
            "venue": "In Proceedings of the 60th Annual Meeting of the Association for Computational Linguistics (Volume 1: Long Papers),",
            "year": 2022
        },
        {
            "authors": [
                "Yilun Du",
                "Shuang Li",
                "Antonio Torralba",
                "Joshua B Tenenbaum",
                "Igor Mordatch"
            ],
            "title": "Improving factuality and reasoning in language models through multiagent debate",
            "venue": "arXiv preprint arXiv:2305.14325,",
            "year": 2023
        },
        {
            "authors": [
                "Maha Elbayad",
                "Jiatao Gu",
                "Edouard Grave",
                "Michael Auli"
            ],
            "title": "Depth-adaptive transformer",
            "venue": "In ICLR 2020Eighth International Conference on Learning Representations,",
            "year": 2020
        },
        {
            "authors": [
                "Mohsen Fayyaz",
                "Ehsan Aghazadeh",
                "Ali Modarressi",
                "Hosein Mohebbi",
                "Mohammad Taher Pilehvar"
            ],
            "title": "Not all models localize linguistic knowledge in the same place: A layer-wise probing on bertoids",
            "venue": "Proceedings of the Fourth BlackboxNLP Workshop on Analyzing and Interpreting Neural Networks for NLP,",
            "year": 2021
        },
        {
            "authors": [
                "Xinyang Geng",
                "Hao Liu"
            ],
            "title": "Openllama: An open reproduction of llama, May 2023. URL https:// github.com/openlm-research/open llama",
            "year": 2023
        },
        {
            "authors": [
                "Ariel Gera",
                "Roni Friedman",
                "Ofir Arviv",
                "Chulaka Gunasekara",
                "Benjamin Sznajder",
                "Noam Slonim",
                "Eyal Shnarch"
            ],
            "title": "The benefits of bad advice: Autocontrastive decoding across model layers. In Proceedings of the 61st Annual Meeting of the Association for Computational Linguistics (Volume 1: Long Papers)",
            "year": 2023
        },
        {
            "authors": [
                "Mor Geva",
                "Daniel Khashabi",
                "Elad Segal",
                "Tushar Khot",
                "Dan Roth",
                "Jonathan Berant"
            ],
            "title": "Did aristotle use a laptop? a question answering benchmark with implicit reasoning strategies",
            "venue": "Transactions of the Association for Computational Linguistics,",
            "year": 2021
        },
        {
            "authors": [
                "Kaiming He",
                "Xiangyu Zhang",
                "Shaoqing Ren",
                "Jian Sun"
            ],
            "title": "Deep residual learning for image recognition",
            "venue": "In Proceedings of the IEEE conference on computer vision and pattern recognition,",
            "year": 2016
        },
        {
            "authors": [
                "Gautier Izacard",
                "Patrick Lewis",
                "Maria Lomeli",
                "Lucas Hosseini",
                "Fabio Petroni",
                "Timo Schick",
                "Jane DwivediYu",
                "Armand Joulin",
                "Sebastian Riedel",
                "Edouard Grave"
            ],
            "title": "Few-shot learning with retrieval augmented language models",
            "venue": "arXiv preprint arXiv:2208.03299,",
            "year": 2022
        },
        {
            "authors": [
                "Ziwei Ji",
                "Nayeon Lee",
                "Rita Frieske",
                "Tiezheng Yu",
                "Dan Su",
                "Yan Xu",
                "Etsuko Ishii",
                "Ye Jin Bang",
                "Andrea Madotto",
                "Pascale Fung"
            ],
            "title": "Survey of hallucination in natural language generation",
            "venue": "ACM Computing Surveys,",
            "year": 2023
        },
        {
            "authors": [
                "Wei-Tsung Kao",
                "Tsung-Han Wu",
                "Po-Han Chi",
                "Chun-Cheng Hsieh",
                "Hung-Yi Lee"
            ],
            "title": "Bert\u2019s output layer recognizes all hidden layers? some intriguing phenomena and a simple way to boost bert",
            "year": 2001
        },
        {
            "authors": [
                "Nitish Shirish Keskar",
                "Bryan McCann",
                "Lav R Varshney",
                "Caiming Xiong",
                "Richard Socher"
            ],
            "title": "Ctrl: A conditional transformer language model for controllable generation",
            "year": 1909
        },
        {
            "authors": [
                "Kenneth Li",
                "Oam Patel",
                "Fernanda Vi\u00e9gas",
                "Hanspeter Pfister",
                "Martin Wattenberg"
            ],
            "title": "Inference-time intervention: Eliciting truthful answers from a language model",
            "venue": "arXiv preprint arXiv:2306.03341,",
            "year": 2023
        },
        {
            "authors": [
                "Xiang Lisa Li",
                "Ari Holtzman",
                "Daniel Fried",
                "Percy Liang",
                "Jason Eisner",
                "Tatsunori Hashimoto",
                "Luke Zettlemoyer",
                "Mike Lewis"
            ],
            "title": "Contrastive decoding: Open-ended text generation as optimization",
            "venue": "arXiv preprint arXiv:2210.15097,",
            "year": 2022
        },
        {
            "authors": [
                "Tian Liang",
                "Zhiwei He",
                "Wenxiang Jiao",
                "Xing Wang",
                "Yan Wang",
                "Rui Wang",
                "Yujiu Yang",
                "Zhaopeng Tu",
                "Shuming Shi"
            ],
            "title": "Encouraging divergent thinking in large language models through multi-agent debate",
            "year": 1911
        },
        {
            "authors": [
                "Stephanie Lin",
                "Jacob Hilton",
                "Owain Evans"
            ],
            "title": "Truthfulqa: Measuring how models mimic human falsehoods",
            "venue": "In Proceedings of the 60th Annual Meeting of the Association for Computational Linguistics (Volume 1: Long Papers),",
            "year": 2022
        },
        {
            "authors": [
                "Yang Liu",
                "Dan Iter",
                "Yichong Xu",
                "Shuohang Wang",
                "Ruochen Xu",
                "Chenguang Zhu"
            ],
            "title": "G-eval: Nlg evaluation using gpt-4 with better human alignment",
            "venue": "arXiv preprint arXiv:2303.16634,",
            "year": 2023
        },
        {
            "authors": [
                "Potsawee Manakul",
                "Adian Liusie",
                "Mark JF Gales"
            ],
            "title": "Selfcheckgpt: Zero-resource black-box hallucination detection for generative large language models",
            "venue": "arXiv preprint arXiv:2303.08896,",
            "year": 2023
        },
        {
            "authors": [
                "Kevin Meng",
                "David Bau",
                "Alex Andonian",
                "Yonatan Belinkov"
            ],
            "title": "Locating and editing factual associations in GPT",
            "venue": "Advances in Neural Information Processing Systems,",
            "year": 2022
        },
        {
            "authors": [
                "Dor Muhlgay",
                "Ori Ram",
                "Inbal Magar",
                "Yoav Levine",
                "Nir Ratner",
                "Yonatan Belinkov",
                "Omri Abend",
                "Kevin Leyton-Brown",
                "Amnon Shashua",
                "Yoav Shoham"
            ],
            "title": "Generating benchmarks for factuality evaluation of language models",
            "venue": "arXiv preprint arXiv:2307.06908,",
            "year": 2023
        },
        {
            "authors": [
                "Jingcheng Niu",
                "Wenjie Lu",
                "Gerald Penn"
            ],
            "title": "Does bert rediscover a classical nlp pipeline",
            "venue": "In Proceedings of the 29th International Conference on Computational Linguistics,",
            "year": 2022
        },
        {
            "authors": [
                "Sean O\u2019Brien",
                "Mike Lewis"
            ],
            "title": "Contrastive decoding improves reasoning in large language models",
            "venue": "arXiv preprint arXiv:2309.09117,",
            "year": 2023
        },
        {
            "authors": [
                "Long Ouyang",
                "Jeffrey Wu",
                "Xu Jiang",
                "Diogo Almeida",
                "Carroll Wainwright",
                "Pamela Mishkin",
                "Chong Zhang",
                "Sandhini Agarwal",
                "Katarina Slama",
                "Alex Ray"
            ],
            "title": "Training language models to follow instructions with human feedback",
            "venue": "Advances in Neural Information Processing Systems,",
            "year": 2022
        },
        {
            "authors": [
                "Ori Ram",
                "Yoav Levine",
                "Itay Dalmedigos",
                "Dor Muhlgay",
                "Amnon Shashua",
                "Kevin Leyton-Brown",
                "Yoav Shoham"
            ],
            "title": "In-context retrieval-augmented language models",
            "venue": "arXiv preprint arXiv:2302.00083,",
            "year": 2023
        },
        {
            "authors": [
                "Erik Tjong Kim Sang",
                "Fien De Meulder"
            ],
            "title": "Introduction to the conll-2003 shared task: Languageindependent named entity recognition",
            "venue": "In Proceedings of the Seventh Conference on Natural Language Learning at HLT-NAACL",
            "year": 2003
        },
        {
            "authors": [
                "Tal Schuster",
                "Adam Fisch",
                "Jai Gupta",
                "Mostafa Dehghani",
                "Dara Bahri",
                "Vinh Tran",
                "Yi Tay",
                "Donald Metzler"
            ],
            "title": "Confident adaptive language modeling",
            "venue": "Advances in Neural Information Processing Systems,",
            "year": 2022
        },
        {
            "authors": [
                "Weijia Shi",
                "Xiaochuang Han",
                "Mike Lewis",
                "Yulia Tsvetkov",
                "Luke Zettlemoyer",
                "Scott Wen-tau Yih"
            ],
            "title": "Trusting your evidence: Hallucinate less with context-aware decoding",
            "venue": "arXiv preprint arXiv:2305.14739,",
            "year": 2023
        },
        {
            "authors": [
                "Surat Teerapittayanon",
                "Bradley McDanel",
                "Hsiang-Tsung Kung"
            ],
            "title": "Branchynet: Fast inference via early exiting from deep neural networks",
            "venue": "In 2016 23rd International Conference on Pattern Recognition (ICPR),",
            "year": 2016
        },
        {
            "authors": [
                "Ian Tenney",
                "Dipanjan Das",
                "Ellie Pavlick. Bert"
            ],
            "title": "rediscovers the classical nlp pipeline",
            "venue": "In Proceedings of the 57th Annual Meeting of the Association for Computational Linguistics,",
            "year": 2019
        },
        {
            "authors": [
                "Hugo Touvron",
                "Thibaut Lavril",
                "Gautier Izacard",
                "Xavier Martinet",
                "Marie-Anne Lachaux",
                "Timoth\u00e9e Lacroix",
                "Baptiste Rozi\u00e8re",
                "Naman Goyal",
                "Eric Hambro",
                "Faisal Azhar"
            ],
            "title": "Llama: Open and efficient foundation language models",
            "venue": "arXiv preprint arXiv:2302.13971,",
            "year": 2023
        },
        {
            "authors": [
                "Jason Wei",
                "Yi Tay",
                "Rishi Bommasani",
                "Colin Raffel",
                "Barret Zoph",
                "Sebastian Borgeaud",
                "Dani Yogatama",
                "Maarten Bosma",
                "Denny Zhou",
                "Donald Metzler"
            ],
            "title": "Emergent abilities of large language models",
            "venue": "Transactions on Machine Learning Research,",
            "year": 2022
        },
        {
            "authors": [
                "Jason Wei",
                "Xuezhi Wang",
                "Dale Schuurmans",
                "Maarten Bosma",
                "Ed Chi",
                "Quoc Le",
                "Denny Zhou"
            ],
            "title": "Chain of thought prompting elicits reasoning in large language models",
            "venue": "arXiv preprint arXiv:2201.11903,",
            "year": 2022
        },
        {
            "authors": [
                "Mengzhou Xia",
                "Tianyu Gao",
                "Zhiyuan Zeng",
                "Danqi Chen"
            ],
            "title": "Sheared llama: Accelerating language model pre-training via structured pruning",
            "venue": "arXiv preprint arXiv:2310.06694,",
            "year": 2023
        },
        {
            "authors": [
                "Jin Xu",
                "Xiaojiang Liu",
                "Jianhao Yan",
                "Deng Cai",
                "Huayang Li",
                "Jian Li"
            ],
            "title": "Learning to break the loop: Analyzing and mitigating repetitions for neural text generation",
            "venue": "Advances in Neural Information Processing Systems,",
            "year": 2022
        }
    ],
    "sections": [
        {
            "heading": "1 INTRODUCTION",
            "text": "Large language models (LLMs) have demonstrated great potential in numerous natural language processing (NLP) applications (Brown et al., 2020; OpenAI, 2022; 2023). However, despite the continued increase in performance and the emergence of new capabilities from scaling LLMs (Wei et al., 2022a), their tendency to \u201challucinate\u201d, i.e., generate content that deviates from real-world facts observed during pretraining (Ji et al., 2023), remains a persistent challenge. This represents a major bottleneck in their deployment especially for high-stakes applications (e.g., clinical/legal settings) where reliable generation of trustworthy text is crucial.\nWhile the exact reasons for LMs\u2019 hallucinations are not fully understood, a possible reason is due to the maximum likelihood language modeling objective which minimize the forward KL divergence between the data and model distributions. This objective potentially results in a model with mass-seeking behavior which causes the LM to assign non-zero probability to sentences that are not fully consistent with knowledge embedded in the training data. Empirically, an LM trained with the next-word prediction objective on finite data has been shown to result in a model that uses linguistic knowledge to recognize the superficial patterns, instead of recognizing and generating the real-world facts extracted from the training corpus (Ji et al., 2023).\nFrom a model interpretability perspective, transformer LMs have been loosely shown to encode \u201clowerlevel\u201d information (e.g., part-of-speech tags) in the earlier layers, and more \u201csemantic\u201d information in the later layers (Tenney et al., 2019). More recently, Dai et al. (2022) find that \u201cknowledge neurons\u201d are distributed in the topmost layers of the pretrained BERT model. Meng et al. (2022) show that factual knowledge\n1The source code is available at https://github.com/voidism/DoLa. \u22c6Work mainly done during an internship at Microsoft.\ncan even be edited by manipulating a specific set of feedforward layers within an autoregressive LM. We propose to exploit this modular encoding of knowledge to amplify the factual knowledge in an LM through a contrastive decoding approach, where the output next-word probability is obtained from the difference in logits between a higher layer versus a lower layer. By emphasizing the knowledge of higher layers and downplaying that of lower layers, we can potentially make LMs more factual and thus reduce hallucinations.\nAn illustration of this idea for a simple example is shown in Figure 1. While \u201cSeattle\u201d maintains high probability throughout all the layers\u2014presumably because it is a syntactically plausible answer\u2014the probability of the true answer \u201cOlympia\u201d increases after the higher layers inject more factual knowledge. Contrasting the differences between the different layers can thus reveal the true answer in this case. Based on this concept, we propose a new decoding method, Decoding by Contrasting Layers (DoLa), for better surfacing factual knowledge embedded in an LLM without retrieving external knowledge or additional fine-tuning.\nExperiments on TruthfulQA (Lin et al., 2022) and FACTOR Muhlgay et al. (2023) demonstrate that DoLa is able to increase the truthfulness of the models of the LLaMA family (Touvron et al., 2023). Further experiments on chain-of-thought reasoning for StrategyQA (Geva et al., 2021) and GSM8K (Cobbe et al., 2021) also show that it can facilitate more factual reasoning. Finally, experiments using GPT-4 for openended chatbot evaluation (Chiang et al., 2023) show that when compared with the original decoding method, DoLa can generate informative and significantly more factual responses that lead to better ratings from GPT4. From an efficiency perspective, we find that DoLa causes only a small additional latency in the decoding process, suggesting it as a practical and useful decoding strategy for improving the truthfulness of LLMs."
        },
        {
            "heading": "2 METHOD",
            "text": "Recent language models consist of an embedding layer, N stacked transformer layers, and an affine layer \u03d5(\u00b7) for predicting the next-word distribtution. Given a sequence of tokens {x1, x2, . . . , xt\u22121}, the embedding layer first embeds the tokens into a sequence of vectors H0 = {h(0)1 , . . . , h (0) t\u22121}. Then H0 would be processed by each of the transformer layers successively. We denote the output of the j-th layer as Hj . Then, the vocabulary head \u03d5(\u00b7) predicts the probability of the next token xt over the vocabulary set X ,\np(xt | x<t) = softmax ( \u03d5(h (N) t ) ) xt , xt \u2208 X .\nInstead of applying \u03d5 on the final layer, our approach contrasts the higher-layer and lower-layer information to obtain the next-token probability. More specifically, for the j-th early layer, we also compute the next-\nqj(xt | x<t) = softmax\n(\n\u03d5(h (j) t )\n)\nxt , j \u2208 J .\nThe idea of applying language heads directly to the hidden states of the middle layers, known as early exit (Teerapittayanon et al., 2016; Elbayad et al., 2020; Schuster et al., 2022), has proven to be effective even without special training process (Kao et al., 2020), as the residual connections (He et al., 2016) in transformer layers make the hidden representations gradually evolve without abrupt changes. Using qj(xt) to represent qj(xt | x<t) for notational brevity, we then compute the probability of the next token by,\np\u0302(xt | x<t) = softmax ( F ( qN (xt), qM (xt) )) xt ,\nwhere M = argmax j\u2208J\nd ( qN (\u00b7), qj(\u00b7) ) .\nHere, layer M is named premature layer, while the final layer, i.e., layer N , is named mature layer. The operator F(\u00b7, \u00b7), to be elaborated further in Section 2.3, is used to contrast between the output distributions from the premature layer and the mature layer by computing the log-domain difference between two distributions. The premature layer is dynamically selected in each decoding step using a distributional distance measure d(\u00b7, \u00b7) (we use Jensen-Shannon Divergence) between the mature layer and all the candidate layers in J . We discuss d(\u00b7, \u00b7) in more detail in Section 2.2. The motivation for selecting the layer with the highest distance d(\u00b7, \u00b7) is to ensure that the model would significantly change its output after that selected layer, and thus have a higher chance to include more factual knowledge that does not exist in the early layers before it."
        },
        {
            "heading": "2.1 FACTUAL KNOWLEDGE EVOLVES ACROSS LAYERS",
            "text": "We conduct preliminary analysis with 32-layer LLaMA-7B (Touvron et al., 2023) to motivate our approach. We compute the Jensen-Shannon Divergence (JSD) between the early exiting output distributions qj(\u00b7 | x<t) and the final layer output distribution qN (\u00b7 | x<t), to show how the early exiting outputs are different from the final layer outputs. Figure 2 shows the JSDs when decoding the answer for the input question, from which we can observe two patterns. Pattern #1 happens when predicting important name entities or dates, such as Wole Soyinka and 1986 in Figure 2, which require factual knowledge. We observe the calculated JSD would be still extremely high in the higher layers. This pattern indicates that the model is still changing its predictions in the last few layers, and potentially injecting more factual knowledge into the predictions. Pattern #2 happens when predicting function words, such as was, the, to, in, and the tokens copied from the input question, such as first Nigerian, Nobel Prize. When predicting these \u201ceasy\u201d tokens, we can observe that the JSD becomes very small from middle layers. This finding indicates that the model has already decided what token to generate in middle layers, and keeps the output distributions almost unchanged in the higher\nlayers. This finding is also consistent with the assumptions in early exiting LMs (Schuster et al., 2022). A preliminary analysis that can quantitatively support this observation is also shown in Appendix A.\nQualitatively, when the next-word prediction requires factual knowledge, LLaMA seems to to change the predictions in the higher layers. Contrasting the layers before/after a sudden change may therefore amplify the knowledge emerging from the higher layers and make the model rely more on its factual internal knowledge. Moreover, this evolution of information seems to vary token by token. Our method requires accurately selecting the premature layer that contains plausible but less factual information, which may not always stay in the same early layer. Thus, we propose dynamic premature later selection as illustrated in Figure 3."
        },
        {
            "heading": "2.2 DYNAMIC PREMATURE LAYER SELECTION",
            "text": "To magnify the effectiveness of contrastive decoding, the optimal premature layer should ideally be the layer most different from the final-layer outputs. To allow for dynamic premature layer selection at each time step, we adopt the following measure of distance between the next-word distributions obtained from two layers,\nd ( qN (\u00b7 |x<t), qj(\u00b7 |x<t) ) = JSD ( qN (\u00b7 |x<t)||qj(\u00b7 |x<t) ) ,\nwhere JSD(\u00b7, \u00b7) is the Jensen-Shannon divergence. The premature layer, i.e., the M -th layer (0 \u2264 M < N ), is then selected as the layer with the maximum divergence among the subset of early layers,\nM = argmax j\u2208J\nJSD ( qN (\u00b7 |x<t)||qj(\u00b7 |x<t) ) ,\nwhere J is a set of candidate layers for premature layer selection. For LLaMA models with various number of layers, we divide the layers into 2 to 4 buckets of J based on their total layers, in order to focus on contrasting from a certain range of layers. The best bucket for each task is chosen using a validation set, as detailed in Section 3.1. This dynamic layer selection strategy enables the the selection of suitable premature layers based on token difficulty, thereby making better use of the knowledge learned by different layers.\nBesides the dynamic layer selection strategy, a very simple method that can also be considered is to select the premature layer by running brute-force experiments on all the possible early layers with a validation set, and pick the layer with the best validation performance. We refer to this simple method as DoLa-static. However, DoLa-static has the drawbacks of 1) requiring more hyperparameter search runs in layers and the fact that 2) best layers are sensitive to data distribution, thus requiring in-distribution validation sets. Our proposed dynamic layer selection strategy also mitigates the drawbacks of DoLa-static by shrinking the layer search space and making the method more robust without heavily relying on in-distribution validation sets. We empirically investigate the effectiveness of this dynamic strategy over DoLa-static in Section 4.1."
        },
        {
            "heading": "2.3 CONTRASTING THE PREDICTIONS",
            "text": "Given the premature and mature layers obtained from Section 2.2, we aim to amplify mature layer outputs while downplaying premature layer outputs. Following the Contrastive Decoding approach from Li et al. (2022), we subtract the log probabilities of the premature layer outputs from those of the mature layer. We then use this resulting distribution as the next-word prediction, as illustrated in Figure 1,\np\u0302(xt | x<t) = softmax ( F ( qN (xt), qM (xt) )) xt , where F ( qN (xt), qM (xt) ) = log qN (xt) qM (xt) , if xt \u2208 Vhead (xt|x<t) ,\n\u2212\u221e, otherwise.\nSimilar to Li et al. (2022), the subset Vhead (xt|x<t) \u2208 X is defined as whether or not the token has high enough output probabilities from the mature layer,\nVhead (xt|x<t) = { xt \u2208 X : qN (xt) \u2265 \u03b1max\nw qN (w)\n} .\nIf the predicted probability of a token is too small in the mature layer, it is not likely to be a reasonable prediction, so we set the token probability to zero to minimize false positive and false negative cases. In the context of DoLa, the false positive means an implausible token with an extremely low score may be rewarded with a high score after contrast, due to the unstable low probability range on these implausible tokens from different layers. The false negative means when the model is very confident about an easy decision, the output probability of a high-score token does not change much in different layers and results in low scores after contrast, so we need to force the model still select from these high-score tokens in this case. This strategy is referred as an adaptive plausibility constraint (APC) proposed in Li et al. (2022).\nRepetition Penalty. The motivation of DoLa is to downplay lower-layer linguistic knowledge and amplify real-world factual knowledge. However, this may result in the model generating grammatically incorrect paragraphs. Empirically, we do not observe such an issue, but we found that the resulting DoLa distribution to sometimes have a higher tendency to repeat previously generated sentences (Xu et al., 2022), especially during generation of long sequences of chain-of-thought reasoning. Here we include a simple repetition penalty introduced in Keskar et al. (2019) with \u03b8 = 1.2 during decoding. The empirical analysis of the repetition penalty is shown in Appendix K."
        },
        {
            "heading": "3 EXPERIMENTS",
            "text": ""
        },
        {
            "heading": "3.1 SETUP",
            "text": "Datasets. We consider multiple choices and open-ended generation tasks. For multiple choices, we use TruthfulQA (Lin et al., 2022) and FACTOR (News/Wiki) (Muhlgay et al., 2023) to assess LMs\u2019 factuality in short-answer/long-paragraph settings, respectively. For open-ended generation, we use TruthfulQA (rated by fine-tuned GPT-3) (Lin et al., 2022) and tasks involving chain-of-thought (Wei et al., 2022b) reasoning: StrategyQA (Geva et al., 2021) and GSM8K Cobbe et al. (2021). Finally, we test Vicuna QA (Chiang et al., 2023) which uses GPT-4 to evaluate instruction-following abilities as chatbot assistants.\nModels and Baselines. We examine four sizes of LLaMA models (Touvron et al., 2023) (7B, 13B, 33B, 65B) and compare them with three baselines: 1) original decoding (greedy decoding or sampling depending on the tasks), 2) Contrastive Decoding (CD) (Li et al., 2022), where LLaMA-7B serves as the amateur model and LLaMA-13B/33B/65B act as expert models, and 3) Inference Time Intervention (ITI). ITI uses LLaMA7B and a linear classifier trained on TruthfulQA. Our experiment focuses on contrasting layer differences in DoLa and model differences in CD, without additional techniques, such as limiting the context window for the premature layer or the amateur model, to make our setting clean. We set adaptive plausibility constraint (\u03b1) to 0.1 and repetition penalty (\u03b8) to 1.2 as per prior studies(Li et al., 2022; Keskar et al., 2019).\nCandidate Layers. In dynamic premature layer selection, we partition transformer layers into buckets and select one bucket as candidate layers (J ). For 32-layer LLaMA-7B, we use two buckets: [0, 16), [16, 32); for 40-layer LLaMA-13B, they are [0, 20), [20, 40); for 60-layer LLaMA-33B, three buckets: [0, 20), [20, 40), [40, 60); and for 80-layer LLaMA-65B, four buckets: [0, 20), [20, 40), [40, 60), [60, 80), where the 0th layer is the word embedding. This design limits the hyperparameter search space to only 2-4 validation runs. For efficiency, only even-indexed layers (0th, 2nd, etc.) are considered as candidates. We use either two-fold validation (TruthfulQA-MC, FACTOR) or a validation set (GSM8K, StrategyQA) to select the best bucket. For Vicuna QA, which lacks a validation set, we use GSM8K\u2019s best bucket."
        },
        {
            "heading": "3.2 MULTIPLE CHOICES",
            "text": "Short-Answer Factuality. We test TruthfulQA with the default QA prompt from Lin et al. (2022) and Li et al. (2023). For \u03b1 in APC, we replace \u2212\u221e with \u22121000 to avoid ruining LM likelihood scores, which also applies to FACTOR. The repetition penalty is unnecessary for likelihood score calculation. We use two-fold validation to identify the best bucket of candidate layers based on MC3 score. Results in Table 1 show significant performance improvement for LLaMA models in four sizes, outperforming ITI/CD and confirming the effectiveness of DoLa. The only exception is LLaMA-33B on MC1, a \u201cwinner takes all\u201d metric that is more sensitive to fluctuations. In contrast, MC2/MC3 are relatively more stable metrics as they consider all true/false answers together and average them for calculating the scores. The higher layers are consistently chosen in two-fold validation\u20147B: [16, 32); 13B: [20, 40); 33B: [40, 60); 65B: [60, 80). Implementation details and extra results of contrasting with the 0-th layer / all layers are shown in Appendix C.\nLong-Paragraph Factuality. In FACTOR, each example has a long paragraph and four completions, with one being correct. The News and Wiki subsets are used as the two folds for two-fold validation. Table 1 shows DoLa outperforms baselines by 2-4%, and is more effective than CD, except for 13B on Wiki. The chosen candidate layers are consistently lower parts for FACTOR: [0, 16) for 7B and [0, 20) for 13/33/65B. This differs from TruthfulQA, which selects higher layers. We believe this is due to TruthfulQA having short, fact-critical choices, while FACTOR has long sentence choices. As noted in Section 2.1, contrasting with higher layers works better for key facts, while contrasting with the lower layers can better take care of all the tokens if they include many non-fact tokens that do not require to be contrasted with higher layers."
        },
        {
            "heading": "3.3 OPEN-ENDED TEXT GENERATION",
            "text": "Short-Answer Factuality. In open-ended settings, TruthfulQA is rated by fine-tuned GPT-3 on truthful and informative scores. A 100% truthful score can be easily achievable by answering \u201cI have no comment\u201d, but results in a 0% informative score. We use the default QA prompt as in Lin et al. (2022) and Li et al. (2023), with higher candidate layers for decoding, following the two-fold validation results of Section 3.2. Table 1\nshows DoLa consistently enhances truthful scores, keeps informative scores above 90%, and has a ratio of \u201cI have no comment\u201d (%Reject) under 10%. It improves the overall (%Truth\u2217Info) scores by 12-17% across four models, reaching the performance level of ITI, which relies on supervised training with labels.\nCD boosts truthfulness but often refuses to answer, generating \u201dI have no comment,\u201d \u2013 over 60% of the time for the LLaMA-33B model \u2013 thus lowering its %Truth\u2217Info score. We suspect this is because CD uses LLaMA-7B for contrast, and a big difference is that 33B is better at instruction-following than 7B, explaining why CD frequently answers \u201dI have no comment,\u201d as this response is indicated in the instruction prompt. Our method consistently outperforms CD in final %Truth\u2217Info scores. Chain-of-Thought Reasoning. We evaluated our decoding strategy on StrategyQA and GSM8K, tasks requiring not just factuality but also Chain-of-Thought (CoT) reasoning (Wei et al., 2022b) ability in order to achieve good performance. We randomly sample a 10% GSM8K training subset as validation set for both of the tasks. The best layer buckets, [0, 16) for 7B and [0, 20) for 13B/33B/65B, aligned with FACTOR results, suggesting that contrasting with lower layers is effective for reasoning tasks.\n\u2022 StrategyQA requires multi-hop CoT reasoning (Wei et al., 2022b). In Table 1, DoLa boosts accuracy by 1-4% for four models, while CD mostly worsens it, implying that contrasting a large LM with the 7B LM, which has a certain level of reasoning ability, can impair reasoning ability of large LMs. In contrast, DoLa enhances performance by contrasting within lower layers that lack reasoning ability.\n\u2022 GSM8K is a math word problem benchmark requiring both factual knowledge and arithmetic reasoning. Table 1 shows a 2% accuracy improvement for most LLaMA sizes, except 7B. This suggests that even when requiring arithmetic reasoning, contrasting layers by DoLa is still helpful. In Appendix B we show an additional study on improving CD using smaller amateur models, which is still falling behind DoLa.\nInstruction Following. Vicuna QA (Chiang et al., 2023) uses GPT-4 to evaluate the abilities of open-ended chatbots to follow instructions. Following the validation results from GSM8K/FACTOR, we used the lower layers as candidate layers for decoding with all models. Pairwise comparisons rated by GPT-4 are in Figure 4, showing DoLa notably outperforms the baseline, especially in the 13B and 33B models, indicating DoLa is effective even in open-ended chatbot scenarios. Examples of qualitative studies are shown in Appendix M."
        },
        {
            "heading": "4 ANALYSIS",
            "text": ""
        },
        {
            "heading": "4.1 PREMATURE LAYER SELECTION STRATEGY",
            "text": "We introduce a variant of DoLa, DoLa-static, which selects a constant layer for contrasting throughout the decoding process. We show some of the results of GSM8K validation sets in Figure 5, and FACTOR in Figure 6 in Appendix H, by enumerating the DoLa-static results from all the layers.\nIn Figure 5 (left), DoLa-static performs better by contrasting lower layers. Some \u201coptimal\u201d layers, like the 10th layer, even outperform DoLa. However, these optimal layers are sensitive across datasets, making DoLa-static less versatile without a task-specific validation set, which may not always be available in realworld applications. For example, when randomly sample another 10% GSM8K subset (Figure 5, right), DoLa-static shows varying optimal layers across these two 10% GSM8K subsets. The 10th layer is optimal\nin subset #1, while the 2nd layer is optimal in subset #2. Using subset #1\u2019s optimal layer for subset #2 decreases its performance, highlighting DoLa-static\u2019s sensitivity to fixed layer choice. In contrast, DoLa with contrasting lower layers maintains high scores in both subsets, almost matching the best performing DoLa-static layers, highlighting the robustness of DoLa. Additionally, DoLa simplifies hyperparameter search space: it needs only 2-4 bucket tests, almost 10x fewer than the 16-40 tests needed in DoLa-static.\nWe include another analysis on the optimality of our dynamic layer selection strategy in Appendix J. Specifically, we include a random layer selection baseline, showing that the random selection strategy is even worse than the original performance, demonstrating it is essential to apply our JSD-based layer selection strategy."
        },
        {
            "heading": "4.2 LATENCY & THROUGHPUT",
            "text": "The greedy decoding latency in Table 2 shows DoLa increases the decoding time by factors of 1.01 to 1.08, suggesting DoLa can be widely applied with negligible cost. The memory analysis/inference details are shown in Appendix E/F."
        },
        {
            "heading": "4.3 QUALITATIVE STUDY",
            "text": "In Table 3, we show TruthfulQA examples generated deterministically via greedy decoding from LLaMA33B, with truth/info scores by fine-tuned GPT-3. In Q1, the baseline produces the plausible but incorrect date \u201cJuly 4, 1776,\u201d while DoLa outputs the correct \u201cAugust 2, 1776.\u201d In Q2, the baseline offers the false concept of \u201cwait 24 hours,\u201d countered by DoLa\u2019 truthful response, showing that DoLa can avoid generating false information. Q3 is a counterexample, where the baseline states \u201cI have no comment\u201d to get 1.0/0.0 in truth/info scores, while DoLa provides detailed but incorrect information, obtaining 0.0/1.0 in truth/info scores. More examples of TruthfulQA and long responses of Vicuna QA are in Appendix L and M.\nBesides qualitative study, we also evaluate the text generation quality of DoLa by leveraging GPT-4, and the results are shown in Appendix D. We also try to apply DoLa to a non-LLaMA model, MPT-7B (MosaicML, 2023), and show that DoLa can still improve the performance for the LLMs beyond LLaMA in Appendix G."
        },
        {
            "heading": "5 RELATED WORK",
            "text": "Hallucinations in LLMs. Hallucinations in LLMs refer to generated content not based on training data or facts, caused by various factors like imperfect learning and decoding (Ji et al., 2023). Ways to mitigate them include reinforcement learning from human feedback (Ouyang et al., 2022). Recent strategies involve inference-time self-consistency checks (Manakul et al., 2023), multi-agent debating (Du et al., 2023; Liang et al., 2023), and inference-time intervention using human labels (Li et al., 2023).\nNLP Pipeline in Transformer. A study by Tenney et al. (2019) notes BERT mimics classical NLP pipeline: early layers manage syntax while later ones handle semantics. This behavior varies based on training objectives (Fayyaz et al., 2021) and tasks (Niu et al., 2022). Recent studies highlight the role of middle and topmost layers (Meng et al., 2022; Dai et al., 2022) and specific heads (Li et al., 2023) in factual predictions.\nContrastive Decoding. Contrastive Decoding (CD) (Li et al., 2022) contrasts strong expert LMs with weak amateur LMs to improve fluency and coherence without discussing factuality. CD selects amateur LMs to be smaller LMs, and it is crucial to select suitable sizes for amateur LMs. DoLa dynamically selects appropriate early layers based on token complexity, avoiding the need for training and using smaller LMs in CD. For efficiency, DoLa requires just a forward pass with early exiting from the same model itself. O\u2019Brien & Lewis (2023) is a concurrent work that extends CD to be evaluated on reasoning tasks.\nFollowing the concept of CD, Shi et al. (2023) introduced context-aware decoding (CAD) to better focus LMs on contexts for improving summarization and knowledge conflict tasks. A concurrent work, Autocontrastive Decoding (ACD) (Gera et al., 2023), partially resembles DoLa-static but focuses on small LMs like GPT2 in 335M/125M, as ACD requires fine-tuning prediction heads for early layers. Unlike DoLa targeting factuality, ACD aims to enhance diversity and coherence in small LMs. Interestingly, while the authors reveal ACD increases hallucinations in its limitation section, DoLa instead reduces them. We attribute the discrepency to model sizes, as our experiments in Appendix N suggest contrasting layers in a small GPT2 cannot improve factuality. Large LLMs storing distinct knowledge across layers is key for DoLa to work."
        },
        {
            "heading": "6 CONCLUSION AND LIMITATIONS",
            "text": "In this paper, we introduce Decoding by Contrasting Layers (DoLa), a novel decoding strategy aimed at reducing hallucinations in LLMs. Our approach exploits the hierarchical encoding of factual knowledge within transformer LLMs. Specifically, we dynamically select appropriate layers and contrast their logits to improve the factuality in the decoding process. Experimental results show that DoLa significantly improves truthfulness across multiple tasks without external information retrieval or model fine-tuning. Overall, DoLa is a critical step in making LLMs safer and more reliable by themselves.\nDoLa also has limitations: 1) Focusing on factuality: We have not explored DoLa in other dimensions such as reinforcement learning from human feedback (Ouyang et al., 2022). 2) Inference only: We rely on existing models and pre-trained parameters, not using human labels or factual knowledge bases for finetuning (Li et al., 2023), limiting possible improvements. 3) Not grounding on external knowledge: Our method relies on the model\u2019s internal knowledge without using external retrieval modules (Izacard et al., 2022; Borgeaud et al., 2022; Ram et al., 2023). Thus, it cannot correct misinformation acquired during training. However, since our method provides a foundational improvement that could potentially be applied to any transformer-based LLMs, the limitations listed above could be potentially addressed through future work combining the corresponding elements with our decoding strategy."
        },
        {
            "heading": "ACKNOWLEDGEMENTS",
            "text": "We thank all the anonymous reviewers for their helpful discussions and insightful feedback. This research was mainly done during Yung-Sung\u2019s internship at Microsoft, Redmond. Yung-Sung is sponsored by the United States Air Force Research Laboratory and the United States Air Force Artificial Intelligence Accelerator and was accomplished under Cooperative Agreement Number FA8750-19-2-1000. The views and conclusions contained in this document are those of the authors and should not be interpreted as representing the official policies, either expressed or implied, of the Army Research Office or the United States Air Force or the U.S. Government. The U.S. Government is authorized to reproduce and distribute reprints for Government purposes, notwithstanding any copyright notation herein."
        },
        {
            "heading": "A PRELIMINARY QUANTITATIVE STUDY TO SUPPORT FIGURE 2",
            "text": "We include an additional study to quantitatively support the claim we made from the observation in Figure 2. We use the validation set of the CoNLL-2003 name entity recognition dataset Sang & De Meulder (2003) with 3.25K examples. 2 We calculate which layer has the largest JS-divergence with the final layer when LLaMA-7B predicts the next token with teacher forcing (we simply call this layer the \u201ccritical layer\u201d for short). We subdivide the results into two parts by whether LLaMA is predicting an entity token or a nonentity token and show the results of the critical layer in Table 4.\nFrom Table 4, we can find that 75% of the time the critical layer will be layer 0 when predicting non-entity tokens. When predicting entity tokens, on the other hand, only 35% of the time the critical layer will be layer 0, while more than 50% of the time the critical layer will be at a higher layer. This experiment can quantitatively support our observations in Figure 2.\nNote that we use teacher forcing to send the ground truth into LLaMA to predict the next word for each token in the sentence. And the ground truth sentences are not generated by LLaMA. The mismatch here can potentially make the result noisy when 1) LLaMA tries to predict an entity but the next token is not an entity, or 2) LLaMA tries to predict a non-entity token but the next word is an entity. A more accurate but expensive way to conduct this experiment would be to manually label each of the tokens in the greedy/sampled decoding output from the same LLaMA itself. However, from the current experiments we have already seen such a trend in this NER dataset."
        },
        {
            "heading": "B EXPLORATION IN CONTRASTIVE DECODING BASELINE: GSM8K",
            "text": "We explore the possibility of using smaller amateur models for contrastive decoding (CD) (Li et al., 2022) to create better baselines. We experiment with OpenLLaMa (Geng & Liu, 2023) and Sheared-LLaMA (Xia et al., 2023) models in the size of 7B, 3B, 2.7B, 1.3B. The results are shown in Table 5. We can see that\n2https://huggingface.co/datasets/conll2003\nusing a small amateur LM, especially the 1.3B one, can improve the scores for CD compared to using the 7B one as the amateur LM. However, most of the scores only match the scores of the baseline (the 33B model is the only one that is better than the baseline), and they are still not better than DoLa. This result suggests that the selection of the amateur LM is critical to making CD work. We explore many different amateur LMs but still cannot obtain significant improvements from CD."
        },
        {
            "heading": "C TRUTHFULQA DETAILS & SCORES FOR CONTRASTING WITH THE WORD EMBEDDING LAYER / ALL LAYERS",
            "text": "When implementing DoLa for TruthfulQA, we found that not applying the softmax function on top of F (defined in Section 2) can make the performance even better as shown in Table 6, so we stuck with this implementation for (and only for) the TruthfulQA multiple choices setting. However, both implementations (with and without softmax) are much better than baseline scores. We did not observe the same phenomenon on other datasets.\nWe also include the analysis of applying DoLa on TruthfulQA with two variants of DoLa: 1) only contrasting with the word embedding (0-th) layer, and 2) contrasting with all the early even-numbered layers dynamically. The results are shown in Table 7. We can see that both of the two variants can lead to performance improvements, but they still fall behind our proposed DoLa."
        },
        {
            "heading": "D GPT-4 EVALUATION ON TEXT GENERATION QUALITY",
            "text": "We conduct an additional study of the quality of generated text using GPT4, given the fact that several prior studies Chiang & Lee (2023a); Liu et al. (2023) have shown the great potential of GPT-4 to serve as an alternative to human evaluation. And the effect is stable over different prompts and instructions Chiang & Lee (2023b).\nWe adopt the pairwise evaluation code from Vicuna QA 3. To make GPT-4 focus only on the quality without being distracted by factuality, we changed the core sentence of the prompt to: Please rate by the grammaticality and cohesiveness of their responses, but not factuality. You are not required to verify the factual accuracy of the answers. Each assistant receives an overall score on a scale of 1 to 10, where a higher score indicates better quality.\nBy using the prompt above, we observed the responses from GPT-4 can judge the answers based on grammaticality and cohesiveness without checking the factual correctness. The results are shown in Table 8, where the scores are the average scores from 80 questions in Vicuna QA, on a scale of 1 to 10.\nWe can observe that for 7B/13B/33B models, DoLa has better grammaticality and cohesiveness compared to the vanilla decoding baseline. For the largest 65B model, DoLa achieves a score that is almost the same as vanilla decoding. We conclude that when evaluating text generation quality without considering factuality, DoLa is still on par with (65B) or better than (7B/13B/33B) vanilla decoding."
        },
        {
            "heading": "E MEMORY OVERHEAD",
            "text": "To measure the overhead, we calculate (a) the occupied GPU memory before the first forward pass and (b) the peak GPU memory during the forward passes. And then we can compute the memory overhead by (b)\u2212 (a), or the proportion of overhead [(b)\u2212(a)](a) in %. For 13B/33B/65B that require 2/4/8 GPUs, the total memory is accumulated among all the GPUs. The results are shown in Table 9.\n3https://github.com/lm-sys/vicuna-blog-eval/tree/main/eval\nWe can see that during the forward pass of LLaMA-7B, the overhead for vanilla decoding is 2.5% while DoLa requires 3.6%. There is only 1.1% difference for the memory overhead between Vanilla and DoLa. For 13b/30b/65b models, the difference is even smaller than 1%. This result shows that the difference in memory overhead between DoLa and the vanilla decoding baseline is still negligible.\nF INFERENCE DETAILS\nWe run all the experiments with NVIDIA V100 GPUs on the machines equipped with 40-core CPUs of Intel(R) Xeon(R) Platinum 8168 CPU @ 2.70GHZ. We use the Huggingface Transformers package 4 to conduct experiments. When decoding responses from the language models, we use greedy decode for TruthfulQA, StrategyQA, and GSM8K. For the Vicuna QA Benchmark, we use random sampling with temperature 0.7 and max new tokens 1024 to generate the responses.\nFor the latency and throughput analysis in Section 4.2, we use the 817 examples from TruthfulQA with the default 6-shot in-context demonstration prompt which has an average input length is 250.3 after concatenating the prompt with the questions. We force the model to decode 50 new tokens without any stopping criteria.\n4https://github.com/huggingface/transformers\nWe run the models with 16-bit floating point and batch size = 1. For LLaMA 7/13/33/65B models, we use 1/2/4/8 GPUs, respectively. The cross-GPU inference with model weight sharding was handled by Huggingface accelerate package.5\nWe divide the layers of LLaMA 7/13/33/65B models into 2/2/3/4 buckets of candidate layers. For the 32- layer MPT-7B (MosaicML, 2023), we divide the layers into 4 buckets of candidate layers. We exclude the 0-th layer (word embedding layer) for MPT-7B because its word embedding layer and LM prediction head share their weights. Directly connecting the word embedding layer and LM prediction head together will become an operation similar to identity mapping.\nThe following table concludes the best bucket selected by the validation set. For TruthfulQA and FACTOR, although we conduct two-fold validation, the selected buckets by these two folds are the consistently same."
        },
        {
            "heading": "G NON-LLAMA MODEL",
            "text": "To check if DoLa works beyond LLaMA models, we tested MPT-7B (MosaicML, 2023). Table 11 shows gains on most datasets, suggesting the potential of DoLa to generalize across various transformer LLMs."
        },
        {
            "heading": "H STATIC VS DYNAMIC PREMATURE LAYER SELECTION ON FACTOR",
            "text": "In Figure 6, we show the additional examples on FACTOR-News to compare the performance of DoLa and DoLa-static, for the four LLaMA models.\n5https://huggingface.co/docs/accelerate/concept guides/big model inference"
        },
        {
            "heading": "I SCORES FOR DOLA-STATIC WITH VALIDATION SELECTED PREMATURE LAYERS",
            "text": "Besides the visualized comparisons, we also compare the scores of DoLa and DoLa-static in Table 12, 13, 14. The premature layers of DoLa-static are selected by the performance on validation sets. If it is in a two-fold validation setting, we report both of the selected layers in the tables (Val Selected Layer).\nWe can observe that for TruthfulQA and FACTOR, DoLa-static is slightly better than DoLa in most of the cases. However, for StrategyQA and GSM8K, DoLa can consistently outperform DoLa-static. Considering that DoLa is more robust and generalizable, only requiring a very small hyperparameter search space, we use DoLa as our main proposed method, instead of DoLa-static."
        },
        {
            "heading": "J RANDOM LAYER SELECTION BASELINE",
            "text": "One question in our proposed method is: How optimal is this dynamic layer selection method? For comparison, we used a \u201crandom\u201d baseline similar to DoLa but with layers chosen randomly. Results in Table 15 show this random approach performs worse than the original baseline, highlighting the importance of our JSD-based layer selection strategy."
        },
        {
            "heading": "K THE EFFECTS OF REPETITION PENALTY",
            "text": "In Section 2.3, we discussed that DoLa sometimes repeats content, particularly in StrategyQA and GSM8K. To mitigate this, we apply a repetition penalty. Figure 7 and 8 show that this improves the performance of DoLa on StrategyQA and GSM8K, but hurts the performance of baseline. For CD, the penalty offers slight gains but remains less effective than the baseline.\nStrategyQA LLaMA-7B\nStrategyQA LLaMA-13B\nStrategyQA LLaMA-33B\nStrategyQA LLaMA-65B"
        },
        {
            "heading": "L ADDITIONAL EXAMPLES FOR QUALITATIVE STUDY ON TRUTHFULQA",
            "text": "In Table 3, we show additional examples for comparing the responses from LLaMA-33B with and without DoLa. All the responses are generated using greedy decoding."
        },
        {
            "heading": "M QUALITATIVE STUDY FOR PAIRWISE COMPARISON BY GPT-4",
            "text": "We show several examples in Vicuna QA with the long-sequence responses by LLaMA-33B, with and without DoLa, along with the judgment by GPT-4. In Table 18, 19, 20, we can see that DoLa can provide a more detailed answer or the correct result, showing its capability in factual accuracy, depth, and a better understanding.\nBesides the examples that DoLa outperforms the baseline, we also show examples that DoLa underperforms the baseline by GPT-4 judgment in Table 21 and 22. We can observe that although DoLa tends to generate detailed factual information, sometimes it will not be as relevant to the question as the baseline\u2019s answer. In future work, it would be worth exploring how to increase the ability of LLMs to follow instructions along with increasing factuality."
        },
        {
            "heading": "N SMALL LANGUAGE MODELS",
            "text": "We apply DoLa to the GPT2 Medium model with 335M parameters, to mimic the setting of Gera et al. (2023) and investigate the effects of DoLa on small LMs. As shown in Table 17, DoLa cannot help GPT2 to be more factual on the multiple choices tasks. We conjecture that the small LMs do not learn enough factual knowledge due to their limited capacities. Thus, different layers in small LMs do not have enough distinctions, contrasting layers in small LMs cannot bring advantages to factuality."
        }
    ],
    "title": "DOLA: DECODING BY CONTRASTING LAYERS IMPROVES FACTUALITY IN LARGE LANGUAGE MODELS",
    "year": 2024
}