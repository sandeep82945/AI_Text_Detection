{
    "abstractText": "Imposing known physical constraints, such as conservation laws, during neural network training introduces an inductive bias that can improve accuracy, reliability, convergence, and data efficiency for modeling physical dynamics. While such constraints can be softly imposed via loss function penalties, recent advancements in differentiable physics and optimization improve performance by incorporating PDE-constrained optimization as individual layers in neural networks. This enables a stricter adherence to physical constraints. However, imposing hard constraints significantly increases computational and memory costs, especially for complex dynamical systems. This is because it requires solving an optimization problem over a large number of points in a mesh, representing spatial and temporal discretizations, which greatly increases the complexity of the constraint. To address this challenge, we develop a scalable approach to enforce hard physical constraints using Mixture-of-Experts (MoE), which can be used with any neural network architecture. Our approach imposes the constraint over smaller decomposed domains, each of which is solved by an \u201cexpert\u201d through differentiable optimization. During training, each expert independently performs a localized backpropagation step by leveraging the implicit function theorem; the independence of each expert allows for parallelization across multiple GPUs. Compared to standard differentiable optimization, our scalable approach achieves greater accuracy in the neural PDE solver setting for predicting the dynamics of challenging non-linear systems. We also improve training stability and require significantly less computation time during both training and inference stages.",
    "authors": [
        {
            "affiliations": [],
            "name": "Nithin Chalapathi"
        },
        {
            "affiliations": [],
            "name": "Yiheng Du"
        },
        {
            "affiliations": [],
            "name": "Aditi S. Krishnapriyan"
        }
    ],
    "id": "SP:b2cd87c4eaa855f21b14a5685f188eb411463edb",
    "references": [
        {
            "authors": [
                "Brandon Amos",
                "J. Zico Kolter"
            ],
            "title": "OptNet: Differentiable Optimization as a Layer in Neural Networks",
            "venue": "In Proceedings of the 34th International Conference on Machine Learning,",
            "year": 2017
        },
        {
            "authors": [
                "Brandon Amos",
                "Lei Xu",
                "J. Zico Kolter"
            ],
            "title": "Input convex neural networks",
            "venue": "In Proceedings of the 34th International Conference on Machine Learning,",
            "year": 2017
        },
        {
            "authors": [
                "Albert S. Berahas",
                "Frank E. Curtis",
                "Daniel Robinson",
                "Baoyu Zhou"
            ],
            "title": "Sequential quadratic optimization for nonlinear equality constrained stochastic optimization",
            "venue": "SIAM Journal on Optimization,",
            "year": 2021
        },
        {
            "authors": [
                "Mathieu Blondel",
                "Quentin Berthet",
                "Marco Cuturi",
                "Roy Frostig",
                "Stephan Hoyer",
                "Felipe LlinaresLopez",
                "Fabian Pedregosa",
                "Jean-Philippe Vert"
            ],
            "title": "Efficient and Modular Implicit Differentiation",
            "venue": "In Advances in Neural Information Processing Systems,",
            "year": 2022
        },
        {
            "authors": [
                "James Bradbury",
                "Roy Frostig",
                "Peter Hawkins",
                "Matthew James Johnson",
                "Chris Leary",
                "Dougal Maclaurin",
                "George Necula",
                "Adam Paszke",
                "Jake VanderPlas",
                "Skye Wanderman-Milne",
                "Qiao Zhang"
            ],
            "title": "JAX: composable transformations of Python+NumPy programs, 2018",
            "venue": "URL http: //github.com/google/jax",
            "year": 2018
        },
        {
            "authors": [
                "Ulisses Braga-Neto"
            ],
            "title": "Characteristics-informed neural networks for forward and inverse hyperbolic problems, 2023",
            "year": 2023
        },
        {
            "authors": [
                "Dario Amodei"
            ],
            "title": "Language Models are Few-Shot Learners",
            "venue": "In Advances in Neural Information Processing Systems,",
            "year": 2020
        },
        {
            "authors": [
                "Ricky T.Q. Chen",
                "Yulia Rubanova",
                "Jesse Bettencourt",
                "David K Duvenaud"
            ],
            "title": "Neural ordinary differential equations",
            "venue": "In Advances in Neural Information Processing Systems,",
            "year": 2018
        },
        {
            "authors": [
                "Filipe de Avila Belbute-Peres",
                "Kevin Smith",
                "Kelsey Allen",
                "Josh Tenenbaum",
                "J. Zico Kolter"
            ],
            "title": "End-to-end differentiable physics for learning and control",
            "venue": "In Advances in Neural Information Processing Systems,",
            "year": 2018
        },
        {
            "authors": [
                "Priya L. Donti",
                "David Rolnick",
                "J. Zico Kolter"
            ],
            "title": "DC3: A learning method for optimization with hard constraints",
            "venue": "In International Conference on Learning Representations,",
            "year": 2021
        },
        {
            "authors": [
                "Yiheng Du",
                "Nithin Chalapathi",
                "Aditi Krishnapriyan"
            ],
            "title": "Neural spectral methods: Self-supervised learning in the spectral domain",
            "venue": "arXiv preprint arXiv:2312.05225,",
            "year": 2023
        },
        {
            "authors": [
                "Yuchen Fang",
                "Sen Na",
                "Michael W. Mahoney",
                "Mladen Kolar"
            ],
            "title": "Fully stochastic trust-region sequential quadratic programming for equality-constrained optimization problems",
            "year": 2024
        },
        {
            "authors": [
                "Isom H. Herron",
                "Michael R. Foster"
            ],
            "title": "Partial Differential Equations in Fluid Dynamics",
            "venue": "In Advances in Neural Information Processing Systems,",
            "year": 2008
        },
        {
            "authors": [
                "Jacob Kelly",
                "Jesse Bettencourt",
                "Matthew J Johnson",
                "David K Duvenaud"
            ],
            "title": "Learning Differential Equations that are Easy to Solve",
            "venue": "In Advances in Neural Information Processing Systems,",
            "year": 2020
        },
        {
            "authors": [
                "Nitish Shirish Keskar",
                "Dheevatsa Mudigere",
                "Jorge Nocedal",
                "Mikhail Smelyanskiy",
                "Ping Tak Peter Tang"
            ],
            "title": "On large-batch training for deep learning: Generalization gap and sharp minima",
            "venue": "arXiv preprint arXiv:1609.04836,",
            "year": 2016
        },
        {
            "authors": [
                "Patrick Kidger",
                "Cristian Garcia"
            ],
            "title": "Equinox: neural networks in JAX via callable PyTrees and filtered transformations",
            "venue": "Differentiable Programming workshop at Neural Information Processing Systems",
            "year": 2021
        },
        {
            "authors": [
                "James Kotary",
                "Ferdinando Fioretto",
                "Pascal Van Hentenryck",
                "Bryan Wilder"
            ],
            "title": "End-to-end constrained optimization learning: A survey",
            "venue": "arXiv preprint arXiv:2103.16378,",
            "year": 2021
        },
        {
            "authors": [
                "Aditi Krishnapriyan",
                "Amir Gholami",
                "Shandian Zhe",
                "Robert Kirby",
                "Michael W Mahoney"
            ],
            "title": "Characterizing possible failure modes in physics-informed neural networks",
            "venue": "In Advances in Neural Information Processing Systems,",
            "year": 2021
        },
        {
            "authors": [
                "Zongyi Li",
                "Nikola Kovachki",
                "Kamyar Azizzadenesheli",
                "Burigede Liu",
                "Kaushik Bhattacharya",
                "Andrew Stuart",
                "Anima Anandkumar"
            ],
            "title": "Fourier Neural Operator for Parametric Partial Differential Equations",
            "venue": "arXiv preprint arXiv:2010.08895,",
            "year": 2021
        },
        {
            "authors": [
                "Zongyi Li",
                "Hongkai Zheng",
                "Nikola Kovachki",
                "David Jin",
                "Haoxuan Chen",
                "Burigede Liu",
                "Kamyar Azizzadenesheli",
                "Anima Anandkumar"
            ],
            "title": "Physics-informed neural operator for learning partial differential equations",
            "venue": "arXiv preprint arXiv:2111.03794,",
            "year": 2021
        },
        {
            "authors": [
                "Bj\u00f6rn List",
                "Li-Wei Chen",
                "Nils"
            ],
            "title": "Thuerey. Learned turbulence modelling with differentiable fluid solvers: physics-based loss functions and optimisation horizons",
            "venue": "Journal of Fluid Mechanics,",
            "year": 2022
        },
        {
            "authors": [
                "Lu Lu",
                "Raphael Pestourie",
                "Wenjie Yao",
                "Zhicheng Wang",
                "Francesc Verdugo",
                "Steven G Johnson"
            ],
            "title": "Physics-informed neural networks with hard constraints for inverse design",
            "venue": "SIAM Journal on Scientific Computing,",
            "year": 2021
        },
        {
            "authors": [
                "Pingchuan Ma",
                "Peter Yichen Chen",
                "Bolei Deng",
                "Joshua B Tenenbaum",
                "Tao Du",
                "Chuang Gan",
                "Wojciech Matusik"
            ],
            "title": "Learning neural constitutive laws from motion observations for generalizable pde dynamics",
            "venue": "In International Conference on Machine Learning. PMLR,",
            "year": 2023
        },
        {
            "authors": [
                "Andreas Mayr",
                "Sebastian Lehner",
                "Arno Mayrhofer",
                "Christoph Kloss",
                "Sepp Hochreiter",
                "Johannes Brandstetter"
            ],
            "title": "Boundary Graph Neural Networks for 3D Simulations",
            "venue": "Proceedings of the AAAI Conference on Artificial Intelligence,",
            "year": 2023
        },
        {
            "authors": [
                "Takeru Miyato",
                "Toshiki Kataoka",
                "Masanori Koyama",
                "Yuichi Yoshida"
            ],
            "title": "Spectral Normalization for Generative Adversarial Networks",
            "venue": "arXiv preprint arXiv:1802.05957,",
            "year": 2018
        },
        {
            "authors": [
                "Sen Na",
                "Sungho Shin",
                "Mihai Anitescu",
                "Victor M. Zavala"
            ],
            "title": "On the convergence of overlapping schwarz decomposition for nonlinear optimal control",
            "venue": "IEEE Transactions on Automatic Control,",
            "year": 2022
        },
        {
            "authors": [
                "Hans Bruun Nielsen",
                "Kaj Madsen"
            ],
            "title": "Introduction to Optimization and Data Fitting",
            "venue": "Informatics and Mathematical Modelling,",
            "year": 2010
        },
        {
            "authors": [
                "Frans T.M. Nieuwstadt",
                "Jerry Westerweel",
                "Bendiks J. Boersma"
            ],
            "title": "Introduction to Theory and Applications of Turbulent Flows",
            "year": 2016
        },
        {
            "authors": [
                "Evgenii Nikishin",
                "Romina Abachi",
                "Rishabh Agarwal",
                "Pierre-Luc Bacon"
            ],
            "title": "Control-oriented model-based reinforcement learning with implicit differentiation",
            "venue": "In Proceedings of the AAAI Conference on Artificial Intelligence,",
            "year": 2022
        },
        {
            "authors": [
                "Geoffrey N\u00e9giar",
                "Michael W. Mahoney",
                "Aditi Krishnapriyan"
            ],
            "title": "Learning differentiable solvers for systems with hard constraints",
            "venue": "In The Eleventh International Conference on Learning Representations,",
            "year": 2023
        },
        {
            "authors": [
                "Rapha\u00ebl Pestourie",
                "Youssef Mroueh",
                "Chris Rackauckas",
                "Payel Das",
                "Steven G. Johnson"
            ],
            "title": "Physicsenhanced deep surrogates for partial differential equations",
            "venue": "Nature Machine Intelligence,",
            "year": 2023
        },
        {
            "authors": [
                "Luis Pineda",
                "Taosha Fan",
                "Maurizio Monge",
                "Shobha Venkataraman",
                "Paloma Sodhi",
                "Ricky T.Q. Chen",
                "Joseph Ortiz",
                "Daniel DeTone",
                "Austin Wang",
                "Stuart Anderson",
                "Jing Dong",
                "Brandon Amos",
                "Mustafa Mukadam"
            ],
            "title": "Theseus: A Library for Differentiable Nonlinear Optimization",
            "venue": "In Advances in Neural Information Processing Systems,",
            "year": 2022
        },
        {
            "authors": [
                "Yi-Ling Qiao",
                "Junbang Liang",
                "Vladlen Koltun",
                "Ming C. Lin"
            ],
            "title": "Scalable Differentiable Physics for Learning and Control",
            "venue": "In Proceedings of the 37th International Conference on Machine Learning,",
            "year": 2020
        },
        {
            "authors": [
                "Maziar Raissi",
                "Paris Perdikaris",
                "George E Karniadakis"
            ],
            "title": "Physics-informed neural networks: A deep learning framework for solving forward and inverse problems involving nonlinear partial differential equations",
            "venue": "Journal of Computational Physics,",
            "year": 2019
        },
        {
            "authors": [
                "Bharath Ramsundar",
                "Dilip Krishnamurthy",
                "Venkatasubramanian Viswanathan"
            ],
            "title": "Differentiable Physics: A Position Piece",
            "venue": "arXiv preprint arXiv:2109.07573,",
            "year": 2021
        },
        {
            "authors": [
                "Jack Richter-Powell",
                "Yaron Lipman",
                "Ricky T.Q. Chen"
            ],
            "title": "Neural conservation laws: A divergencefree perspective",
            "venue": "In Advances in Neural Information Processing Systems,",
            "year": 2022
        },
        {
            "authors": [
                "Carlos Riquelme Ruiz",
                "Joan Puigcerver",
                "Basil Mustafa",
                "Maxim Neumann",
                "Rodolphe Jenatton",
                "Andr\u00e9 Susano Pinto",
                "Daniel Keysers",
                "Neil Houlsby"
            ],
            "title": "Scaling Vision with Sparse Mixture of Experts",
            "venue": "In Advances in Neural Information Processing Systems,",
            "year": 2021
        },
        {
            "authors": [
                "Nadim Saad",
                "Gaurav Gupta",
                "Shima Alizadeh",
                "Danielle C. Maddix"
            ],
            "title": "Guiding continuous operator learning through Physics-based boundary constraints",
            "venue": "In International Conference on Learning Representations,",
            "year": 2023
        },
        {
            "authors": [
                "Noam Shazeer",
                "Azalia Mirhoseini",
                "Krzysztof Maziarz",
                "Andy Davis",
                "Quoc Le",
                "Geoffrey Hinton",
                "Jeff Dean"
            ],
            "title": "Outrageously large neural networks: The sparsely-gated mixture-of-experts layer",
            "venue": "In International Conference on Learning Representations,",
            "year": 2017
        },
        {
            "authors": [
                "Sam Smith",
                "Pieter-jan Kindermans",
                "Chris Ying",
                "Quoc V. Le"
            ],
            "title": "Don\u2019t decay the learning rate, increase the batch size",
            "venue": "In International Conference on Learning Representations,",
            "year": 2018
        },
        {
            "authors": [
                "Natarajan Sukumar",
                "Ankit Srivastava"
            ],
            "title": "Exact imposition of boundary conditions with distance functions in physics-informed deep neural networks",
            "venue": "Computer Methods in Applied Mechanics and Engineering,",
            "year": 2022
        },
        {
            "authors": [
                "Tetsuya Takahashi",
                "Junbang Liang",
                "Yi-Ling Qiao",
                "Ming C. Lin"
            ],
            "title": "Differentiable fluids with solid coupling for learning and control",
            "venue": "Proceedings of the AAAI Conference on Artificial Intelligence,",
            "year": 2021
        },
        {
            "authors": [
                "Makoto Takamoto",
                "Timothy Praditia",
                "Raphael Leiteritz",
                "Daniel MacKinlay",
                "Francesco Alesiani",
                "Dirk Pfl\u00fcger",
                "Mathias Niepert"
            ],
            "title": "PDEBench: An Extensive Benchmark for Scientific Machine Learning",
            "venue": "In Advances in Neural Information Processing Systems,",
            "year": 2022
        },
        {
            "authors": [
                "Charles R. Harris",
                "Anne M. Archibald",
                "Ant\u00f4nio H. Ribeiro",
                "Fabian Pedregosa",
                "Paul van"
            ],
            "title": "Mulbregt, and SciPy 1.0 Contributors. SciPy 1.0: Fundamental Algorithms for Scientific Computing in Python",
            "venue": "Nature Methods,",
            "year": 2020
        },
        {
            "authors": [
                "Sifan Wang",
                "Yujun Teng",
                "Paris Perdikaris"
            ],
            "title": "Understanding and mitigating gradient flow pathologies in physics-informed neural networks",
            "venue": "SIAM Journal on Scientific Computing,",
            "year": 2021
        },
        {
            "authors": [
                "Zhou Xian",
                "Bo Zhu",
                "Zhenjia Xu",
                "Hsiao-Yu Tung",
                "Antonio Torralba",
                "Katerina Fragkiadaki",
                "Chuang Gan"
            ],
            "title": "Fluidlab: A differentiable environment for benchmarking complex fluid manipulation",
            "venue": "In International Conference on Learning Representations,",
            "year": 2023
        },
        {
            "authors": [
                "Kailai Xu",
                "Eric Darve"
            ],
            "title": "Physics Constrained Learning for Data-driven Inverse Modeling from Sparse Observations",
            "venue": "Journal of Computational Physics,",
            "year": 2022
        },
        {
            "authors": [
                "Fangcheng Zhong",
                "Kyle Thomas Fogarty",
                "Param Hanji",
                "Tianhao Walter Wu",
                "Alejandro Sztrajman",
                "Andrew Everett Spielberg",
                "Andrea Tagliasacchi",
                "Petra Bosilj",
                "Cengiz Oztireli"
            ],
            "title": "Neural fields with hard constraints of arbitrary differential order",
            "venue": "In Thirty-seventh Conference on Neural Information Processing Systems,",
            "year": 2023
        }
    ],
    "sections": [
        {
            "text": "Imposing known physical constraints, such as conservation laws, during neural network training introduces an inductive bias that can improve accuracy, reliability, convergence, and data efficiency for modeling physical dynamics. While such constraints can be softly imposed via loss function penalties, recent advancements in differentiable physics and optimization improve performance by incorporating PDE-constrained optimization as individual layers in neural networks. This enables a stricter adherence to physical constraints. However, imposing hard constraints significantly increases computational and memory costs, especially for complex dynamical systems. This is because it requires solving an optimization problem over a large number of points in a mesh, representing spatial and temporal discretizations, which greatly increases the complexity of the constraint. To address this challenge, we develop a scalable approach to enforce hard physical constraints using Mixture-of-Experts (MoE), which can be used with any neural network architecture. Our approach imposes the constraint over smaller decomposed domains, each of which is solved by an \u201cexpert\u201d through differentiable optimization. During training, each expert independently performs a localized backpropagation step by leveraging the implicit function theorem; the independence of each expert allows for parallelization across multiple GPUs. Compared to standard differentiable optimization, our scalable approach achieves greater accuracy in the neural PDE solver setting for predicting the dynamics of challenging non-linear systems. We also improve training stability and require significantly less computation time during both training and inference stages."
        },
        {
            "heading": "1 INTRODUCTION",
            "text": "Many problems necessitate modeling the physical world, which is governed by a set of established physical laws. For example, conservation laws such as conservation of mass and conservation of momentum are integral to the understanding and modeling of fluid dynamics, heat transfer, chemical reaction networks, and other related areas (Herron & Foster, 2008). Recently, machine learning (ML) approaches, and particularly neural networks (NNs), have shown promise in addressing problems in these areas.\nThe consistency of these physical laws means that they can provide a strong supervision signal for NNs and act as inductive biases, rather than relying on unstructured data. A common approach to incorporate physical laws into NN training is through a penalty term in the loss function, essentially acting as a soft constraint. However, this approach has drawbacks, as empirical evidence suggests that soft constraints can make the optimization problem difficult, leading to convergence issues (Krishnapriyan et al., 2021; Wang et al., 2021). Additionally, at inference time, soft constraints offer no guarantee of constraint enforcement, posing challenges for reliability and accuracy.\nAlternatively, given the unchanging nature of these physical laws, there lies potential to create improved constraint enforcement mechanisms during NN training. This can be particularly useful when there is limited training data available, or a demand for heightened reliability. This notion segues into the broader concept of a differentiable physics approach, where differentiation through\nphysical simulations ensures strict adherence to the underlying physical dynamics (Amos & Kolter, 2017; Qiao et al., 2020; Ramsundar et al., 2021; Kotary et al., 2021).\nTo solve a physical problem, typical practice in scientific computing is to use a mesh to represent the spatiotemporal domain. This mesh is discretized, and physical laws can be enforced on the points within the discretization. This can be considered an equality constrained optimization problem, and there are lines of work focusing on incorporating such problems as individual layers in larger endto-end trainable NNs (Ne\u0301giar et al., 2023; Amos & Kolter, 2017). The advantages of this approach include stricter enforcement of constraints during both training and inference time, which can lead to greater accuracy than the aforementioned soft constraint settings.\nHowever, these approaches, aimed at enforcing constraints more precisely (\u201chard\u201d constraints), also face a number of challenges. Backpropagating through constraints over large meshes is a highly non-linear problem that grows in dimensionality with respect to the mesh and NN model sizes. This means that it can be both computationally and memory intensive. This scenario epitomizes an inherent trade-off between how well the constraint is enforced, and the time and space complexity of enforcing the constraint.\nTo address these challenges, we propose a mixture-of-experts formulation to enforce equality constraints of physical laws over a spatiotemporal domain. We focus on systems whose dynamics are governed by partial differential equations (PDEs), and impose a set of scalable physics-informed hard constraints. To illustrate this, we view our framework through the neural PDE solver setting, where the goal is to learn a differential operator that models the solution to a system of PDEs. Our approach imposes the constraint over smaller decomposed domains, each of which is solved by an \u201cexpert\u201d through differentiable optimization. Each expert independently performs a localized optimization, imposing the known physical priors over its domain. During backpropagation, we then compute gradients using the implicit function theorem locally on a per-expert basis. This allows us to parallelize both the forward and backward pass, and improve training stability.\nOur main contributions are as follows:\n\u2022 We introduce a physics-informed mixture-of-experts training framework (PI-HC-MoE), which offers a scalable approach for imposing hard physical constraints on neural networks by differentiating through physical dynamics represented via a constrained optimization problem. By localizing the constraint, we parallelize computation while reducing the complexity of the constraint, leading to more stable training.\n\u2022 We instantiate PI-HC-MoE in the neural PDE solver setting, and demonstrate our approach on two challenging non-linear problems: diffusion-sorption and turbulent Navier-Stokes. Our approach yields significantly higher accuracy than soft penalty enforcement methods and standard hard-constrained differentiable optimization.\n\u2022 Through our scalable approach, PI-HC-MoE exhibits substantial efficiency improvements when compared to standard differentiable optimization. PI-HC-MoE exhibits sub-linear scaling as the hard constraint is enforced on an increasing number of sampled points within the spatiotemporal domain. In contrast, the execution time for standard differentiable optimization significantly escalates with the expansion of sampled points.\n\u2022 We release our code1, built using JAX, to facilitate reproducibility and enable researchers to explore and extend the results."
        },
        {
            "heading": "2 RELATED WORK",
            "text": "Constraints in Neural Networks. Prior works that impose constraints on NNs to enforce a prior inductive bias generally fall into two categories: soft and hard constraints. Soft constraints use penalty terms in the objective function to push the NN in a particular direction. For example, physics-informed neural networks (PINNs) (Raissi et al., 2019) use physical laws as a penalty term. Other examples include enforcing Lipschitz continuity (Miyato et al., 2018), Bellman optimally (Nikishin et al., 2022), turbulence (List et al., 2022), numerical surrogates (Pestourie et al., 2023), prolongation matrices (Huang et al., 2021), solver iterations (Kelly et al., 2020), spectral\n1https://github.com/ASK-Berkeley/physics-NNs-hard-constraints\nmethods Du et al. (2023), and convexity over derivatives (Amos et al., 2017). We are primarily concerned with hard constraints; methods that, by construction, exactly enforce the constraint at train and test time. Hard constraints can be enforced in multiple ways, including neural conservation laws (Richter-Powell et al., 2022), PDE-CL (Ne\u0301giar et al., 2023), BOON (Saad et al., 2023), constrained neural fields (Zhong et al., 2023), boundary graph neural networks (Mayr et al., 2023), PCL (Xu & Darve, 2022), constitutive laws (Ma et al., 2023), boundary conditions (Sukumar & Srivastava, 2022), characteristic layers Braga-Neto (2023), and inverse design (Lu et al., 2021).\nDifferentiable Optimization. An approach to impose a hard constraint is to use differentiable optimization to solve a system of equations. Differentiable optimization folds in a second optimization problem during the forward pass and uses the implicit function theorem (IFT) to compute gradients. OptNet (Amos & Kolter, 2017) provides one of the first formulations, which integrates linear quadratic programs into deep neural networks. DC3 (Donti et al., 2021) propose a new training and inference procedure involving two steps: completion to satisfy the constraint and correction to remedy any deviations. A related line of work are implicit neural layers (Blondel et al., 2022; Chen et al., 2018), which use IFT to replace the traditional autograd backprop procedure. Theseus (Pineda et al., 2022) and JaxOpt (Blondel et al., 2022) are two open-source libraries implementing common linear and non-linear least squares solvers on GPUs, and provide implicit differentiation capabilities. Our formulation is agnostic to the exact method, framework, or iterative solver used. We focus on non-linear least squares solvers because of their relevance to real-world problems, though many potential alternative solver choices exist (Berahas et al., 2021; Fang et al., 2024; Na et al., 2022).\nDifferentiable Physics. Related to differentiable optimization, differentiable physics (de Avila Belbute-Peres et al., 2018) embeds physical simulations within a NN training pipeline (Ramsundar et al., 2021). Qiao et al. (2020) leverage meshes to reformulate the linear complementary problem when simulating collisions. This line of work is useful within the context of reinforcement learning, where computing the gradients of a physics state simulator may be intractable. Differentiable fluid state simulators (Xian et al., 2023; Takahashi et al., 2021) are another example.\nMixture-of-Experts. MoE was popularized in natural language processing as a method to increase NN capacity while balancing computation (Shazeer et al., 2017). The key idea behind MoE is to conditionally route computation through \u201cexperts\u201d, smaller networks that run independently. MoE has been used in many settings, including vision (Ruiz et al., 2021) and GPT-3 (Brown et al., 2020)."
        },
        {
            "heading": "3 METHODS",
            "text": "General problem overview. We consider PDEs of the form F\u03d5(u) = 0, where u : \u2126 \u2192 R is the solution and \u03d5 may represent a variety of parameters including boundary conditions, initial conditions, constant values (e.g., porosity of a medium), or varying parameters (e.g., density or mass). Here, \u2126 defines the spatiotemporal grid. We would like to learn a mapping \u03d5 7\u2192 u\u03b8, where u is parameterized by \u03b8 such that F\u03d5(u\u03b8) = 0. This mapping can be learned by a neural network (NN). The soft constraint enforces F\u03d5(u\u03b8) = 0 by using a penalty term in the loss function. That is, we can minimize ||F\u03d5(u\u03b8)||22 as the loss function.\nEnforcing Physics-Informed Hard Constraints in Neural Networks. We enforce physicsinformed hard constraints in NNs through differentiable optimization. While there are multiple different approaches to do this (de Avila Belbute-Peres et al., 2018; Donti et al., 2021; Amos & Kolter, 2017), our procedure here is most similar to Ne\u0301giar et al. (2023). Let f\u03b8 : \u03d5 7\u2192 b, where b is a set of N scalar-valued functions: b = [b0, b1, . . . bN ] and bi : \u2126 \u2192 R. We refer to b as a set of basis functions. The objective of the hard constraint is to find \u03c9 \u2208 RN such that F\u03d5(b \u00b7\u03c9T ) = 0. In other words, \u03c9 is a linear combination of basis functions b such that the PDE is satisfied. We can solve for \u03c9 using an iterative non-linear least squares solver, such as Levenberg-Marquardt (Nielsen & Madsen, 2010). In practice, the non-linear least squares solver samples a set of x1, . . . , xm points in the spatiotemporal domain to evaluate b. This yields m equations of the form (F\u03d5(b \u00b7 \u03c9T ))(xi) = 0. After solving the non-linear least squares problem, the final solution operator is f\u03b8(\u03d5)(x)\u00b7\u03c9T for x \u2208 \u2126, where f\u03b8 is a NN parameterized by \u03b8.\nTraining Physics-Informed Hard Constraints. Traditional auto-differentiation systems construct a computational graph, where each operation is performed in a \u201cforward pass,\u201d and gradients are computed in a \u201cbackward pass\u201d in reverse order using the chain rule. Training a NN through backpropagation with the output of an iterative non-linear least squares solvers requires the solver to be differentiable. However, iterative non-linear least squares solvers are not differentiable without unrolling each of the iterations. Unrolling the solver is both computationally expensive (i.e., the computation graph grows) and requires storing all intermediate values in the computation graph.\nPhysics-Informed Hard Constraints with Implicit Differentiation. Implicit differentiation, using the implicit function theorem (Blondel et al., 2022), serves as an alternative to standard autodifferentiation. It performs a second non-linear least squares solve, bypassing the need to unroll the computation graph of the iterative solver. This forgoes the need to store the entire computational history of the solver. Next, we define how we use the implicit function theorem in the context of training a NN via enforcing our physics-informed hard constraints.\nThe non-linear least squares solver finds \u03c9 such that F\u03d5(b \u00b7\u03c9T ) = 0. F\u03d5(b \u00b7\u03c9T ) has a non-singular Jacobian \u2202bF\u03d5(b \u00b7 \u03c9T ). By the implicit function theorem, there exists open subsets Sb\u2286Rm\u00d7N and S\u03c9\u2286RN containing b and \u03c9, respectively. There also exists a unique continuous function z\u2217 : Sb \u2192 S\u03c9 such that the following properties hold true:\n\u03c9 = z\u2217(b). Property (1)\nF\u03d5(b \u00b7 z\u2217(b)T ) = 0. Property (2) z\u2217 is differentiable on Sb. Property (3)\nOur goal is to find \u2202F\u03d5(b\u00b7\u03c9 T )\n\u2202\u03b8 , where \u03b8 corresponds to NN parameters. This enables us to perform gradient descent on \u03b8 to minimize the loss ||F\u03d5(f\u03b8(\u03d5) \u00b7 \u03c9T )||22, minimizing the PDE residual. To compute the gradient of the PDE residual, we use Property (1) and differentiate Property (2):\n\u2202F\u03d5(b \u00b7 z\u2217(b)T ) \u2202\u03b8 = \u2202F\u03d5(b \u00b7 \u03c9T ) \u2202b \u00b7 \u2202b \u2202\u03b8 + \u2202F\u03d5(b \u00b7 z\u2217(b)T )\n\u2202z\u2217(b)\ufe38 \ufe37\ufe37 \ufe38 computed via auto-diff.\n\u00b7\u2202z \u2217(b)\n\u2202\u03b8 = 0. (1)\nEq. 1 defines a system of equations, where \u2202z \u2217(b) \u2202\u03b8 is unknown. We can use the same non-linear least squares solver as the forward pass, concluding the backward pass of training the NN through the hard constraint. Further details on the non-linear least squares solve in Eq. 1 can be found in \u00a7A.\nPhysics-Informed Hard Constraints with Mixture-of-Experts (MoE). Until now, we have focused on a single hard constraint with one forward non-linear least squares solve to predict a solution, and one backward solve to train the NN. However, using a single global hard constraint poses multiple challenges. In complicated dynamical systems, the global behavior may drastically vary across the domain, making it difficult for the hard constraint to converge to the right solution. Instead, using multiple constraints over localized locations on the domain can be beneficial to improve constraint adherence on non-sampled points on the mesh. Unfortunately, increased sampling on the mesh is not as simple as using a larger m because the non-linear least squares solve to compute \u03c9 grows with the number of basis functions N and the number of sampled points m. As a result, there exists a max m and N after which it is impractical to directly solve the entire system. This can be mitigated by using a smaller batch size, but as we will show, comes at the cost of training stability (Smith et al., 2018; Keskar et al., 2016).\nTo overcome these challenges, we develop a Mixture-of-Experts (MoE) approach to improve the accuracy and efficiency of physics-informed hard constraints. Suppose we have K experts. The spatiotemporal domain \u2126 is partitioned into K subsets \u2126k, for k = 1 . . .K, corresponding to each expert. Each expert individually solves the constrained optimization problem (F\u03d5(f\u03b8(\u03d5) \u00b7\u03c9Tk ))(xi) = 0 for m sampled points xi \u2208 \u2126k using a non-linear least squares solver. Because the weighting \u03c9k is computed locally, the resulting prediction b \u00b7 \u03c9Tk is a linear weighting of the global basis functions tailored to the expert\u2019s domain \u2126k, which we find leads to more stable training and faster convergence. Each expert is also provided with the global initial and boundary conditions. Given a fixed initial and boundary conditions, the solution that satisfies F\u03d5(u) may be solved point-wise, and solving the constraint over each expert\u2019s domain is equivalent to satisfying the constraint globally.\nThere are multiple potential choices for constructing a domain decomposition \u2126k, and the optimal choice is problem dependent. As a simple 2D example, Fig. 1 uses non-overlapping uniform partitioning along the x dimension. We refer to the center orange boxes, which perform the domain decomposition for the experts, as the MoE router. There are two important nuances to Fig. 1. First, f\u03b8, the function mapping \u03d5 to the basis functions, is a mapping shared by all experts. Our setup is agnostic to the choice of f\u03b8, which can be any arbitrary NN. We use Fourier Neural Operator (FNO) (Li et al., 2021a;b), due to its popularity and promising results. Second, each expert performs an iterative non-linear least squares solve to compute \u03c9k, and the final output is the concatenated outputs across experts. This leads to k independent non-linear least squares solves, which can be parallelized across multiple GPUs.\nAt test time, the same domain decomposition and router is used. The number of sampled points, m, and the parameters of the non-linear least squares solver may be changed (e.g., tolerance), but the domain decomposition remains fixed.\nForward and backwards pass in Mixture-of-Experts. In PI-HC-MoE, the forward pass is a domain decomposition in the spatiotemporal grid (see \u00a7B for an example forward pass). The domain of each basis function is partitioned according to the MoE router. During the backward pass, each expert needs to perform localized implicit differentiation. We extend this formulation from the single hard constraint to the MoE case. Each expert individually computes \u2202z\n\u2217(b) \u2202\u03b8 over \u2126k. The MoE\nrouter reconstructs the overall Jacobian, given individual Jacobians from each expert. To illustrate this, consider a decomposition along only one axis (e.g., spatial as in Fig. 1). The backward pass must reconstruct the Jacobian across all experts:\n\u2202\u03b8z \u2217(b) = [\u2202\u03b8z \u2217 1(b) \u2202\u03b8z \u2217 2(b) . . . \u2202\u03b8z \u2217 K(b)] . (2)\nThe realization of the reconstruction operation is performed using an indicator function and summing across Jacobians:\n\u2202\u03b8z \u2217(b) = \u03a3Kk=1\u2202\u03b8z \u2217 i (b(x)) \u00b7 1x\u2208\u2126k . (3)\nHere, x is a point in the domain of expert k (i.e., any spatiotemporal coordinate in \u2126k). Afterwards, the reassembled Jacobian may be used in auto-differentiation as usual."
        },
        {
            "heading": "4 RESULTS",
            "text": "We demonstrate our method on two challenging non-linear PDEs: 1D diffusion-sorption (\u00a74.1) and 2D turbulent Navier-Stokes (\u00a74.2). For all problem settings, we use a base FNO architecture.\nWe train this model using our method (Physics-Informed Hard Constraint Mixture-of-Experts, or PI-HC-MoE), and compare to training via a physics-informed soft constraint (PI-SC) and physicsinformed hard constraint (PI-HC). For PI-HC and PI-HC-MoE, we use Levenberg-Marquardt as our non-linear least squares solver. For details, see \u00a7C.1 and \u00a7C.2. Data-constrained setting. In both problems, we exclusively look at a data-constrained setting where we assume that at training time, we have no numerical solver solution data available (i.e., no solution data on the interior of the domain). We do so to mimic real-world settings, where it can be expensive to generate datasets for new problem settings (see \u00a7C for further discussion).\nEvaluation details. The training and test sets contain initial conditions drawn from the same distribution, but the test set initial conditions are distinct from the training set. To evaluate all models, we compute numerical solver solutions to compare relative L2 errors on ML predictions using the test set initial conditions. The PDE residual over training on the validation set for diffusion-sorption and Navier-Stokes is included in \u00a7F.For measuring scalability, we use the best trained model for both PI-HC-MoE and PI-HC to avoid ill-conditioning during the non-linear least squares solve. The training step includes the cost to backpropagate and update the model weights. All measurements are taken across 64 training or inference steps on NVIDIA A100 GPUs, and each step includes one batch. We report average per-batch speedup of PI-HC-MoE compared to PI-HC."
        },
        {
            "heading": "4.1 1D DIFFUSION-SORPTION",
            "text": "We study the 1D non-linear diffusion-sorption equation. The diffusion-sorption system describes absorption, adsorption, and diffusion of a liquid through a solid. The governing PDE is defined as:\n\u2202u(x, t)\n\u2202t =\nD R(u(x, t)) \u00b7 \u2202\n2u(x, t)\n\u2202x2 , x \u2208 (0, 1), t \u2208 (0, 500],\nR(u(x, t)) = 1 + 1\u2212 \u03d5 \u03d5 \u00b7 \u03c1s \u00b7 k \u00b7 nf \u00b7 u(x, t)nf\u22121,\nu(0, t) = 1, u(1, t) = D \u00b7 \u2202u(1, t) \u2202x , (Boundary Conditions)\nwhere \u03d5, \u03c1s, D, k and nf are constants defining physical quantities. We use the same physical constants as PDEBench (Takamoto et al., 2022) (see \u00a7C.1 for further details). For both classical numerical methods and ML methods, the singularity at u = 0 poses a hard challenge. The solution trajectory and differential operator are highly non-linear. A standard finite volume solver requires approximately 60 seconds to compute a solution for a 1024\u00d7101 grid (Takamoto et al., 2022).\nProblem Setup. We use initial conditions from PDEBench. Each solution instance is a scalar-field over 1024 spatial and 101 temporal points, where T = 500 seconds (see \u00a7C.1 for further details).\nFor PI-HC-MoE, we use K = 4 experts and do a spatial decomposition with N = 16 basis functions (see \u00a7B for details on inference). Each expert enforces the constraint on a domain of 256 (spatial) \u00d7 101 (temporal). Over the 256\u00d7 101 domain, each expert samples 20k points, leading to a total of 80k points where the PDE constraint is enforced on the domain. PI-HC uses an identical model with\n20k sampled points in the hard constraint. This represents the maximum number of points that we can sample with PI-HC without running out of memory, with a stable batch size. In order to sample more points, a reduction in batch size is required. Our final batch size for PI-HC is 6, and we find that any reduction produces significant training instability, with a higher runtime (see Fig. 4). Thus, our baseline PI-HC model uses the maximum number of sampled points that gives the best training stability. All models are trained with a fixed computational budget of 4000 training iterations.\nResults. We summarize our results in Fig. 2 and Fig. 3. In Fig. 2 (left), we plot the L2 relative percent error on the test set over training steps for PI-SC, PI-HC, and PI-HC-MoE. On the right, we plot the trained model L2 relative percent error on the test set of the final trained models. PISC is unable to converge to a reasonable solution, reflected in the high L2 relative percent error (85.93%\u00b1 5.07%). While PI-HC is able to achieve lower error than PI-SC at 7.55%\u00b1 8.10%, it does worse than PI-HC-MoE (3.60%\u00b1 2.93%). In Fig. 3, we show the predicted ML solutions for PI-SC, PI-HC, and PI-HC-MoE, and the difference between the predicted solution and the numerical solver solution (white indicates zero difference). PI-SC is unable to converge to a reasonable solution, and PI-HC, while closer, is unable to capture the proper dynamics of diffusion-sorption. PI-HC-MoE has the closest correspondence to the numerical solution. Additionally, we explore PIHC-MoE \u2019s generalization to unseen timesteps (\u00a7D) and assess the quality of basis functions (\u00a7E).\nScalability. We compare the scalability of PI-HC-MoE to PI-HC. For evaluation, we plot the number of sampled points on the interior of the domain against the execution time during training and inference, in Fig. 4. PI-HC-MoE maintains near constant execution time as the number of points increases, while PI-HC becomes significantly slower as the number of sampled points crosses 50k\npoints. PI-HC-MoE provides a training speedup of 1.613\u00d7 (102 sampled points) to 3.189\u00d7 (105 sampled points). Notably, PI-HC has a higher standard deviation as the number of sampled points increases. Because PI-HC-MoE partitions the number of sampled points, the individual constraint solved by each expert converges faster. As a result, PI-HC-MoE is more consistent across different data batches and has a much lower variation in runtime.\nNote that a standard finite volume solver takes about 60 seconds to solve for a solution (Takamoto et al., 2022), and so PI-HC and PI-HC-MoE both have inference times faster than a numerical solver. However, PI-HC-MoE is 2.030\u00d7 (102 sampled points) to 3.048\u00d7 (105 sampled points) faster at inference than PI-HC, while also having significantly lower error."
        },
        {
            "heading": "4.2 2D NAVIER-STOKES",
            "text": "The Navier-Stokes equations describe the evolution of a fluid with a given viscosity. We study the vorticity form of the 2D periodic Navier-Stokes equation, where the learning objective is to learn the scalar field vorticity w.\n\u2202w(t, x, y)\n\u2202t + u(t, x, y) \u00b7 \u2207w(t, x, y) = \u03bd\u2206w(t, x, y), t \u2208 [0, T ], (x, y) \u2208 (0, 1)2 (4)\nw = \u2207\u00d7 u, \u2207 \u00b7 u = 0, w(0, x, y) = w0(x, y), (Boundary Conditions)\nwhere u is the velocity vector field, and \u03bd is the viscosity. Similar to Li et al. (2021b) and Raissi et al. (2019), we study the vorticity form of Navier-Stokes to reduce the problem to a scalar field prediction, instead of predicting the vector field u. In our setting, we use a Reynolds number of 1e4 (\u03bd = 1e \u2212 4), representing turbulent flow. Turbulent flow is an interesting and challenging problem due to the complicated evolution of the fluid, which undergoes irregular fluctuations. Many engineering and scientific problems are interested in the turbulent flow case (e.g., rapid currents, wind tunnels, and weather simulations (Nieuwstadt et al., 2016)).\nProblem setup. The training set has a resolution of 64 (x) \u00d7 64 (y) \u00d7 64 (t). Both the training and test sets have a trajectory length of T = 5 seconds. The test set has a resolution of 256 (x) \u00d7 256 (y) \u00d7 64 (t). For both PI-HC and PI-HC-MoE, we use 64 basis functions. We use K = 4 experts and perform a 2 (x) \u00d72 (y) \u00d71 (t) spatiotemporal decomposition. Each expert receives the full temporal grid with 14 of the spatial grid (i.e., 32\u00d732\u00d764 input), and samples 20k points during the constraint step. For the full data generation parameters and architecture details, see \u00a7C.2.\nResults. We visualize representative examples from the 643 test set in Fig. 5, comparing PI-SC, PI-HC, and PI-HC-MoE . In Fig. 5, grey represents zero error. PI-SC is the worst performing model, with significant errors appearing by T = 2. While PI-HC captures most of the dynamics at earlier time steps (T = 1, T = 2), especially compared to PI-SC, PI-HC struggles to adequately capture the behavior of later time steps. In particular, PI-HC fails to capture the evolution of fine features at T = 5. On the 256 \u00d7 256 \u00d7 64 test set, PI-SC attains a relative L2 error of 18.081%\u00b1 3.740%. PI-HC (11.754%\u00b1 2.951%) and PI-HC-MoE (8.298%\u00b1 2.345%) both achieve a lower relative L2 error. PI-HC-MoE consistently attains the lowest error across all three resolutions and has lower variance in prediction quality (box plots visualized in appendix \u00a7C.3).\nScalability. Similar to the diffusion-sorption case, we evaluate the scalability of our approach. We compare the scalability of PIHC-MoE to standard differentiable optimization (i.e., PI-HC) for both the training and test steps across a different number of sampled points in Fig. 6. The training and inference steps are performed with a batch size of 2. At training time, PI-HC scales quadratically with respect to the number of sampled points, and has high variance in per batch training and inference time. PI-HC has a harder constraint system to solve, reflected in the increase in training\ntime. Across both training and inference steps, PI-HC-MoE scales sublinearly and, in practice, remains constant with respect to the number of sampled points. For training, PI-HC-MoE provides a 2.117\u00d7 (102 sampled points) to 12.838\u00d7 (104 sampled points) speedup over PI-HC. At inference time we see speedups of 2.538\u00d7 (102 sampled points) to 12.864\u00d7 (104 sampled points)."
        },
        {
            "heading": "4.3 FINAL TAKEAWAYS",
            "text": "PI-HC-MoE has lower L2 relative error on the diffusion-sorption and Navier-Stokes equations, when compared to both PI-SC and PI-HC. Enabled by the MoE setup, PI-HC-MoE is better able to capture the features for both diffusion-sorption and Navier-Stokes. PI-HC-MoE is also more scalable than the standard differentiable optimization setting represented by PI-HC. Each expert locally computes \u03c9k, allowing for greater flexibility when weighting the basis functions. The experts are better able to use the local dynamics, while satisfying the PDE globally. PI-HC is limited to a linear combination of the basis functions, whereas PI-HC-MoE is able to express piece-wise linear combinations.\nAnother reason we find PI-HC-MoE to outperform PI-HC is through the stability of training. This manifests in two different ways. First, because PI-HC-MoE is more scalable, we are able to use a larger batch size, which stabilizes the individual gradient steps taken. Second, for a given total number of sampled points, the non-linear least square solves performed by PI-HC-MoE are smaller than the global non-linear least squares performed by the hard constraint. Specifically, the size of the constraint for K experts is 1K that of PI-HC. This results in an easier optimization problem, and PI-HC-MoE converges quicker and with greater accuracy."
        },
        {
            "heading": "5 CONCLUSION",
            "text": "We present the physics-informed hard constraint mixture-of-experts (PI-HC-MoE) framework, a new approach to scale hard constraints corresponding to physical laws through an embedded differentiable optimization layer. Our approach deconstructs a differentiable physics hard constraint into smaller experts, which leads to better convergence and faster run times. On two challenging, highly non-linear systems, 1D diffusion-sorption and 2D Navier-Stokes equations, PI-HC-MoE achieves significantly lower errors than standard differentiable optimization using a single hard constraint, as well as soft constraint penalty methods.\nAcknowledgements. This work was initially supported by Laboratory Directed Research and Development (LDRD) funding under Contract Number DE-AC02-05CH11231. It was then supported by the U.S. Department of Energy, Office of Science, Office of Advanced Scientific Computing Research, Scientific Discovery through Advanced Computing (SciDAC) program under contract No. DE-AC02-05CH11231, and in part by the Office of Naval Research (ONR) under grant N0001423-1-2587. This research used resources of the National Energy Research Scientific Computing Center (NERSC), a U.S. Department of Energy Office of Science User Facility located at Lawrence Berkeley National Laboratory, operated under Contract No. DE-AC02-05CH11231. We also thank Geoffrey Ne\u0301giar, Sanjeev Raja, and Rasmus Malik H\u00f8egh Lindrup for their valuable feedback and discussions."
        },
        {
            "heading": "B EXAMPLE INFERENCE PROCEDURE",
            "text": "To demonstrate the inference procedure of PI-HC-MoE, we walk through the forward pass of the 1D diffusion-sorption problem setting, starting from PI-HC and generalizing to the PI-HC-MoE case.\nModel Input and Output. In both PI-HC and PI-HC-MoE, the underlying FNO model is provided with both the initial condition and underlying spatiotemporal grid. Each initial condition is a 1024 dimensional vector (the chosen discretization), representing the spatial coordinates, and is broadcasted across time (t = 500 s), leading to an input of 1024\u00d7 101 for the initial condition. The broadcasted initial condition is concatenated with the spatiotemporal grid with shape 1024\u00d7101\u00d72, for a final input spanning the entire grid with 3 channels (1024\u00d7 101\u00d7 3). The inference procedure of the underlying base NN achitecture is unchanged. In our case, the base NN architecture produces a 1024\u00d7 101\u00d7N tensor representing N basis functions evaluated over the spatiotemporal domain.\nPI-HC (Single Constraint). Each constraint samples M points and solves the PDE equations. Additionally, the input initial condition (1024) and initial condition of the basis functions (1024\u00d7N )\nare provided to the solver. Similarly, the boundary conditions are provided and diffusion-sorption has two boundary conditions at x = 0 and x = 1, which leads to a boundary condition tensor of 2\u00d7 101\u00d7N . The optimal \u03c9 (N ) computed by the non-linear least squares solver satisfies the PDE equations on the M sampled points, as well as the initial and boundary conditions. Finally, \u03c9 is used to compute the entire scalar field by performing a matrix multiply between the basis functions and \u03c9 (1024\u00d7 101\u00d7N \u00b7N = 1024\u00d7 101 predicted scalar field).\nPI-HC-MoE (Multiple Constraints). The MoE router performs a domain decomposition. Assuming K = 4 spatial experts, the 1024\u00d7 101\u00d7N basis function evaluation is deconstructed into four 256 \u00d7 101 \u00d7 N tensors. Each expert performs a similar computation as PI-HC, and notably, the global initial (1024\u00d7N ) and boundary (2\u00d7 101\u00d7N ) conditions are provided to each expert\u2019s non-linear least squares solve. After computing a localized weighting \u03c9k, each expert returns a 256 \u00d7 101 scalar field representing the local predicted solution field. Finally, the MoE router reverses the domain decomposition, assembling the four 256 \u00d7 101 matrices into a final 1024 \u00d7 101 prediction. This final prediction represents the complete constrained output."
        },
        {
            "heading": "C PROBLEM SETTING DETAILS",
            "text": "We use Jax (Bradbury et al., 2018) with Equinox (Kidger & Garcia, 2021) to implement our models. For diffusion-sorption, we use Optimisix\u2019s (Rader & Kidger) Levenberg-Marquardt solver and for Navier-Stokes, we use JaxOpt\u2019s (Blondel et al., 2022) Levenberg-Marquardt solver. In both the PI-HC and PI-HC-MoE cases, we limit the number of iterations to 50.\nData-constrained setting. We exclusively look at the data-starved regime. As a motivating example, in the 1D diffusion-sorption, PDEBench (Takamoto et al., 2022) provides a dataset of 10k solution trajectories. For a difficult problem like diffusion-sorption, the numerical solver used in PDEBench takes over one minute to solve for a solution trajectory. A dataset of 10k would require almost a week of sequential compute time. Additionally, PDEBench only provides a dataset using one set of physical constants (e.g., porosity). Different diffusion mediums require different physical constants, making the problem of generating a comprehensive dataset very computationally expensive. For these reasons, we focus on only training the NN via the PDE residual loss function.\nC.1 ADDITIONAL DETAILS: DIFFUSION-SORPTION\nPhysical Constants and Dataset Details. \u03d5 = 0.29 is the porosity of the diffusion medium. \u03c1s = 2880 is the bulk density. nf = 0.874 is Freundlich\u2019s exponent. Finally, D = 5 \u00b7 10\u22124 is the effective diffusion coefficient.\nThe training set has 8000 unique initial conditions and the test set has 1000 initial conditions, distinctly separate from the training set. We use the same initial conditions from PDEBench (Takamoto et al., 2022).\nArchitecture and Training Details. The base model we use is an FNO (Li et al., 2021a) architecture with 5 Fourier layers, each with 8 modes and 64 hidden feature representation. We use a learning rate of 1e\u22123 with an exponential decay over 4000 training iterations. The tolerance of the Levenberg-Marquardt is set to 1e\u22124.\nC.2 ADDITIONAL DETAILS: 2D NAVIER-STOKES\nData generation. All initial conditions for the training and test set are are generated from a 2D Gaussian random field with a periodic kernel and a length scale of 0.8. The training set has 4000 initial conditions with resolution of 64 (x) \u00d7 64 (y) \u00d7 64 (t). Both the training and test sets have a trajectory length of T = 5 seconds. We generate a test set of 100 solutions with a resolution of 256\u00d7 256 (spatial) and 64 time steps. The error is measured on the original resolution solutions, as well as spatially subsampled versions (128\u00d7 128, 64\u00d7 64).\nArchitecture details. We use an FNO with 8 Fourier layers and 8 modes as the base NN architecture. The Levenberg-Marquardt solver tolerance is set to 1e\u22127 and we use a learning rate of 1e\u22123 with an exponential decay over 20 epochs and a final learning rate of 1e\u22124.\nC.3 ADDITIONAL RESULTS: 2D NAVIER-STOKES\nIn Fig. 7, we include a box plot showing the test set errors on three different spatial resolutions (2562, 1282, 642). The 642 and 1282 solutions are subsampled from the 2562 solution. PI-HC-MoE outperforms PI-HC on all test sets.\nC.4 ADDITIONAL DETAILS: SCALABILITY RESULTS\nWhen conducting our scalability analysis, we measure the per-batch time across 64 training and test steps. We observe large standard deviations in our speedup numbers and provide a short discussion here. In Fig. 4 and Fig. 6, we plot our measured runtimes as a function of the number interior points constrained. In both the diffusion-sorption and Navier-Stokes settings, we observe that PIHC has large standard deviations at a fixed number of sampled points. We attribute this variation to the difficulty of the constraint performed by PI-HC, which causes high fluctuations in the number of non-linear least squares iterations performed. As a result, when we calculate speedup values, the speedup values also have high std deviations. In the main text, we report the mean speedup across all batches for a fixed number of sampled points; for completeness we include the standard deviations here.\nIn the 1D diffusion-sorption setting, we see standard deviations at inference from 0.587 (102 sampled points) to 1.890 (104 sampled points). For training, the standard deviations vary from 0.481 (102 sampled points) to 1.388 (104 sampled points). Analogously, in 2D Navier-Stokes, we see standard deviations from 3.478 (102 sampled points) to 35.917 (104 sampled points) for inference. For training, we measure standard deviations from 2.571 (102 sampled points) to 47.948 (104 sampled points). The large standard deviations are a reflection of the standard deviations of the runtime numbers for PI-HC for both problems."
        },
        {
            "heading": "D ADDITIONAL EXPERIMENT: TEMPORAL GENERALIZATION",
            "text": "We explore PI-HC-MoE\u2019s generalization to temporal values not in the training set, for the diffusionsorption case.\nProblem Setup. In our original problem setting, we predict diffusion-sorption from t = 0 seconds to t = 500 seconds. Here, in order to test generalization to unseen temporal values, we truncate\nthe training spatiotemporal grids to t < 400 (s), i.e., we only train on t \u2208 [0, 400]. After training, PI-SC, PI-HC, and PI-HC-MoE all predict the solution up to t = 500 seconds. We compute the L2 relative error error in prediction for t > 400 (s) (the domain that was unseen during training). The parameters for all 3 models are identical to \u00a74.1. PI-HC-MoE uses K = 4 spatial experts.\nResults. Fig. 8 shows the L2 relative error for t > 400 (s) on the validation set. Both PI-HC (48.047%\u00b1 1.23%) and PI-HC-MoE (14.79%\u00b1 3.00%) outperform PI-SC (805.58%\u00b1 19.06%). While PI-HC is able to do better than PI-SC, PI-HC-MoE is able to generalize the best to future time steps, even without any training instances.\nWe hypothesize that one reason for the performance improvement of PI-HC and PI-HC-MoE comes from test-time constraint enforcement, demonstrating the benefit of hard constraints at inference time. Similar to the results in \u00a74.1, PI-HC-MoE is able better generalize much better to the unseen temporal domain than PI-HC, while also being much more efficient at both training and inference time."
        },
        {
            "heading": "E ABLATION: EVALUATING THE QUALITY OF THE LEARNED BASIS FUNCTIONS",
            "text": "In order to explore the usefulness of our learned basis functions, we conduct an ablation study comparing the result of PI-HC-MoE to a standard cubic interpolation.\nProblem setup. We use the same PI-HC-MoE model from the diffusion-sorption experiments in \u00a74.1, where each expert constrains 20k sampled points (K = 4 experts, 80k total sampled points). The 20k constrained points represents a candidate solution to the PDE where, by the non-linear least squares solve, the PDE equations must be satisfied. Using the 20k points, we perform an interpolation using SciPy\u2019s (Virtanen et al., 2020) 2D Clough-Tocher piecewise cubic interpolation. The interpolated solution is assembled in an identical manner to PI-HC-MoE, representing K = 4 interpolations, and corresponds to the number of experts.\nResults. Fig. 9 compares the relative L2 error on the test set between PI-HC-MoE \u2019s learned basis functions and the interpolated solution. PI-HC-MoE outperforms the interpolation scheme, showing that the learned basis functions provide an advantage over interpolation, and encode additional unique information. We also note that it is likely that with fewer sampled points, the performance gap between PI-HC-MoE and interpolation is likely to be higher."
        },
        {
            "heading": "F PDE RESIDUALS FOR DIFFUSION-SORPTION AND NAVIER-STOKES",
            "text": "We add additional PDE residual loss plots that correspond to the results in \u00a74.1 and \u00a74.2. During the training of all three models (PI-SC, PI-HC, and PI-HC-MoE ), we track the mean PDE residual value across the validation set, plotted in Fig. 10. Across both problem instances, PI-HC-MoE attains the lowest PDE residual, and also has the lowest L2 relative error (see \u00a74.1). For 1D diffusion-sorption, PI-SC initially starts with low PDE residual before increasing near the end of training. The reason for this is that at the beginning of training, when PI-SC is first initialized, the predicted solution is close to the zero function and trivially satisfies the PDE equations, i.e., both \u2202u\u2202t and \u22022u \u2202x2 are zero. However, the overall loss function includes adherence to the initial and boundary conditions and PI-SC is unable to find a parameterization that satisfies the initial condition, boundary conditions, and PDE equations."
        },
        {
            "heading": "G LIMITATIONS AND FUTURE WORK",
            "text": "PI-HC-MoE, though a promising framework for scaling hard constraints, has some limitations.\nHyperparameters. Both PI-HC-MoE and PI-HC are sensitive to hyperparameters. It is not always clear what the correct number of basis functions, sampled points, number of experts, and expert distribution is best suited for a given problem. However, our results show that with only minor hyperparameter tweaking, we were able to attain low error on two challenging dynamical systems. As with many ML methods, hyperparameter optimization is a non-trivial task, and one future direction could be better ways to find the optimal parameters.\nChoice of domain decomposition. Currently, PI-HC-MoE performs a spatiotemporal domain decomposition to assign points to experts. A possible future direction is trying new domain decompositions, and methods for allocating experts. It may be the case that different ways of creating expert domains are better suited for different problem settings.\nBase NN architecture. In this work, we use FNO as our base architecture for PI-HC-MoE and in the future, it may prove fruitful to try new architectures. To some extent, PI-HC-MoE is limited by the expressivity of the underlying NN architecture which learns and predicts the basis functions. PIHC-MoE may perform better on certain tasks that we have not yet explored (e.g., super-resolution, auto-regressive training), and future work could explore the application of PI-HC-MoE to new kinds of tasks."
        }
    ],
    "title": "SCALING PHYSICS-INFORMED HARD CONSTRAINTS WITH MIXTURE-OF-EXPERTS",
    "year": 2024
}