{
    "abstractText": "Accurate traffic forecasting is challenging due to the complex interdependencies of large road networks and abrupt speed changes caused by unexpected events. Recent work has focused on spatial modeling with adaptive graph embedding or graph attention but has paid less attention to the temporal characteristics and effectiveness of in-situ modeling. In this paper, we propose the time-enhanced spatio-temporal attention model (TESTAM) to better capture recurring and nonrecurring traffic patterns with mixture-of-experts model with three experts for temporal modeling, spatio-temporal modeling with a static graph, and spatio-temporal dependency modeling with a dynamic graph. By introducing different experts and properly routing them, TESTAM better captures traffic patterns under various circumstances, including cases of spatially isolated roads, highly interconnected roads, and recurring and non-recurring events. For proper routing, we reformulate a gating problem as a classification task with pseudo labels. Experimental results on three public traffic network datasets, METR-LA, PEMS-BAY, and EXPY-TKY, demonstrate that TESTAM outperforms 13 existing methods in terms of accuracy due to its better modeling of recurring and non-recurring traffic patterns. You can find the official code from https://github.com/HyunWookL/TESTAM",
    "authors": [
        {
            "affiliations": [],
            "name": "Hyunwook Lee"
        },
        {
            "affiliations": [],
            "name": "Sungahn Ko"
        }
    ],
    "id": "SP:61965bcabe2b2cd3593874df91ca6004f58fdc76",
    "references": [
        {
            "authors": [
                "Lei Bai",
                "Lina Yao",
                "Can Li",
                "Xinazhi Wang",
                "Can Wang"
            ],
            "title": "Adaptive graph convolutional recurrent network for traffic forecasting",
            "venue": "In Advances in Neural Information Processing Systems,",
            "year": 2020
        },
        {
            "authors": [
                "Defu Cao",
                "Yujing Wang",
                "Juanyong Duan",
                "Ce Zhang",
                "Xia Zhu",
                "Congrui Huang",
                "Yunhai Tong",
                "Bixiong Xu",
                "Jing Bai",
                "Jie Tong",
                "Qi Zhang"
            ],
            "title": "Spectral temporal graph neural network for multivariate time-series forecasting",
            "venue": "In Advances in Neural Information Processing Systems,",
            "year": 2020
        },
        {
            "authors": [
                "Nikoli Dryden",
                "Torsten Hoefler"
            ],
            "title": "Spatial mixture-of-experts",
            "venue": "In Advances in Neural Information Processing Systems,",
            "year": 2022
        },
        {
            "authors": [
                "David Eigen",
                "Marc\u2019Aurelio Ranzato",
                "Ilya Sutskever"
            ],
            "title": "Learning factored representations in a deep mixture of experts",
            "venue": "In International Conference on Learning Representations,",
            "year": 2014
        },
        {
            "authors": [
                "William Fedus",
                "Barret Zoph",
                "Noam Shazeer"
            ],
            "title": "Switch transformers: Scaling to trillion parameter models with simple and efficient sparsity",
            "venue": "Journal of Machine Learning Research,",
            "year": 2022
        },
        {
            "authors": [
                "Xu Geng",
                "Yaguang Li",
                "Leye Wang",
                "Lingyu Zhang",
                "Qiang Yang",
                "Jieping Ye",
                "Yan Liu"
            ],
            "title": "Spatiotemporal multi-graph convolution network for ride-hailing demand forecasting",
            "venue": "Proceedings of the AAAI Conference on Artificial Intelligence,",
            "year": 2019
        },
        {
            "authors": [
                "Renhe Jiang",
                "Zhaonan Wang",
                "Jiawei Yong",
                "Puneet Jeph",
                "Quanjun Chen",
                "Yasumasa Kobayashi",
                "Xuan Song",
                "Shintaro Fukushima",
                "Toyotaro Suzumura"
            ],
            "title": "Spatio-temporal meta-graph learning for traffic forecasting",
            "venue": "In Proceedings of the AAAI Conference on Artificial Intelligence,",
            "year": 2023
        },
        {
            "authors": [
                "Seungmin Jin",
                "Hyunwook Lee",
                "Cheonbok Park",
                "Hyeshin Chu",
                "Yunwon Tae",
                "Jaegul Choo",
                "Sungahn Ko"
            ],
            "title": "A visual analytics system for improving attention-based traffic forecasting models",
            "venue": "IEE Transaction on Visualization and Computer Graphics,",
            "year": 2023
        },
        {
            "authors": [
                "Seyed Mehran Kazemi",
                "Rishab Goel",
                "Sepehr Eghbali",
                "Janahan Ramanan",
                "Jaspreet Sahota",
                "Sanjay Thakur",
                "Stella Wu",
                "Cathal Smyth",
                "Pascal Poupart",
                "Marcus A. Brubaker"
            ],
            "title": "Time2vec: Learning a vector representation of time",
            "venue": "URL http://arxiv.org/ abs/1907.05321",
            "year": 1907
        },
        {
            "authors": [
                "C. Lee",
                "Y. Kim",
                "S. Jin",
                "D. Kim",
                "R. Maciejewski",
                "D. Ebert",
                "S. Ko"
            ],
            "title": "A visual analytics system for exploring, monitoring, and forecasting road traffic congestion",
            "venue": "IEEE Transactions on Visualization and Computer Graphics,",
            "year": 2020
        },
        {
            "authors": [
                "Hyunwook Lee",
                "Seungmin Jin",
                "Hyeshin Chu",
                "Hongkyu Lim",
                "Sungahn Ko"
            ],
            "title": "Learning to remember patterns: Pattern matching memory networks for traffic forecasting",
            "venue": "In International Conference on Learning Representations,",
            "year": 2022
        },
        {
            "authors": [
                "Yaguang Li",
                "Cyrus Shahabi"
            ],
            "title": "A brief overview of machine learning methods for short-term traffic forecasting and future directions",
            "venue": "SIGSPATIAL Special,",
            "year": 2018
        },
        {
            "authors": [
                "Yaguang Li",
                "Rose Yu",
                "Cyrus Shahabi",
                "Yan Liu"
            ],
            "title": "Diffusion convolutional recurrent neural network: Data-driven traffic forecasting",
            "venue": "In International Conference on Learning Representations,",
            "year": 2018
        },
        {
            "authors": [
                "Ilya Loshchilov",
                "Frank Hutter"
            ],
            "title": "Sgdr: Stochastic gradient descent with warm restarts",
            "venue": "In International Conference on Learning Representations,",
            "year": 2017
        },
        {
            "authors": [
                "Mason McGill",
                "Pietro Perona"
            ],
            "title": "Deciding how to decide: Dynamic routing in artificial neural networks",
            "venue": "In Proceedings of the International Conference on Machine Learning,",
            "year": 2017
        },
        {
            "authors": [
                "Cheonbok Park",
                "Chunggi Lee",
                "Hyojin Bahng",
                "Yunwon Tae",
                "Seungmin Jin",
                "Kihwan Kim",
                "Sungahn Ko",
                "Jaegul Choo"
            ],
            "title": "ST-GRAT: A novel spatio-temporal graph attention networks for accurately forecasting dynamically changing road speed",
            "venue": "In CIKM \u201920: The 29th ACM International Conference on Information and Knowledge Management, Virtual Event,",
            "year": 2020
        },
        {
            "authors": [
                "Carlos Riquelme",
                "Joan Puigcerver",
                "Basil Mustafa",
                "Maxim Neumann",
                "Rodolphe Jenatton",
                "Andr\u00e9 Susano Pinto",
                "Daniel Keysers",
                "Neil Houlsby"
            ],
            "title": "Scaling vision with sparse mixture of experts",
            "venue": "In Advances in Neural Information Processing Systems,",
            "year": 2021
        },
        {
            "authors": [
                "Clemens Rosenbaum",
                "Tim Klinger",
                "Matthew Riemer"
            ],
            "title": "Routing networks: Adaptive selection of non-linear functions for multi-task learning",
            "venue": "In International Conference on Learning Representations,",
            "year": 2018
        },
        {
            "authors": [
                "G. Ryan",
                "A. Mosca",
                "R. Chang",
                "E. Wu"
            ],
            "title": "At a glance: Pixel approximate entropy as a measure of line chart complexity",
            "venue": "IEEE Transactions on Visualization and Computer Graphics,",
            "year": 1941
        },
        {
            "authors": [
                "Chao Shang",
                "Jie Chen",
                "Jinbo Bi"
            ],
            "title": "Discrete graph structure learning for forecasting multiple time series",
            "venue": "In International Conference on Learning Representations,",
            "year": 2021
        },
        {
            "authors": [
                "Noam Shazeer",
                "Azalia Mirhoseini",
                "Krzysztof Maziarz",
                "Andy Davis",
                "Quoc V. Le",
                "Geoffrey E. Hinton",
                "Jeff Dean"
            ],
            "title": "Outrageously large neural networks: The sparsely-gated mixture-of-experts layer",
            "venue": "In International Conference on Learning Representations,",
            "year": 2017
        },
        {
            "authors": [
                "Ashish Vaswani",
                "Noam Shazeer",
                "Niki Parmar",
                "Jakob Uszkoreit",
                "Llion Jones",
                "Aidan N Gomez",
                "\u0141 ukasz Kaiser",
                "Illia Polosukhin"
            ],
            "title": "Attention is all you need",
            "venue": "In Advances in Neural Information Processing Systems,",
            "year": 2017
        },
        {
            "authors": [
                "Eleni I. Vlahogianni",
                "Matthew G. Karlaftis",
                "John C. Golias"
            ],
            "title": "Short-term traffic forecasting: Where we are and where we\u2019re going",
            "venue": "Transportation Research Part C: Emerging Technologies,",
            "year": 2014
        },
        {
            "authors": [
                "Zonghan Wu",
                "Shirui Pan",
                "Guodong Long",
                "Jing Jiang",
                "Chengqi Zhang"
            ],
            "title": "Graph wavenet for deep spatial-temporal graph modeling",
            "venue": "In Proceedings of the International Joint Conference on Artificial Intelligence,",
            "year": 2019
        },
        {
            "authors": [
                "Zonghan Wu",
                "Shirui Pan",
                "Guodong Long",
                "Jing Jiang",
                "Xiaojun Chang",
                "Chengqi Zhang"
            ],
            "title": "Connecting the dots: Multivariate time series forecasting with graph neural networks",
            "venue": "In Proceedings of the 26th ACM SIGKDD International Conference on Knowledge Discovery & Data Mining,",
            "year": 2020
        },
        {
            "authors": [
                "Mingxing Xu",
                "Wenrui Dai",
                "Chunmiao Liu",
                "Xing Gao",
                "Weiyao Lin",
                "Guo-Jun Qi",
                "Hongkai Xiong"
            ],
            "title": "Spatial-temporal transformer networks for traffic flow forecasting",
            "venue": "arXiv preprint arXiv:2001.02908,",
            "year": 2020
        },
        {
            "authors": [
                "Junchen Ye",
                "Leilei Sun",
                "Bowen Du",
                "Yanjie Fu",
                "Hui Xiong"
            ],
            "title": "Coupled layer-wise graph convolution for transportation demand prediction",
            "venue": "Proceedings of the AAAI Conference on Artificial Intelligence,",
            "year": 2021
        },
        {
            "authors": [
                "Bing Yu",
                "Haoteng Yin",
                "Zhanxing Zhu"
            ],
            "title": "Spatio-temporal graph convolutional networks: A deep learning framework for traffic forecasting",
            "venue": "In Proceedings of the International Joint Conference on Artificial Intelligence,",
            "year": 2018
        },
        {
            "authors": [
                "Junbo Zhang",
                "Yu Zheng",
                "Dekang Qi",
                "Ruiyuan Li",
                "Xiuwen Yi"
            ],
            "title": "Dnn-based prediction model for spatio-temporal data",
            "venue": "In Proceedings of the 24th ACM SIGSPATIAL International Conference on Advances in Geographic Information Systems,",
            "year": 2016
        },
        {
            "authors": [
                "Qi Zhang",
                "Jianlong Chang",
                "Gaofeng Meng",
                "Shiming Xiang",
                "Chunhong Pan"
            ],
            "title": "Spatio-temporal graph structure learning for traffic forecasting",
            "venue": "Proceedings of the AAAI Conference on Artificial Intelligence,",
            "year": 2020
        },
        {
            "authors": [
                "Chuanpan Zheng",
                "Xiaoliang Fan",
                "Cheng Wang",
                "Jianzhong Qi"
            ],
            "title": "GMAN: A graph multi-attention network for traffic prediction",
            "venue": "In Proceedings of the AAAI Conference on Artificial Intelligence,",
            "year": 2020
        },
        {
            "authors": [
                "Yanqi Zhou",
                "Tao Lei",
                "Hanxiao Liu",
                "Nan Du",
                "Yanping Huang",
                "Vincent Zhao",
                "Andrew M. Dai",
                "Zhifeng Chen",
                "Quoc V. Le",
                "James Laudon"
            ],
            "title": "Mixture-of-experts with expert choice routing",
            "venue": "In Advances in Neural Information Processing Systems,",
            "year": 2022
        },
        {
            "authors": [
                "Dryden",
                "Hoefler (2022) do"
            ],
            "title": "However, utilizing worstroute avoidance is suboptimal because experts have less opportunities to be specialized for the best routing. Therefore, we adopt the best-route selection loss function for the routing problem. While designing the best-route selection loss function, we have two main concerns: 1) traffic data often shows severe fluctuation, which prevents a model to consistently choose best-fit experts, and 2",
            "year": 2022
        }
    ],
    "sections": [
        {
            "heading": "1 INTRODUCTION",
            "text": "Spatio-temporal modeling in non-Euclidean space has received considerable attention since it can be widely applied to many real-world problems, such as social networks and human pose estimation. Traffic forecasting is a representative real-world problem, which is particularly challenging due to the difficulty of identifying innate spatio-temporal dependencies between roads. Moreover, such dependencies are often influenced by numerous factors, such as weather, accidents, and holidays (Park et al., 2020; Lee et al., 2020; Lee et al., 2022).\nTo overcome the challenges related to spatio-temporal modeling, many deep learning models have been proposed, including graph convolutional networks (GCNs), recurrent neural networks (RNNs), and Transformer. Li et al. (2018) have introduced DCRNN, which injects graph convolution into recurrent units, while Yu et al. (2018) have combined graph convolution and convolutional neural networks (CNNs) to model spatial and temporal features, outperforming traditional methods, such as ARIMA. Although effective, GCN-based methods require prior knowledge of the topological characteristics of spatial dependencies. In addition, as the pre-defined graph relies heavily on the Euclidean distance and empirical laws (Tobler\u2019s first law of geography), ignoring dynamic changes in traffic (e.g., rush hour and accidents), it is hardly an optimal solution (Jiang et al., 2023). GraphWaveNet, proposed by Wu et al. (2019), is the first model to address this limitation by using node embedding, building learnable adjacency matrix for spatial modeling. Motivated by the success of Graph-WaveNet and DCRNN, a line of research has focused on learnable graph structures, such as AGCRN (Bai et al., 2020) and MTGNN (Wu et al., 2020).\nAlthough spatial modeling with learnable static graphs has drastically improved traffic forecasting, researchers have found that it can be further improved by learning networks dynamics among time, named time-varying graph structure. SLCNN (Zhang et al., 2020) and StemGNN (Cao et al.,\n\u2217Corresponding author\n2020) attempt to learn time-varying graph structures by projecting observational data. Zheng et al. (2020) have adopted multi-head attention for improved dynamic spatial modeling with no spatial restrictions, while Park et al. (2020) have developed ST-GRAT, a modified Transformer for traffic forecasting that utilizes graph attention networks (GAT). However, time-varying graph modeling is noise sensitive. Attention-based models can be relatively less noise sensitive, but a recent study reports that they often fail to generate an informative attention map by spreading attention weights over all roads (Jin et al., 2023). MegaCRN (Jiang et al., 2023) utilizes memory networks for graph learning, reducing sensitivity and injecting temporal information, simultaneously. Although effective, aforementioned methods focus on spatial modeling using specific spatial modeling methods, paying less attention to the use of multiple spatial modeling methods for in-situ forecasting.\nDifferent spatial modeling methods have certain advantages for different circumstances. For instance, learnable static graph modeling outperforms dynamic graphs in recurring traffic situations (Wu et al., 2020; Jiang et al., 2023). On the other hand, dynamic spatial modeling is advantageous for non-recurring traffic, such as incidents or abrupt speed changes (Park et al., 2020; Zheng et al., 2020). Park et al. (2020) have revealed that preserving the the road information itself improves forecasting performance, implying the need of temporal-only modeling. Jin et al. (2023) have shown that a static graph built on temporal similarity could lead to performance improvements when combined with a dynamic graph modeling method. Although many studies have discussed the importance of effective spatial modeling for traffic forecasting, few studies have focused on the dynamic use of spatial modeling methods in traffic forecasting (i.e., in-situ traffic forecasting).\nIn this paper, we propose a time-enhanced spatio-temporal attention model (TESTAM), a novel Mixture-of-Experts (MoE) model that enables in-situ traffic forecasting. TESTAM consists of three experts, each of them has different spatial modeling: 1) without spatial modeling, 2) with learnable static graph, 3) with with dynamic graph modeling, and one gating network. Each expert consists of transformer-based blocks with their own spatial modeling methods. Gating networks take each expert\u2019s last hidden state and input traffic conditions, generating candidate routes for in-situ traffic forecasting. To achieve effective training of gating network, we solve the routing problem as a classification problem with two loss functions that are designed to avoid the worst route and lead to the best route. The contributions of this work can be summarized as follows:\n\u2022 We propose a novel Mixture-of-Experts model called TESTAM for traffic forecasting with diverse graph architectures for improving accuracy in different traffic conditions, including recurring and non-recurring situations.\n\u2022 We reformulate the gating problem as a classification problem to have the model better contextualize traffic situations and choose spatial modeling methods (i.e., experts) during training.\n\u2022 The experimental results over the state-of-the-art models using three real-world datasets indicate that TESTAM outperforms existing methods quantitatively and qualitatively."
        },
        {
            "heading": "2 RELATED WORK",
            "text": ""
        },
        {
            "heading": "2.1 TRAFFIC FORECASTING",
            "text": "Deep learning models achieve huge success by effectively capturing spatio-temporal features in traffic forecasting tasks. Previous studies have shown that RNN-based models outperform conventional temporal modeling approaches, such as ARIMA and support vector regression (Vlahogianni et al., 2014; Li & Shahabi, 2018). More recently, substantial research has demonstrated that attentionbased models (Zheng et al., 2020; Park et al., 2020) and CNNs (Yu et al., 2018; Wu et al., 2019; 2020) perform better than RNN-based model in long-term prediction tasks. For spatial modeling, Zhang et al. (2016) have proposed a CNN-based spatial modeling method for Euclidean space. Another line of modeling methods using graph structures for managing complex road networks (e.g., GCNs) have also become popular. However, using GCNs requires building an adjacency matrix, and GCNs depend heavily on pre-defined graph structure.\nTo overcome these difficulties, several approaches, such as graph attention models, have been proposed for dynamic edge importance weighting (Park et al., 2020). Graph-WaveNet (Wu et al., 2019) uses a learnable static adjacency matrix to capture hidden spatial dependencies in training.\nSLCNN (Zhang et al., 2020) and StemGNN (Cao et al., 2020) try to learn a time-varying graph by projecting current traffic conditions. MegaCRN (Jiang et al., 2023) uses memory-based graph learning to construct a noise-robust graph. Despite their effectiveness, forecasting models still suffer from inaccurate predictions due to abruptly changing speeds, instability, and changes in spatial dependency. To address these challenges, we design TESTAM to change its spatial modeling methods based on the traffic context using the Mixture-of-Experts technique."
        },
        {
            "heading": "2.2 MIXTURE OF EXPERTS",
            "text": "The Mixture-of-Experts (MoEs) is a machine learning technique devised by Shazeer et al. (2017) that has been actively researched as a powerful method for increasing model capacities without additional computational costs. MoEs have been used in various machine learning tasks, such as computer vision (Dryden & Hoefler, 2022) and natural language processing (Zhou et al., 2022; Fedus et al., 2022). Recently, MoEs have gone beyond being the purpose of increasing model capacities and are used to \u201cspecialize\u201d each expert in subtasks at specific levels, such as the sample (Eigen et al., 2014; McGill & Perona, 2017; Rosenbaum et al., 2018), token (Shazeer et al., 2017; Fedus et al., 2022), and patch levels (Riquelme et al., 2021). These coarse-grained routing of the MoEs are frequently trained with multiple auxiliary losses, focusing on load balancing (Fedus et al., 2022; Dryden & Hoefler, 2022), but it often causes the experts to lose their opportunity to specialize. Furthermore, MoEs assign identical structures to every expert, eventually leading to limitations caused by the architecture, such as sharing the same inductive bias, which hardly changes. Dryden & Hoefler (2022) have proposed Spatial Mixture-of-Experts (SMoEs) that introduces fine-grained routing to solve the regression problem. SMOEs induce inductive bias via fine-grained, location-dependent routing for regression problems. They utilize one routing classification loss based on the final output losses, penalize gating networks with output error signals, and reduce the change caused by inaccurate routing for better routing and expert specialization. However, SMoEs only attempt to avoid incorrect routing and pay less attention to the best routing. TESTAM differs from existing MoEs in two main ways: it utilizes experts with different spatial modeling methods for better generalization, and it can be optimized with two loss functions\u2013one for avoiding the worst route and another for choosing the best route for better specialization."
        },
        {
            "heading": "3 METHODS",
            "text": ""
        },
        {
            "heading": "3.1 PRELIMINARIES",
            "text": "Problem Definition Let us define a road network as G = (V, E ,A), where V is a set of all roads in road networks with |V| = N , E is a set of edges representing the connectivity between roads, and A \u2208 RN\u00d7N is a matrix representing the topology of G. Given road networks, we formulate our problem as a special version of multivariate time series forecasting that predicts future T graph signals based on T \u2032 historical input graph signals:[\nX (t\u2212T \u2032+1) G , . . . , X (t) G ] f(\u00b7)\u2212\u2212\u2192 [X(t+1)G , . . . , X(t+T )G ], where X(i)G \u2208 RN\u00d7C , C is the number of input features. We aim to train the mapping function f(\u00b7) : RT \u2032\u00d7N\u00d7C \u2192 RT\u00d7N\u00d7C , which predicts the next T steps based on the given T \u2032 observations. For the sake of simplicity, we omit G from XG hereinafter.\nSpatial Modeling Methods in Traffic Forecasting To effectively forecast the traffic signals, we first discuss spatial modeling, which is one of the necessities for traffic data modeling. In traffic forecasting, we can classify spatial modeling methods into four categories: 1) with identity matrix (i.e., multivariate time-series forecasting), 2) with a pre-defined adjacency matrix, 3) with a trainable adjacency matrix, and 4) with attention (i.e., dynamic spatial modeling without prior knowledge). Conventionally, a graph topology A is constructed via an empirical law, including inverse distance (Li et al., 2018; Yu et al., 2018) and cosine similarity (Geng et al., 2019). However, these empirically built graph structures are not necessarily optimal, thus often resulting in poor spatial modeling quality. To address this challenge, a line of research (Wu et al., 2019; Bai et al., 2020; Jiang et al., 2023) is proposed to capture the hidden spatial information. Specifically, a trainable\nfunction g(\u00b7, \u03b8) is used to derive the optimal topological representation A\u0303 as:\nA\u0303 = softmax(relu(g(X(t), \u03b8), g(X(t), \u03b8)\u22a4), (1)\nwhere g(X(t), \u03b8) \u2208 RN\u00d7e, and e is the embedding size. Spatial modeling based on Eq. 1 can be classified into two subcategories according to whether g(\u00b7, \u03b8) depends on X(t). Wu et al. (2019) define g(\u00b7, \u03b8) = E \u2208 RN\u00d7e, which is time-independent and less noise-sensitive but less in-situ modeling. Cao et al. (2020); Zhang et al. (2020) propose time-varying graph structure modeling with g(H(t), \u03b8) = H(t)W , where W \u2208 Rd\u00d7e, projecting hidden states to another embedding space. Ideally, this method models dynamic changes in graph topology, but it is noise-sensitive.\nTo reduce noise-sensitivity and obtain a time-varying graph structure, Zheng et al. (2020) adopt a spatial attention mechanism for traffic forecasting. Given input Hi of node i and its spatial neighbor Ni, they compute spatial attention using multi-head attention as follows:\nH\u2217i = Concat(o (1) i , . . . , o (K) i )W O; o (k) i = \u2211 s\u2208Ni \u03b1i,s \u00b7 f (k)v (Hs) (2)\n\u03b1i,j = exp(ei,j)\u2211\ns\u2208Ni exp(ei,s) ; ei,j =\n( f (k) q (Hi) )( f (k) k (Hj) )\u22a4 \u221a dk , (3)\nwhere WO is a projection layer, dk is a dimension of key vector, and f (k) q (\u00b7), f (k)k (\u00b7), and f (k) v (\u00b7) are query, key, and value projections of the k-th head, respectively. Although effective, these attentionbased approaches still suffer from irregular spatial modeling, such as less accurate self-attention (i.e., from node i to i) (Park et al., 2020) and uniformly distributed uninformative attention, regardless of its spatial relationships (Jin et al., 2023)."
        },
        {
            "heading": "3.2 MODEL ARCHITECTURE",
            "text": "Although transformers are well-established structures for time-series forecasting, it has a couple of problems when used for spatio-temporal modeling: they do not consider spatial modeling, consume considerable memory resources, and have bottleneck problems caused by the autoregressive decoding process. Park et al. (2020) have introduced an improved transformer model with graph attention (GAT), but the model still has auto-regressive properties. To eliminate the autoregressive characteristics while preserving the advantage of the encoder\u2013decoder architecture, TESTAM transfers the\nattention domain through time-enhanced attention and temporal information embedding. As shown in Fig. 1 (left), in addition to temporal information embedding, each expert layer consists of four sublayers: temporal attention, spatial modeling, time-enhanced attention, and point-wise feed-forward neural networks. Each sublayer is connected to a bypass through skip connections. To improve generalization, we apply layer normalization after each sublayer. All experts have the same hidden size and number of layers and differ only in terms of spatial modeling methods.\nTemporal Information Embedding Since temporal features (e.g., time of day) work as a global position with a specific periodicity, we omit position embedding in the original transformer architecture. Furthermore, instead of normalized temporal features, we utilize Time2Vec embedding (Kazemi et al., 2019) for periodicity and linearity modeling. Specifically, for the temporal feature \u03c4 \u2208 N, we represent \u03c4 with h-dimensional embedding vector v(\u03c4) and the learnable parameters wi, \u03d5i for each embedding dimension i as below:\nTIM(\u03c4)[i] = { wiv(\u03c4)[i] + \u03d5i, if i = 0 F(wiv(\u03c4)[i] + \u03d5i) if 1 \u2264 i \u2264 h\u2212 1,\n(4)\nwhere F is a periodic activation function. Using Time2Vec embedding, we enable the model to utilize the temporal information of labels. Here, temporal information embedding of an input sequence is concatenated with other input features and then projected onto the hidden size h.\nTemporal Attention As temporal attention in TESTAM is the same as that of transformers, we describe the benefits of temporal attention. Recent studies (Li et al., 2018; Bai et al., 2020) have shown that attention is an appealing solution for temporal modeling because, unlike recurrent unit-based or convolution-based temporal modeling, it can be used to directly attend to features across time steps with no restrictions. Temporal attention allows parallel computation and is beneficial for long-term sequence modeling. Moreover, it has less inductive bias in terms of locality and sequentiality. Although strong inductive bias can help the training, less inductive bias enables better generalization. Furthermore, for the traffic forecasting problem, causality among roads is an unavoidable factor (Jin et al., 2023) that cannot be easily modeled in the presence of strong inductive bias, such as sequentiality or locality.\nSpatial Modeling Layer In this work, we leverage three spatial modeling layers for each expert, as shown in the middle of Fig. 1: spatial modeling with an identity matrix (i.e., no spatial modeling), spatial modeling with a learnable adjacency matrix (Eq. 1), and spatial modeling with attention (Eq. 2 and Eq. 3). We calculate spatial attention using Eqs. 2 and 3. Specifically, we compute attention with \u2200i\u2208V ,Ni = V , which means attention with no spatial restrictions. This setting enables similarity-based attention, resulting in better generalization.\nInspired by the success of memory-augmented graph structure learning (Jiang et al., 2023; Lee et al., 2022), we propose a modified meta-graph learner that learns prototypes from both spatial graph modeling and gating networks. Our meta-graph learner consists of two individual neural networks with a meta-node bank M \u2208 Rm\u00d7e, where m and e denote total memory items and a dimension of each memory, respectively, a hyper-network (Ha et al., 2017) for generating node embedding conditioned on M, and gating networks to calculate the similarities between experts\u2019 hidden states and queried memory items. In this section, we mainly focus on the hyper-network. We construct a graph structure with a meta-node bank M and a projection WE \u2208 Re\u00d7d as follows:\nE = MWE ; A\u0303 = softmax(relu(EE \u22a4))\nBy constructing a memory-augmented graph, the model achieves better context-aware spatial modeling than that achieved using other learnable static graphs (e.g., graph modeling with E \u2208 RN\u00d7d). Detailed explanations for end-to-end training and meta-node bank queries are provided in Sec. 3.3.\nTime-Enhanced Attention To eliminate the error propagation effects caused by auto-regressive characteristics, we propose a time-enhanced attention layer that helps the model transfer its domain from historical T \u2032 time steps (i.e., source domain) to next T time steps (i.e., target domain). Let\n\u03c4 (t) label = [\u03c4 (t+1), . . . , \u03c4 (t+T )] be a temporal feature vector of the label. We calculate the attention score from the source time step i to the target time step j as:\n\u03b1i,j = exp(ei,j)\u2211T\nk=t+1 exp(ei,k) ,\nei,j = (H(i)W (k) q )(TIM(\u03c4 (j))W (k) k ) \u22a4 \u221a dk , (5)\nwhere dk = d/K, K is the number of heads, and W (k) q ,W (k) k are linear transformation matrices. We can calculate the attention output using the same process as in Eq. 2, except that time-enhanced attention attends to the time steps of each node, whereas Eq. 2 attends to the important nodes at each time step."
        },
        {
            "heading": "3.3 GATING NETWORKS",
            "text": "In this section, we describe the gating networks used for in-situ routing. Conventional MoE models have multiple experts with the same architecture and conduct coarse-grained routing, focusing on increasing model capacity without additional computational costs (Shazeer et al., 2017). However, coarse-grained routing provides experts with limited opportunities for specialization. Furthermore, in the case of the regression problem, existing MoEs hardly change their routing decisions after initialization because the gate is not guided by the gradients of regression tasks, as Dryden & Hoefler (2022) have revealed. Consequently, gating networks cause \u201cmismatches,\u201d resulting in uninformative and unchanging routing. Moreover, using the same architecture for all experts is less beneficial in terms of generalization since they also share the same inductive bias.\nTo resolve this issue, we propose novel memory-based gating networks and two classification losses with regression error-based pseudo labels. Existing memory-based traffic forecasting approaches (Lee et al., 2022; Jiang et al., 2023) reconstruct the encoder\u2019s hidden state with memory items, allowing memory to store typical features from seen samples for pattern matching. In contrast, we aim to learn the direct relationship between input signals and output representations. For node i at time step t, we define the memory-querying process as follows:\nQ (t) i = X (t) i Wq + bqaj = exp(Q (t) i M [j] \u22a4)\u2211m j=1 exp(Q (t) i M [j] \u22a4)\nO (t) i = \u2211m j=1 ajM [j]\n,\nwhere M [i] is the i-th memory item, and Wq and bq are learnable parameters for input projection. Let ze be an output representation of expert e. Given the queried memory O (t) i \u2208 Re, we calculate the routing probability pe as shown below:\nre = g(ze, O (t) i ); pe = re\u2211 e\u2208[e1,...,eE ] re ,\nwhere E is the number of experts. Since we use the similarity between output states and queried memory as the routing probability, solving the routing problem induces memory learning of a typical output representation and input-output relationship. We select the top-1 expert output as final output.\nRouting Classification Losses To enable fine-grained routing that fits the regression problem, we adopt two classification losses: a classification loss to avoid the worst routing and another loss function to find the best routing. Inspired by SMoEs, we define the worst routing avoidance loss as the cross entropy loss with pseudo label le as shown below:\nLworst(p) = \u2212 1\nE \u2211 e lelog(pe) (6)\nle =  1 if L(y, y\u0302) is smaller than q-th quantile and pe = argmax(p) 1/(E \u2212 1) if L(y, y\u0302) is greater than q-th quantile and pe \u0338= argmax(p) 0 otherwise ,\nwhere y\u0302 is the output of the selected expert, and q is an error quantile. If an expert is incorrectly selected, its label becomes zero and the unselected experts have the pseudo label 1/(E \u2212 1), which means that there are equal chances of choosing unselected experts.\nWe also propose the best-route selection loss for more precise routing. However, as traffic data are noisy and contain many nonstationary characteristics, the best-route selection is not an easy task. Therefore, instead of choosing the best routing for every time step and every node, we calculate node-wise routing. Our best-route selection loss is similar to that in Eq. 6, except that it calculates node-wise pseudo labels and the routing probability, and the condition for pseudo labels is changed from \u201cL(y, y\u0302) is greater/smaller than q-th quantile\u201d to \u201cL(y, y\u0302) is greater/smaller than (1 \u2212 q)-th quantile.\u201d Detailed explanations are provided in Appendix A."
        },
        {
            "heading": "4 EXPERIMENTS",
            "text": "In this section, we describe experiments and compare the accuracy of TESTAM with that of existing models. We use three benchmark datasets for the experiments: METR-LA, PEMS-BAY, and EXPYTKY. METR-LA and PEMS-BAY contain four-month speed data recorded by 207 sensors on Los Angeles highways and 325 sensors on Bay Area, respectively (Li et al., 2018). EXPY-TKY consists of three-month speed data collected from 1843 links in Tokyo, Japan. As EXPY-TKY covers a larger number of roads in a smaller area, its spatial dependencies with many abruptly changing speed patterns are more difficult to model than those in METR-LA or PEMS-BAY. METR-LA and PEMSBAY datasets have 5-minute interval speeds and timestamps, whereas EXPY-TKY has 10-minute interval speeds and timestamps. Before training TESTAM, we have performed z-score normalization. In the cases of METR-LA and PEMS-BAY, we use 70% of the data for training, 10% for validation, and 20% for evaluation. For the EXPY-TKY, we utilize the first two months for training and validation and the last month for testing, as in the MegaCRN paper (Jiang et al., 2023)."
        },
        {
            "heading": "4.1 EXPERIMENTAL SETTINGS",
            "text": "For all three datasets, we initialize the parameters and embedding using Xavier initialization. After performing a greedy search for hyperparameters, we set the hidden size d = e = 32, the memory size m = 20, the number of layers l = 3, the number of heads K = 4, the hidden size for the feed-forward networks hff = 128, and the error quantile q = 0.7. We use the Adam optimizer with \u03b21 = 0.9, \u03b22 = 0.98, and \u03f5 = 10\u22129, as in Vaswani et al. (2017). We vary the learning rate during training using the cosine annealing warmup restart scheduler (Loshchilov & Hutter, 2017) according to the formula below:\nlrate = { lrmin + (lrmax \u2212 lrmin) \u00b7 TcurTwarm For the first Twarm steps lrmin + 1 2 (lrmax \u2212 lrmin) ( 1 + cos( TcurTfreq \u03c0) ) otherwise , (7)\nwhere Tcur is the number of steps since the last restart. We use Twarm = Tfreq = 4000, lrmin = 10\u22127 for all datasets and set lrmax = 3 \u2217 10\u22123 for METR-LA and PEMS-BAY and lrmax = 3 \u2217 10\u22124 for EXPY-TKY. We follow the traditional 12-sequence (1 hour) input and 12-sequence output forecasting setting for METR-LA and PEMS-BAY and the 6-sequence (1 hour) input and 6-sequence output setting for EXPY-TKY, as in Jiang et al. (2023). We utilize mean absolute error (MAE) as a loss function and root mean squared error (RMSE) and mean absolute percentage error (MAPE) as evaluation metrics. All experiments are conducted using an RTX 3090 GPU.\nWe compare TESTAM with 13 baseline models: (1) historical average; (2) STGCN (Yu et al., 2018), a model with GCNs and CNNs; (3) DCRNN (Li et al., 2018), a model with graph convolutional recurrent units; (4) Graph-WaveNet (Wu et al., 2019) with a parameterized adjacency matrix; (5) STTN (Xu et al., 2020) and (6) GMAN (Zheng et al., 2020), state-of-the-art attention-based models; (7) MTGNN (Wu et al., 2020), (8) StemGNN (Cao et al., 2020), and (9) AGCRN (Bai et al., 2020), advanced models with an adaptive matrix; (10) CCRNN (Ye et al., 2021), a model with multiple adaptive matrices; (11) GTS (Shang et al., 2021), a model with a graph constructed with long-term historical data; and (12) PM-MemNet (Lee et al., 2022) and (13) MegaCRN (Jiang et al., 2023), state-of-the-art models with memory units."
        },
        {
            "heading": "4.2 EXPERIMENTAL RESULTS",
            "text": "The experimental results are shown in Table 1. TESTAM outperforms all other models, especially in long-term predictions, which are usually more difficult. Note that we use the results reported in the respecive papers after comparing them with reproduced results from official codes provided by the authors. The models with learnable static graphs (Graph-WaveNet, MTGNN, and CCRNN) and dynamic graphs (STTN and GMAN) show competitive performance, indicating that they have certain advantages. In terms of temporal modeling, RNN-based temporal models (DCRNN and AGCRN) show worse performance than the other methods in long-term forecasting due to error-accumulation of RNNs. Conversely, MegaCRN and PM-MemNet maintained their advantages even in long-term forecasting by injecting a memory-augmented representation vector into the decoder. GMAN and StemGNN have performed worse with EXPY-TKY, indicating a disadvantage of the attention methods, such as long-tail problems and uniformly distributed attention (Jin et al., 2023).\nAs EXPY-TKY has a 6\u20139 times larger number of roads than the other two datasets, experimental results with EXPY-TKY highlight the importance of spatial modeling. For example, attention-based spatial modeling methods show disadvantages and the results of modeling with time-varying networks (e.g., StemGNN) suggest that it could not properly capture spatial dependencies. In contrast, our model, TESTAM, shows its superiority to all other models, including those with learnable matrices. The results demonstrate that in-situ spatial modeling is crucial for traffic forecasting."
        },
        {
            "heading": "4.3 ABLATION STUDY",
            "text": "The ablation study has two goals: to evaluate actual improvements achieved by each method, and to test two hypotheses: (1) in-situ modeling with diverse graph structures is advantageous for traffic forecasting and (2) having two loss functions for avoiding the worst route and leading to the best route is effective. To achieve these aims, we have designed a set of TESTAM variants, which are described below:\nw/o gating It uses only the output of the attention experts without ensembles or any other gating mechanism. Memory items are not trained because there are no gradient flows for the adaptive expert or gating networks. This setting results in an architecture similar to that of GMAN.\nEnsemble Instead of using MoEs, the final output is calculated with the weighted summation of the gating networks and each expert\u2019s output. This setting allows the use of all spatial modeling methods but no in-situ modeling.\nworst-route avoidance only It excludes the loss for guiding best route selection. The exclusion of this relatively coarse-grained loss function is based on the fact that coarse-grained routing tends not to change its decisions after initialization (Dryden & Hoefler, 2022).\nReplaced It does not exclude any components. Instead, it replaces identity expert with a GCNbased adaptive expert, reducing spatial modeling diversity. The purpose of this setting is to test the hypothesis that in-situ modeling with diverse graph structures is helpful for traffic forecasting.\nw/o TIM It replaces temporal information embedding (TIM) with simple embedding vectors without periodic activation functions.\nw/o time-enhanced attention It replaces time-enhanced attention with basic temporal attention as we described in Sec. 3.2.\nThe experimental results shown in Table 2 connote that our hypotheses are supported and that TESTAM is a complete and indivisible set. The results of \u201cw/o gating\u201d and \u201censemble\u201d suggest that in-situ modeling greatly improves the traffic forecasting quality. The \u201cw/o gating\u201d results indicate that the performance improvement is not due to our model but due to in-situ modeling itself since this setting lead to performance comparable to that of GMAN (Zheng et al., 2020). \u201cworst-route avoidance only\u201d results indicate that our hypothesis that both of our routing classification losses are crucial for proper routing is valid. Finally, the results of \u201creplaced,\u201d which indicate significantly worse performance even than \u201cworst route avoidance only,\u201d confirm the hypothesis that diverse graph structures is helpful for in-situ modeling. Additional qualitative results with examples are provided in Appendix C."
        },
        {
            "heading": "5 CONCLUSION",
            "text": "In this paper, we propose the time-enhanced spatio-temporal attention model (TESTAM), a novel Mixture-of-Experts model with attention that enables effective in-situ spatial modeling in both recurring and non-recurring situations. By transforming a routing problem into a classification task, TESTAM can contextualize various traffic conditions and choose the most appropriate spatial modeling method. TESTAM achieves superior performance to that of existing traffic forecasting models in three real-world datasets: METR-LA, PEMS-BAY, and EXPY-TKY. The results obtained using the EXPY-TKY dataset indicate that TESTAM is highly advantageous for large-scale graph structures, which are more applicable to real-world problems. We have also obtained qualitative results to visualize when and where TESTAM chooses specific graph structures. In future work, we plan to further improve and generalize TESTAM for the other spatio-temporal and multivariate time series forecasting tasks."
        },
        {
            "heading": "ACKNOWLEDGMENTS",
            "text": "This work was supported by the National Research Foundation of Korea (NRF) grant funded by the Korea government (MSIT) (No.RS-2023-00218913, No. 2021R1A2C1004542), by the Institute of Information & Communications Technology Planning & Evaluation (IITP) grants (No. 2020-0- 01336\u2013Artificial Intelligence Graduate School Program, UNIST), and by the Green Venture R&D Program (No. S3236472), funded by the Ministry of SMEs and Startups (MSS, Korea)"
        },
        {
            "heading": "A ROUTING CLASSIFICATION LOSS FUNCTION",
            "text": "In this section, we provide detailed information on the routing classification loss function. Both functions for worst-route avoidance and best-route selection are cross-entropy loss functions with different pseudo labels and routing levels. For the worst-route avoidance, we compute fine-grained routing for each point of each road, as Dryden & Hoefler (2022) do. However, utilizing worstroute avoidance is suboptimal because experts have less opportunities to be specialized for the best routing. Therefore, we adopt the best-route selection loss function for the routing problem. While designing the best-route selection loss function, we have two main concerns: 1) traffic data often shows severe fluctuation, which prevents a model to consistently choose best-fit experts, and 2) the best-route selection itself is a more complex task than worst-route avoidance, resulting in the model being hardly trained with fine-grained routing. To overcome those challenges, we have decided to construct node-wise best-route selection loss.\nA.1 WORST-ROUTE AVOIDANCE LOSS\nFor the worst-route avoidance loss function, we have built our pseudo label le as Eq. 6. In this section, we describe how those labels are chosen. Given prediction Y\u0302 \u2208 RN\u00d7T and ground truth Y \u2208 RN\u00d7T , we have point-wise distance L(Y, Y\u0302 ) \u2208 RN\u00d7T between prediction and ground truth. Given point-wise distances and error quantile q, we say that routing of road n at time t is incorrect (or the worst routing) if L(yn,t, y\u0302n,t) is greater than q-th quantile. Therefore, if L(yn,t, y\u0302n,t) is greater than q-th quantile, the pseudo label of the selected expert will be zero, and the labels for the other unselected experts will be 1/(E \u2212 1), where E is total number of experts. However, if L(yn,t, y\u0302n,t) is smaller than q-th quantile, which means it is correctly routed and the worst route is avoided, the selected experts will have a pseudo label of one and the other experts will have a pseudo label of zero. Formally, we can define pseudo label of expert e as follows:\nle =  1 if L(y, y\u0302) is smaller than q-th quantile and pe = argmax(p) 1/(E \u2212 1) if L(y, y\u0302) is greater than q-th quantile and pe \u0338= argmax(p) 0 otherwise\nA.2 BEST-ROUTE SELECTION LOSS\nFor the best-route selection loss function, we define node-wise pseudo labels by converting each condition of pseudo labeling for worst-route avoidance. For worst-route avoidance, we assume that the routing is incorrect (i.e., the worst) if L(yn,ty\u0302n,t) is greater than q-th quantile. In the best-route selection, we define that the routing is correct (i.e., best) if L(yny\u0302n) is smaller than 1\u2212q-th quantile; otherwise, its incorrectly routed, as shown below:\nle =  1 if L(y, y\u0302) is smaller than 1\u2212 q-th quantile and pe = argmax(p) 1/(E \u2212 1) if L(y, y\u0302) is greater than 1\u2212 q-th quantile and pe \u0338= argmax(p) 0 otherwise"
        },
        {
            "heading": "B COMPUTATIONAL COST ANALYSIS",
            "text": "For the computational cost analysis, we use five models as baselines: 1) STGCN (Yu et al., 2018), the lightest model that utilizes GCNs and CNNs to forecast 1-step future traffic condition; 2) DCRNN (Li et al., 2018), a well-known traffic forecasting model with graph-convolutional recurrent units; 3) Graph-WaveNet (Wu et al., 2019), a model that forecasts values by parallel computation with GCNs and CNNs; 4) GMAN (Zheng et al., 2020), a spatio-temporal attention model for traffic forecasting, and 5) MegaCRN (Jiang et al., 2023), one of state-of-the-art models using GCRNN and memory network concepts.\nWe have investigated other models for comparison but decided to exclude them after careful considerations. For example, we have excluded MTGNN and StemGNN since they are an improved version of Graph-WaveNet and have similar computational costs compared to Graph-WaveNet. Similarly, AGCRN, CCRNN, and GTS are excluded from baselines because they are variants of DCRNN, with few changes in computational costs. PM-MemNet and MegaCRN utilize sequenceto-sequence modeling with shared memory units; however, PM-MemNet experiences computational bottleneck with its stacked memory units, which requires L times larger computational costs than those of MegaCRN.\nEven though TESTAM utilizes three individual experts for the prediction, we emphasize that it has a smaller number of parameters compared to the other models due to its small number of layers per each expert, which highly affects the computational costs. Furthermore, TESEAM only uses the encoder architecture of the transformer with a time-enhanced attention module that enables parallel computation, eliminating a computational bottleneck caused by the decoding process. As a result, in terms of computational costs, TESTAM is two times cheaper than the attention-based model (i.e., GMAN), illustrating a similar training time with DCRNN. Furthermore, in the inference phase, TESTAM shows the second fastest computation with the smallest number of the parameters."
        },
        {
            "heading": "C DETAILED EXPERIMENTAL RESULTS",
            "text": "Table 4 presents experimental results under various environment settings. In the table, we pose three scenarios: (I), (H), and (E). Each scenario represents difficult conditions in making accurate forecasting. (I) is a set of isolated roads, chosen by considering spatial locations and quantitative analysis results on the adjacency matrix. (H) is the hard-to-predict roads, including intersections and the roads with high traffic fluctuations. We have determined roads for (H) by visually exploring the roads (for intersections) and by selecting the roads with top 10% entropy-based time-series complexity. (E) contains roads and time with sudden events, including accidents, traffic controls, or holidays (e.g., Christmas). In the experiments, we compare the performances of three baselines with TESTAM, which are selected as a representative model for each spatial modeling method.\nAs shown in Table 4, TESTAM outperforms other models in non-recurring situations (i.e., (E)) and the roads that have unique spatial and topological features ((I) and (E)). Especially, TESTAM consistently proves its superiority for the roads with spatially unique features, outperforming existing models from 4% to 7% in general. Among all of three baselines, we observe that the attentionbased modeling method has better encoded spatial information for most of the hard-to-predict scenarios. However, there are cases where the attention-based model fails, such as PEMS-BAY (I) or PEMS-BAY (H). From the perspective of temporal modeling, the attention-based modeling method indicates better long-term forecasting performance, while CNN- and RNN-based modeling methods are advantageous in short-term forecasting. TESTAM, in contrast, despite of its temporal modeling methods, it outperforms all the baselines in terms of both short-term and long-term forecasting cases. The results indicate that temporal information embedding and time-enhanced attention help the model to effectively transfer information from the input domain to the output domain.\nC.1 QUALITATIVE EVALUATION\nWe perform a qualitative evaluation on TESTAM by visualizing the impact of our context-aware spatial modeling in four different types of cases: 1) hard-to-predict roads with recurring patterns; 2) isolated roads (I); 3) roads with unique traffic patterns; and 4) roads with non-recurring patterns for evaluating the event awareness of TESTAM. We use the EXPY-TKY dataset, which contains complex urban road networks with various traffic patterns.\nRecurring Patterns on Hard-to-Predict Roads With the hard-to-predict roads, we observe that previous models often fail to effectively encode the spatial and temporal correlation of the roads, as Fig. 2 shows. For example, Road 1349 is a highway entrance located near the Tokyo station that has one of the largest traffic volumes in Tokyo and accordingly has severe fluctuation in data. Because of the fluctuations and complex spatio-temporal dependencies of the roads, prior models have shown their limitations in spatial modeling. In particular, Graph-WaveNet (the green line in Fig. 2), which relies on the learnable static graph, fails to timely catch both the speed drop and rise in the red box of Fig. 2. However, GMAN and MegaCRN (the red and violet lines) properly model the ends of rush hour, but they also fail to predict the start of rush hour. Furthermore, MegaCRN exhibits noise-sensitive behavior on Dec. 14th (top-left) and 17th (bottom-right) in Fig. 2.\nSpatially Isolated Roads (I) When forecasting spatially isolated roads, the model should focus on the road itself, instead of referring to the other roads, which is less informative for prediction.\nHowever, since existing models have less consideration for the importance of self-referencing, they fail to properly model rapid speed changes (e.g., noon in Fig. 3), or they become confused by information the other roads (MegaCRN at 15:00 on Dec 3rd in Fig. 3), resulting in poor forecasting. In contrast, TESTAM accurately forecasts the rapid speed changes that occurred at 3:00 and 12:00, as it enhances temporal modeling with identity experts, temporal information embedding, and a time-enhanced attention layer.\nRoads with Unique Traffic Patterns: The case of a Highway Ramp In the EXPY-TKY, there are many roads showing unique patterns due to complex urban road networks and various traffic behaviors (e.g., commuting and traveling). Road 1111 is a highway ramp located in Shibuya and has unique patterns. One unique pattern of the road is that it tends to have lower speed than 30km/h for all day, except 3:00 (the red box in Fig. 4). GMAN and Graph-WaveNet cannot handle such unique patterns properly, failing to model the increasing speed at 3:00. On the other hand, MegaCRN predicts a high-speed situation by its pattern-awareness of memory units, but it still fails to timely forecast it. In contract, TESTAM timely forecasts the traffic changes, revealing its superiority for modeling the unique behaviors of roads, as shown in Fig. 4.\nEvent-Aware Forecasting Case We qualitatively evaluate and show the importance of contextaware spatial modeling in improving forecasting performance in various traffic conditions, such as sudden traffic control. Fig. 5 visualizes the recurring and non-recurring traffic conditions caused by traffic control for heavy snow. Because of unexpected traffic controls, there exist sudden speed drops from morning to noon. In such a non-recurring traffic condition, TESTAM shows better forecasting results due to its context-awareness. GMAN and MegaCRN partially capture the sudden changes but cannot make timely predictions."
        },
        {
            "heading": "D DETAILED SELECTION PROCEDURES AND LOCATIONS OF THE ROADS FOR CASE STUDY",
            "text": "In this section, we describe how we selected roads and time for each scenario, (I), (H), and (E). In the cases of (I) and (H), we extracted the roads regardless of time.\nSpatially Isolated Roads (I) We have selected spatially isolated roads with two procedures: 1) investigating network topology; and 2) filtering out them by visually investigating their locations. From the investigation of network topology, we found that there are total 262 roads without any connection. However, the random sampling process for building traffic dataset makes the network topology be sparse, which could not fully represent the connectivity in the real-world. Therefore, instead of directly utilize total 262 roads, we filter them out by visual investigation. After visual investigation, we have filtered out 150 roads from the list and added 50 roads to the list. Finally, we have total 162 roads for (I), as shown in Fig. 6.\nHard-to-Predict Roads (H) For the hard-to-predict roads (H), we conduct two selection processes, visual exploration and entropy-based time-series complexity. Inspired by Ryan et al. (2019), we use entropy-based time-series complexity, which could measure noise level and unpredictability of changes in a series of points by estimating the probability of whether similar patterns will be repeated. From whole set of 1843 roads, we have extracted the 184 roads with the top 10% largest entropy, which are the most unpredictable roads. Furthermore, we additionally insert 34 hard-topredict roads, such as intersections, ramp, and highway entrances by visually investigating roads. We finalized our list as shown in Fig. 7 left.\nRoads and Time with Sudden Events (E) The circumstances in (E) are especially important, since they are location- and time-specific events, and finding those samples requires tremendous efforts. In this paper, we have found the events with two strategies: 1) find specific time intervals (e.g., Christmas) of hard-to-predict roads (Fig. 7 left); and 2) find traffic controls and constructions that\nare relatively easy to find than accidents and have credible source, including official announcements from the Metropolitan Expressway Co., Ltd1. As a result, we have chosen the data at holiday intervals in hard-to-predict roads and the roads and intervals in construction or sudden traffic controls for (E).\n1https://www.shutoko.co.jp/"
        }
    ],
    "year": 2024
}